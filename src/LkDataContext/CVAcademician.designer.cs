#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LkDataContext
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CVAcademician")]
	public partial class CVAcademicianDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActivityType(ActivityType instance);
    partial void UpdateActivityType(ActivityType instance);
    partial void DeleteActivityType(ActivityType instance);
    partial void InsertThirdUser(ThirdUser instance);
    partial void UpdateThirdUser(ThirdUser instance);
    partial void DeleteThirdUser(ThirdUser instance);
    partial void InsertCdIndustry(CdIndustry instance);
    partial void UpdateCdIndustry(CdIndustry instance);
    partial void DeleteCdIndustry(CdIndustry instance);
    partial void InsertCdRegion(CdRegion instance);
    partial void UpdateCdRegion(CdRegion instance);
    partial void DeleteCdRegion(CdRegion instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertCourseType(CourseType instance);
    partial void UpdateCourseType(CourseType instance);
    partial void DeleteCourseType(CourseType instance);
    partial void InsertDepart(Depart instance);
    partial void UpdateDepart(Depart instance);
    partial void DeleteDepart(Depart instance);
    partial void InsertDepartAdmin(DepartAdmin instance);
    partial void UpdateDepartAdmin(DepartAdmin instance);
    partial void DeleteDepartAdmin(DepartAdmin instance);
    partial void InsertDepartMessage(DepartMessage instance);
    partial void UpdateDepartMessage(DepartMessage instance);
    partial void DeleteDepartMessage(DepartMessage instance);
    partial void InsertEducation(Education instance);
    partial void UpdateEducation(Education instance);
    partial void DeleteEducation(Education instance);
    partial void InsertEmailTemplate(EmailTemplate instance);
    partial void UpdateEmailTemplate(EmailTemplate instance);
    partial void DeleteEmailTemplate(EmailTemplate instance);
    partial void InsertEnterprise(Enterprise instance);
    partial void UpdateEnterprise(Enterprise instance);
    partial void DeleteEnterprise(Enterprise instance);
    partial void InsertEnterpriseBatchRelative(EnterpriseBatchRelative instance);
    partial void UpdateEnterpriseBatchRelative(EnterpriseBatchRelative instance);
    partial void DeleteEnterpriseBatchRelative(EnterpriseBatchRelative instance);
    partial void InsertEnterpriseEmailTemplate(EnterpriseEmailTemplate instance);
    partial void UpdateEnterpriseEmailTemplate(EnterpriseEmailTemplate instance);
    partial void DeleteEnterpriseEmailTemplate(EnterpriseEmailTemplate instance);
    partial void InsertEnterpriseJob(EnterpriseJob instance);
    partial void UpdateEnterpriseJob(EnterpriseJob instance);
    partial void DeleteEnterpriseJob(EnterpriseJob instance);
    partial void InsertEnterpriseJobReferraler(EnterpriseJobReferraler instance);
    partial void UpdateEnterpriseJobReferraler(EnterpriseJobReferraler instance);
    partial void DeleteEnterpriseJobReferraler(EnterpriseJobReferraler instance);
    partial void InsertEnterpriseJobReferralerRemark(EnterpriseJobReferralerRemark instance);
    partial void UpdateEnterpriseJobReferralerRemark(EnterpriseJobReferralerRemark instance);
    partial void DeleteEnterpriseJobReferralerRemark(EnterpriseJobReferralerRemark instance);
    partial void InsertEnterpriseJobRequester(EnterpriseJobRequester instance);
    partial void UpdateEnterpriseJobRequester(EnterpriseJobRequester instance);
    partial void DeleteEnterpriseJobRequester(EnterpriseJobRequester instance);
    partial void InsertEnterpriseJobRequestQueue(EnterpriseJobRequestQueue instance);
    partial void UpdateEnterpriseJobRequestQueue(EnterpriseJobRequestQueue instance);
    partial void DeleteEnterpriseJobRequestQueue(EnterpriseJobRequestQueue instance);
    partial void InsertEnterpriseRecruitBatch(EnterpriseRecruitBatch instance);
    partial void UpdateEnterpriseRecruitBatch(EnterpriseRecruitBatch instance);
    partial void DeleteEnterpriseRecruitBatch(EnterpriseRecruitBatch instance);
    partial void InsertEnterpriseScope(EnterpriseScope instance);
    partial void UpdateEnterpriseScope(EnterpriseScope instance);
    partial void DeleteEnterpriseScope(EnterpriseScope instance);
    partial void InsertEnterpriseType(EnterpriseType instance);
    partial void UpdateEnterpriseType(EnterpriseType instance);
    partial void DeleteEnterpriseType(EnterpriseType instance);
    partial void InsertEnterpriseVisited(EnterpriseVisited instance);
    partial void UpdateEnterpriseVisited(EnterpriseVisited instance);
    partial void DeleteEnterpriseVisited(EnterpriseVisited instance);
    partial void InsertFamilyAccount(FamilyAccount instance);
    partial void UpdateFamilyAccount(FamilyAccount instance);
    partial void DeleteFamilyAccount(FamilyAccount instance);
    partial void InsertJobRequestRecruitStage(JobRequestRecruitStage instance);
    partial void UpdateJobRequestRecruitStage(JobRequestRecruitStage instance);
    partial void DeleteJobRequestRecruitStage(JobRequestRecruitStage instance);
    partial void InsertMailQueue(MailQueue instance);
    partial void UpdateMailQueue(MailQueue instance);
    partial void DeleteMailQueue(MailQueue instance);
    partial void InsertMarjor(Marjor instance);
    partial void UpdateMarjor(Marjor instance);
    partial void DeleteMarjor(Marjor instance);
    partial void InsertMessageBox(MessageBox instance);
    partial void UpdateMessageBox(MessageBox instance);
    partial void DeleteMessageBox(MessageBox instance);
    partial void InsertPublishActivity(PublishActivity instance);
    partial void UpdatePublishActivity(PublishActivity instance);
    partial void DeletePublishActivity(PublishActivity instance);
    partial void InsertPublishActivityAttachment(PublishActivityAttachment instance);
    partial void UpdatePublishActivityAttachment(PublishActivityAttachment instance);
    partial void DeletePublishActivityAttachment(PublishActivityAttachment instance);
    partial void InsertRecruitFlowSetted(RecruitFlowSetted instance);
    partial void UpdateRecruitFlowSetted(RecruitFlowSetted instance);
    partial void DeleteRecruitFlowSetted(RecruitFlowSetted instance);
    partial void InsertRewriteRule(RewriteRule instance);
    partial void UpdateRewriteRule(RewriteRule instance);
    partial void DeleteRewriteRule(RewriteRule instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertStudentActivity(StudentActivity instance);
    partial void UpdateStudentActivity(StudentActivity instance);
    partial void DeleteStudentActivity(StudentActivity instance);
    partial void InsertStudentActivityAttachment(StudentActivityAttachment instance);
    partial void UpdateStudentActivityAttachment(StudentActivityAttachment instance);
    partial void DeleteStudentActivityAttachment(StudentActivityAttachment instance);
    partial void InsertStudentActivityComment(StudentActivityComment instance);
    partial void UpdateStudentActivityComment(StudentActivityComment instance);
    partial void DeleteStudentActivityComment(StudentActivityComment instance);
    partial void InsertStudentCourse(StudentCourse instance);
    partial void UpdateStudentCourse(StudentCourse instance);
    partial void DeleteStudentCourse(StudentCourse instance);
    partial void InsertStudentCourseScore(StudentCourseScore instance);
    partial void UpdateStudentCourseScore(StudentCourseScore instance);
    partial void DeleteStudentCourseScore(StudentCourseScore instance);
    partial void InsertStudentDailyEssay(StudentDailyEssay instance);
    partial void UpdateStudentDailyEssay(StudentDailyEssay instance);
    partial void DeleteStudentDailyEssay(StudentDailyEssay instance);
    partial void InsertStudentDailyEssayComment(StudentDailyEssayComment instance);
    partial void UpdateStudentDailyEssayComment(StudentDailyEssayComment instance);
    partial void DeleteStudentDailyEssayComment(StudentDailyEssayComment instance);
    partial void InsertStudentDictory(StudentDictory instance);
    partial void UpdateStudentDictory(StudentDictory instance);
    partial void DeleteStudentDictory(StudentDictory instance);
    partial void InsertStudentFamilyAccount(StudentFamilyAccount instance);
    partial void UpdateStudentFamilyAccount(StudentFamilyAccount instance);
    partial void DeleteStudentFamilyAccount(StudentFamilyAccount instance);
    partial void InsertStudentJobExpect(StudentJobExpect instance);
    partial void UpdateStudentJobExpect(StudentJobExpect instance);
    partial void DeleteStudentJobExpect(StudentJobExpect instance);
    partial void InsertStudentPhoto(StudentPhoto instance);
    partial void UpdateStudentPhoto(StudentPhoto instance);
    partial void DeleteStudentPhoto(StudentPhoto instance);
    partial void InsertStudentPhotoComment(StudentPhotoComment instance);
    partial void UpdateStudentPhotoComment(StudentPhotoComment instance);
    partial void DeleteStudentPhotoComment(StudentPhotoComment instance);
    partial void InsertStudentPhotoVisit(StudentPhotoVisit instance);
    partial void UpdateStudentPhotoVisit(StudentPhotoVisit instance);
    partial void DeleteStudentPhotoVisit(StudentPhotoVisit instance);
    partial void InsertStudentProfessional(StudentProfessional instance);
    partial void UpdateStudentProfessional(StudentProfessional instance);
    partial void DeleteStudentProfessional(StudentProfessional instance);
    partial void InsertStudentProfessionalAttachment(StudentProfessionalAttachment instance);
    partial void UpdateStudentProfessionalAttachment(StudentProfessionalAttachment instance);
    partial void DeleteStudentProfessionalAttachment(StudentProfessionalAttachment instance);
    partial void InsertStudentProject(StudentProject instance);
    partial void UpdateStudentProject(StudentProject instance);
    partial void DeleteStudentProject(StudentProject instance);
    partial void InsertStudentProjectAttachment(StudentProjectAttachment instance);
    partial void UpdateStudentProjectAttachment(StudentProjectAttachment instance);
    partial void DeleteStudentProjectAttachment(StudentProjectAttachment instance);
    partial void InsertStudentProjectComment(StudentProjectComment instance);
    partial void UpdateStudentProjectComment(StudentProjectComment instance);
    partial void DeleteStudentProjectComment(StudentProjectComment instance);
    partial void InsertStudentScore(StudentScore instance);
    partial void UpdateStudentScore(StudentScore instance);
    partial void DeleteStudentScore(StudentScore instance);
    partial void InsertStudentVisited(StudentVisited instance);
    partial void UpdateStudentVisited(StudentVisited instance);
    partial void DeleteStudentVisited(StudentVisited instance);
    partial void InsertSystemLog(SystemLog instance);
    partial void UpdateSystemLog(SystemLog instance);
    partial void DeleteSystemLog(SystemLog instance);
    partial void InsertTeacher(Teacher instance);
    partial void UpdateTeacher(Teacher instance);
    partial void DeleteTeacher(Teacher instance);
    partial void InsertTeacherGroup(TeacherGroup instance);
    partial void UpdateTeacherGroup(TeacherGroup instance);
    partial void DeleteTeacherGroup(TeacherGroup instance);
    partial void InsertTeacherRelativeCourse(TeacherRelativeCourse instance);
    partial void UpdateTeacherRelativeCourse(TeacherRelativeCourse instance);
    partial void DeleteTeacherRelativeCourse(TeacherRelativeCourse instance);
    partial void InsertTeacherRelativeGroup(TeacherRelativeGroup instance);
    partial void UpdateTeacherRelativeGroup(TeacherRelativeGroup instance);
    partial void DeleteTeacherRelativeGroup(TeacherRelativeGroup instance);
    #endregion
		
		public CVAcademicianDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CVAcademicianDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CVAcademicianDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CVAcademicianDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActivityType> ActivityTypes
		{
			get
			{
				return this.GetTable<ActivityType>();
			}
		}
		
		public System.Data.Linq.Table<ThirdUser> ThirdUsers
		{
			get
			{
				return this.GetTable<ThirdUser>();
			}
		}
		
		public System.Data.Linq.Table<CdConfig> CdConfigs
		{
			get
			{
				return this.GetTable<CdConfig>();
			}
		}
		
		public System.Data.Linq.Table<CdIndustry> CdIndustries
		{
			get
			{
				return this.GetTable<CdIndustry>();
			}
		}
		
		public System.Data.Linq.Table<CdRegion> CdRegions
		{
			get
			{
				return this.GetTable<CdRegion>();
			}
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<CourseType> CourseTypes
		{
			get
			{
				return this.GetTable<CourseType>();
			}
		}
		
		public System.Data.Linq.Table<Depart> Departs
		{
			get
			{
				return this.GetTable<Depart>();
			}
		}
		
		public System.Data.Linq.Table<DepartAdmin> DepartAdmins
		{
			get
			{
				return this.GetTable<DepartAdmin>();
			}
		}
		
		public System.Data.Linq.Table<DepartMessage> DepartMessages
		{
			get
			{
				return this.GetTable<DepartMessage>();
			}
		}
		
		public System.Data.Linq.Table<Education> Educations
		{
			get
			{
				return this.GetTable<Education>();
			}
		}
		
		public System.Data.Linq.Table<EmailTemplate> EmailTemplates
		{
			get
			{
				return this.GetTable<EmailTemplate>();
			}
		}
		
		public System.Data.Linq.Table<Enterprise> Enterprises
		{
			get
			{
				return this.GetTable<Enterprise>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseBatchRelative> EnterpriseBatchRelatives
		{
			get
			{
				return this.GetTable<EnterpriseBatchRelative>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseEmailTemplate> EnterpriseEmailTemplates
		{
			get
			{
				return this.GetTable<EnterpriseEmailTemplate>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseJob> EnterpriseJobs
		{
			get
			{
				return this.GetTable<EnterpriseJob>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseJobReferraler> EnterpriseJobReferralers
		{
			get
			{
				return this.GetTable<EnterpriseJobReferraler>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseJobReferralerRemark> EnterpriseJobReferralerRemarks
		{
			get
			{
				return this.GetTable<EnterpriseJobReferralerRemark>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseJobRequester> EnterpriseJobRequesters
		{
			get
			{
				return this.GetTable<EnterpriseJobRequester>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseJobRequestQueue> EnterpriseJobRequestQueues
		{
			get
			{
				return this.GetTable<EnterpriseJobRequestQueue>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseRecruitBatch> EnterpriseRecruitBatches
		{
			get
			{
				return this.GetTable<EnterpriseRecruitBatch>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseScope> EnterpriseScopes
		{
			get
			{
				return this.GetTable<EnterpriseScope>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseType> EnterpriseTypes
		{
			get
			{
				return this.GetTable<EnterpriseType>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseVisited> EnterpriseVisiteds
		{
			get
			{
				return this.GetTable<EnterpriseVisited>();
			}
		}
		
		public System.Data.Linq.Table<FamilyAccount> FamilyAccounts
		{
			get
			{
				return this.GetTable<FamilyAccount>();
			}
		}
		
		public System.Data.Linq.Table<JobRequestRecruitStage> JobRequestRecruitStages
		{
			get
			{
				return this.GetTable<JobRequestRecruitStage>();
			}
		}
		
		public System.Data.Linq.Table<MailQueue> MailQueues
		{
			get
			{
				return this.GetTable<MailQueue>();
			}
		}
		
		public System.Data.Linq.Table<Marjor> Marjors
		{
			get
			{
				return this.GetTable<Marjor>();
			}
		}
		
		public System.Data.Linq.Table<MessageBox> MessageBoxes
		{
			get
			{
				return this.GetTable<MessageBox>();
			}
		}
		
		public System.Data.Linq.Table<PublishActivity> PublishActivities
		{
			get
			{
				return this.GetTable<PublishActivity>();
			}
		}
		
		public System.Data.Linq.Table<PublishActivityAttachment> PublishActivityAttachments
		{
			get
			{
				return this.GetTable<PublishActivityAttachment>();
			}
		}
		
		public System.Data.Linq.Table<RecruitFlowSetted> RecruitFlowSetteds
		{
			get
			{
				return this.GetTable<RecruitFlowSetted>();
			}
		}
		
		public System.Data.Linq.Table<RecruitJobRequester> RecruitJobRequesters
		{
			get
			{
				return this.GetTable<RecruitJobRequester>();
			}
		}
		
		public System.Data.Linq.Table<RewriteRule> RewriteRules
		{
			get
			{
				return this.GetTable<RewriteRule>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<StudentAccessLog> StudentAccessLogs
		{
			get
			{
				return this.GetTable<StudentAccessLog>();
			}
		}
		
		public System.Data.Linq.Table<StudentActivity> StudentActivities
		{
			get
			{
				return this.GetTable<StudentActivity>();
			}
		}
		
		public System.Data.Linq.Table<StudentActivityAttachment> StudentActivityAttachments
		{
			get
			{
				return this.GetTable<StudentActivityAttachment>();
			}
		}
		
		public System.Data.Linq.Table<StudentActivityComment> StudentActivityComments
		{
			get
			{
				return this.GetTable<StudentActivityComment>();
			}
		}
		
		public System.Data.Linq.Table<StudentCourse> StudentCourses
		{
			get
			{
				return this.GetTable<StudentCourse>();
			}
		}
		
		public System.Data.Linq.Table<StudentCourseScore> StudentCourseScores
		{
			get
			{
				return this.GetTable<StudentCourseScore>();
			}
		}
		
		public System.Data.Linq.Table<StudentDailyEssay> StudentDailyEssays
		{
			get
			{
				return this.GetTable<StudentDailyEssay>();
			}
		}
		
		public System.Data.Linq.Table<StudentDailyEssayComment> StudentDailyEssayComments
		{
			get
			{
				return this.GetTable<StudentDailyEssayComment>();
			}
		}
		
		public System.Data.Linq.Table<StudentDictory> StudentDictories
		{
			get
			{
				return this.GetTable<StudentDictory>();
			}
		}
		
		public System.Data.Linq.Table<StudentFamilyAccount> StudentFamilyAccounts
		{
			get
			{
				return this.GetTable<StudentFamilyAccount>();
			}
		}
		
		public System.Data.Linq.Table<StudentJobExpect> StudentJobExpects
		{
			get
			{
				return this.GetTable<StudentJobExpect>();
			}
		}
		
		public System.Data.Linq.Table<StudentPhoto> StudentPhotos
		{
			get
			{
				return this.GetTable<StudentPhoto>();
			}
		}
		
		public System.Data.Linq.Table<StudentPhotoComment> StudentPhotoComments
		{
			get
			{
				return this.GetTable<StudentPhotoComment>();
			}
		}
		
		public System.Data.Linq.Table<StudentPhotoVisit> StudentPhotoVisits
		{
			get
			{
				return this.GetTable<StudentPhotoVisit>();
			}
		}
		
		public System.Data.Linq.Table<StudentProfessional> StudentProfessionals
		{
			get
			{
				return this.GetTable<StudentProfessional>();
			}
		}
		
		public System.Data.Linq.Table<StudentProfessionalAttachment> StudentProfessionalAttachments
		{
			get
			{
				return this.GetTable<StudentProfessionalAttachment>();
			}
		}
		
		public System.Data.Linq.Table<StudentProject> StudentProjects
		{
			get
			{
				return this.GetTable<StudentProject>();
			}
		}
		
		public System.Data.Linq.Table<StudentProjectAttachment> StudentProjectAttachments
		{
			get
			{
				return this.GetTable<StudentProjectAttachment>();
			}
		}
		
		public System.Data.Linq.Table<StudentProjectComment> StudentProjectComments
		{
			get
			{
				return this.GetTable<StudentProjectComment>();
			}
		}
		
		public System.Data.Linq.Table<StudentScore> StudentScores
		{
			get
			{
				return this.GetTable<StudentScore>();
			}
		}
		
		public System.Data.Linq.Table<StudentVisited> StudentVisiteds
		{
			get
			{
				return this.GetTable<StudentVisited>();
			}
		}
		
		public System.Data.Linq.Table<SystemLog> SystemLogs
		{
			get
			{
				return this.GetTable<SystemLog>();
			}
		}
		
		public System.Data.Linq.Table<Teacher> Teachers
		{
			get
			{
				return this.GetTable<Teacher>();
			}
		}
		
		public System.Data.Linq.Table<TeacherGroup> TeacherGroups
		{
			get
			{
				return this.GetTable<TeacherGroup>();
			}
		}
		
		public System.Data.Linq.Table<TeacherRelativeCourse> TeacherRelativeCourses
		{
			get
			{
				return this.GetTable<TeacherRelativeCourse>();
			}
		}
		
		public System.Data.Linq.Table<TeacherRelativeGroup> TeacherRelativeGroups
		{
			get
			{
				return this.GetTable<TeacherRelativeGroup>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetEnterpriseFrontList")]
		public int GetEnterpriseFrontList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="HotType", DbType="Int")] System.Nullable<int> hotType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Keyword", DbType="VarChar(200)")] string keyword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageIndex", DbType="Int")] System.Nullable<int> pageIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalCount", DbType="Int")] ref System.Nullable<int> totalCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), hotType, keyword, pageIndex, pageSize, totalCount);
			totalCount = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTopRate20StudentList")]
		public int GetTopRate20StudentList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAuthenticated", DbType="Int")] System.Nullable<int> isAuthenticated, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), isAuthenticated, pageSize);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetEnterpriseTopJobRequest")]
		public int GetEnterpriseTopJobRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pageSize);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetHotEnterpriseFrontList")]
		public ISingleResult<GetHotEnterpriseFrontListResult> GetHotEnterpriseFrontList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="HotType", DbType="Int")] System.Nullable<int> hotType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), hotType, pageSize);
			return ((ISingleResult<GetHotEnterpriseFrontListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStudentJobRequest")]
		public int GetStudentJobRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentNum", DbType="VarChar(20)")] string studentNum, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentNum, pageSize);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStudentListByKeyword")]
		public int GetStudentListByKeyword([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Keyword", DbType="NVarChar(100)")] string keyword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MarjorCode", DbType="NVarChar(100)")] string marjorCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sex", DbType="Int")] System.Nullable<int> sex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageIndex", DbType="Int")] System.Nullable<int> pageIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalCount", DbType="Int")] ref System.Nullable<int> totalCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), keyword, marjorCode, sex, pageIndex, pageSize, totalCount);
			totalCount = ((System.Nullable<int>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStudentProjectList")]
		public int GetStudentProjectList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentNum", DbType="VarChar(20)")] string studentNum, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentNum, pageSize);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTop20ArticleList")]
		public ISingleResult<GetTop20ArticleListResult> GetTop20ArticleList()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetTop20ArticleListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTop20EmployedStudentList", IsComposable=true)]
		public object GetTop20EmployedStudentList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalCount", DbType="Int")] ref System.Nullable<int> totalCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pageSize, totalCount);
			totalCount = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((object)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTop20RandomStudentList")]
		public ISingleResult<GetTop20RandomStudentListResult> GetTop20RandomStudentList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAuthenticated", DbType="Int")] System.Nullable<int> isAuthenticated)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), isAuthenticated);
			return ((ISingleResult<GetTop20RandomStudentListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTopEvaluate20StudentList")]
		public ISingleResult<GetTopEvaluate20StudentListResult> GetTopEvaluate20StudentList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAuthenticated", DbType="Int")] System.Nullable<int> isAuthenticated)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), isAuthenticated);
			return ((ISingleResult<GetTopEvaluate20StudentListResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityType")]
	public partial class ActivityType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsOnline;
		
		private int _ActivityDataType;
		
		private EntitySet<PublishActivity> _PublishActivities;
		
		private EntitySet<StudentActivity> _StudentActivities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnActivityDataTypeChanging(int value);
    partial void OnActivityDataTypeChanged();
    #endregion
		
		public ActivityType()
		{
			this._PublishActivities = new EntitySet<PublishActivity>(new Action<PublishActivity>(this.attach_PublishActivities), new Action<PublishActivity>(this.detach_PublishActivities));
			this._StudentActivities = new EntitySet<StudentActivity>(new Action<StudentActivity>(this.attach_StudentActivities), new Action<StudentActivity>(this.detach_StudentActivities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityDataType", DbType="Int NOT NULL")]
		public int ActivityDataType
		{
			get
			{
				return this._ActivityDataType;
			}
			set
			{
				if ((this._ActivityDataType != value))
				{
					this.OnActivityDataTypeChanging(value);
					this.SendPropertyChanging();
					this._ActivityDataType = value;
					this.SendPropertyChanged("ActivityDataType");
					this.OnActivityDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityType_PublishActivity", Storage="_PublishActivities", ThisKey="Code", OtherKey="ActivityType")]
		public EntitySet<PublishActivity> PublishActivities
		{
			get
			{
				return this._PublishActivities;
			}
			set
			{
				this._PublishActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityType_StudentActivity", Storage="_StudentActivities", ThisKey="Code", OtherKey="ActivityType")]
		public EntitySet<StudentActivity> StudentActivities
		{
			get
			{
				return this._StudentActivities;
			}
			set
			{
				this._StudentActivities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PublishActivities(PublishActivity entity)
		{
			this.SendPropertyChanging();
			entity.ActivityType1 = this;
		}
		
		private void detach_PublishActivities(PublishActivity entity)
		{
			this.SendPropertyChanging();
			entity.ActivityType1 = null;
		}
		
		private void attach_StudentActivities(StudentActivity entity)
		{
			this.SendPropertyChanging();
			entity.ActivityType1 = this;
		}
		
		private void detach_StudentActivities(StudentActivity entity)
		{
			this.SendPropertyChanging();
			entity.ActivityType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThirdUser")]
	public partial class ThirdUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Description;
		
		private int _ThirdUserType;
		
		private System.DateTime _CreateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnThirdUserTypeChanging(int value);
    partial void OnThirdUserTypeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public ThirdUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdUserType", DbType="Int NOT NULL")]
		public int ThirdUserType
		{
			get
			{
				return this._ThirdUserType;
			}
			set
			{
				if ((this._ThirdUserType != value))
				{
					this.OnThirdUserTypeChanging(value);
					this.SendPropertyChanging();
					this._ThirdUserType = value;
					this.SendPropertyChanged("ThirdUserType");
					this.OnThirdUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CdConfig")]
	public partial class CdConfig
	{
		
		private string _Code;
		
		private string _Value;
		
		public CdConfig()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CdIndustry")]
	public partial class CdIndustry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Enterprise> _Enterprises;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CdIndustry()
		{
			this._Enterprises = new EntitySet<Enterprise>(new Action<Enterprise>(this.attach_Enterprises), new Action<Enterprise>(this.detach_Enterprises));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CdIndustry_Enterprise", Storage="_Enterprises", ThisKey="Code", OtherKey="IndustryCode")]
		public EntitySet<Enterprise> Enterprises
		{
			get
			{
				return this._Enterprises;
			}
			set
			{
				this._Enterprises.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Enterprises(Enterprise entity)
		{
			this.SendPropertyChanging();
			entity.CdIndustry = this;
		}
		
		private void detach_Enterprises(Enterprise entity)
		{
			this.SendPropertyChanging();
			entity.CdIndustry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CdRegion")]
	public partial class CdRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private string _ParentCode;
		
		private int _DisplayOrder;
		
		private EntitySet<CdRegion> _CdRegions;
		
		private EntitySet<Enterprise> _Enterprises;
		
		private EntityRef<CdRegion> _CdRegion1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnParentCodeChanging(string value);
    partial void OnParentCodeChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public CdRegion()
		{
			this._CdRegions = new EntitySet<CdRegion>(new Action<CdRegion>(this.attach_CdRegions), new Action<CdRegion>(this.detach_CdRegions));
			this._Enterprises = new EntitySet<Enterprise>(new Action<Enterprise>(this.attach_Enterprises), new Action<Enterprise>(this.detach_Enterprises));
			this._CdRegion1 = default(EntityRef<CdRegion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCode", DbType="VarChar(6)")]
		public string ParentCode
		{
			get
			{
				return this._ParentCode;
			}
			set
			{
				if ((this._ParentCode != value))
				{
					if (this._CdRegion1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentCodeChanging(value);
					this.SendPropertyChanging();
					this._ParentCode = value;
					this.SendPropertyChanged("ParentCode");
					this.OnParentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CdRegion_CdRegion", Storage="_CdRegions", ThisKey="Code", OtherKey="ParentCode")]
		public EntitySet<CdRegion> CdRegions
		{
			get
			{
				return this._CdRegions;
			}
			set
			{
				this._CdRegions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CdRegion_Enterprise", Storage="_Enterprises", ThisKey="Code", OtherKey="RegionCode")]
		public EntitySet<Enterprise> Enterprises
		{
			get
			{
				return this._Enterprises;
			}
			set
			{
				this._Enterprises.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CdRegion_CdRegion", Storage="_CdRegion1", ThisKey="ParentCode", OtherKey="Code", IsForeignKey=true)]
		public CdRegion CdRegion1
		{
			get
			{
				return this._CdRegion1.Entity;
			}
			set
			{
				CdRegion previousValue = this._CdRegion1.Entity;
				if (((previousValue != value) 
							|| (this._CdRegion1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CdRegion1.Entity = null;
						previousValue.CdRegions.Remove(this);
					}
					this._CdRegion1.Entity = value;
					if ((value != null))
					{
						value.CdRegions.Add(this);
						this._ParentCode = value.Code;
					}
					else
					{
						this._ParentCode = default(string);
					}
					this.SendPropertyChanged("CdRegion1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CdRegions(CdRegion entity)
		{
			this.SendPropertyChanging();
			entity.CdRegion1 = this;
		}
		
		private void detach_CdRegions(CdRegion entity)
		{
			this.SendPropertyChanging();
			entity.CdRegion1 = null;
		}
		
		private void attach_Enterprises(Enterprise entity)
		{
			this.SendPropertyChanging();
			entity.CdRegion = this;
		}
		
		private void detach_Enterprises(Enterprise entity)
		{
			this.SendPropertyChanging();
			entity.CdRegion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private string _MarjorCode;
		
		private string _DepartCode;
		
		private string _TypeCode;
		
		private decimal _Credit;
		
		private System.DateTime _CreateTime;
		
		private EntitySet<StudentCourse> _StudentCourses;
		
		private EntitySet<StudentCourseScore> _StudentCourseScores;
		
		private EntitySet<TeacherRelativeCourse> _TeacherRelativeCourses;
		
		private EntityRef<CourseType> _CourseType;
		
		private EntityRef<Depart> _Depart;
		
		private EntityRef<Marjor> _Marjor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarjorCodeChanging(string value);
    partial void OnMarjorCodeChanged();
    partial void OnDepartCodeChanging(string value);
    partial void OnDepartCodeChanged();
    partial void OnTypeCodeChanging(string value);
    partial void OnTypeCodeChanged();
    partial void OnCreditChanging(decimal value);
    partial void OnCreditChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public Course()
		{
			this._StudentCourses = new EntitySet<StudentCourse>(new Action<StudentCourse>(this.attach_StudentCourses), new Action<StudentCourse>(this.detach_StudentCourses));
			this._StudentCourseScores = new EntitySet<StudentCourseScore>(new Action<StudentCourseScore>(this.attach_StudentCourseScores), new Action<StudentCourseScore>(this.detach_StudentCourseScores));
			this._TeacherRelativeCourses = new EntitySet<TeacherRelativeCourse>(new Action<TeacherRelativeCourse>(this.attach_TeacherRelativeCourses), new Action<TeacherRelativeCourse>(this.detach_TeacherRelativeCourses));
			this._CourseType = default(EntityRef<CourseType>);
			this._Depart = default(EntityRef<Depart>);
			this._Marjor = default(EntityRef<Marjor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarjorCode", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string MarjorCode
		{
			get
			{
				return this._MarjorCode;
			}
			set
			{
				if ((this._MarjorCode != value))
				{
					if (this._Marjor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarjorCodeChanging(value);
					this.SendPropertyChanging();
					this._MarjorCode = value;
					this.SendPropertyChanged("MarjorCode");
					this.OnMarjorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string DepartCode
		{
			get
			{
				return this._DepartCode;
			}
			set
			{
				if ((this._DepartCode != value))
				{
					if (this._Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartCode = value;
					this.SendPropertyChanged("DepartCode");
					this.OnDepartCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string TypeCode
		{
			get
			{
				return this._TypeCode;
			}
			set
			{
				if ((this._TypeCode != value))
				{
					if (this._CourseType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TypeCode = value;
					this.SendPropertyChanged("TypeCode");
					this.OnTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Decimal(3,2) NOT NULL")]
		public decimal Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_StudentCourse", Storage="_StudentCourses", ThisKey="Code", OtherKey="CourseCode")]
		public EntitySet<StudentCourse> StudentCourses
		{
			get
			{
				return this._StudentCourses;
			}
			set
			{
				this._StudentCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_StudentCourseScore", Storage="_StudentCourseScores", ThisKey="Code", OtherKey="CourseCode")]
		public EntitySet<StudentCourseScore> StudentCourseScores
		{
			get
			{
				return this._StudentCourseScores;
			}
			set
			{
				this._StudentCourseScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_TeacherRelativeCourse", Storage="_TeacherRelativeCourses", ThisKey="Code", OtherKey="CourseCode")]
		public EntitySet<TeacherRelativeCourse> TeacherRelativeCourses
		{
			get
			{
				return this._TeacherRelativeCourses;
			}
			set
			{
				this._TeacherRelativeCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseType_Course", Storage="_CourseType", ThisKey="TypeCode", OtherKey="Code", IsForeignKey=true)]
		public CourseType CourseType
		{
			get
			{
				return this._CourseType.Entity;
			}
			set
			{
				CourseType previousValue = this._CourseType.Entity;
				if (((previousValue != value) 
							|| (this._CourseType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseType.Entity = null;
						previousValue.Courses.Remove(this);
					}
					this._CourseType.Entity = value;
					if ((value != null))
					{
						value.Courses.Add(this);
						this._TypeCode = value.Code;
					}
					else
					{
						this._TypeCode = default(string);
					}
					this.SendPropertyChanged("CourseType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depart_Course", Storage="_Depart", ThisKey="DepartCode", OtherKey="Code", IsForeignKey=true)]
		public Depart Depart
		{
			get
			{
				return this._Depart.Entity;
			}
			set
			{
				Depart previousValue = this._Depart.Entity;
				if (((previousValue != value) 
							|| (this._Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Depart.Entity = null;
						previousValue.Courses.Remove(this);
					}
					this._Depart.Entity = value;
					if ((value != null))
					{
						value.Courses.Add(this);
						this._DepartCode = value.Code;
					}
					else
					{
						this._DepartCode = default(string);
					}
					this.SendPropertyChanged("Depart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marjor_Course", Storage="_Marjor", ThisKey="MarjorCode", OtherKey="Code", IsForeignKey=true)]
		public Marjor Marjor
		{
			get
			{
				return this._Marjor.Entity;
			}
			set
			{
				Marjor previousValue = this._Marjor.Entity;
				if (((previousValue != value) 
							|| (this._Marjor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marjor.Entity = null;
						previousValue.Courses.Remove(this);
					}
					this._Marjor.Entity = value;
					if ((value != null))
					{
						value.Courses.Add(this);
						this._MarjorCode = value.Code;
					}
					else
					{
						this._MarjorCode = default(string);
					}
					this.SendPropertyChanged("Marjor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentCourses(StudentCourse entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_StudentCourses(StudentCourse entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_StudentCourseScores(StudentCourseScore entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_StudentCourseScores(StudentCourseScore entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_TeacherRelativeCourses(TeacherRelativeCourse entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_TeacherRelativeCourses(TeacherRelativeCourse entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseType")]
	public partial class CourseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _CreateTime;
		
		private EntitySet<Course> _Courses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public CourseType()
		{
			this._Courses = new EntitySet<Course>(new Action<Course>(this.attach_Courses), new Action<Course>(this.detach_Courses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseType_Course", Storage="_Courses", ThisKey="Code", OtherKey="TypeCode")]
		public EntitySet<Course> Courses
		{
			get
			{
				return this._Courses;
			}
			set
			{
				this._Courses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.CourseType = this;
		}
		
		private void detach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.CourseType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Depart")]
	public partial class Depart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Course> _Courses;
		
		private EntitySet<DepartAdmin> _DepartAdmins;
		
		private EntitySet<DepartMessage> _DepartMessages;
		
		private EntitySet<Marjor> _Marjors;
		
		private EntitySet<Student> _Students;
		
		private EntitySet<Teacher> _Teachers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Depart()
		{
			this._Courses = new EntitySet<Course>(new Action<Course>(this.attach_Courses), new Action<Course>(this.detach_Courses));
			this._DepartAdmins = new EntitySet<DepartAdmin>(new Action<DepartAdmin>(this.attach_DepartAdmins), new Action<DepartAdmin>(this.detach_DepartAdmins));
			this._DepartMessages = new EntitySet<DepartMessage>(new Action<DepartMessage>(this.attach_DepartMessages), new Action<DepartMessage>(this.detach_DepartMessages));
			this._Marjors = new EntitySet<Marjor>(new Action<Marjor>(this.attach_Marjors), new Action<Marjor>(this.detach_Marjors));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Teachers = new EntitySet<Teacher>(new Action<Teacher>(this.attach_Teachers), new Action<Teacher>(this.detach_Teachers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depart_Course", Storage="_Courses", ThisKey="Code", OtherKey="DepartCode")]
		public EntitySet<Course> Courses
		{
			get
			{
				return this._Courses;
			}
			set
			{
				this._Courses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depart_DepartAdmin", Storage="_DepartAdmins", ThisKey="Code", OtherKey="DepartCode")]
		public EntitySet<DepartAdmin> DepartAdmins
		{
			get
			{
				return this._DepartAdmins;
			}
			set
			{
				this._DepartAdmins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depart_DepartMessage", Storage="_DepartMessages", ThisKey="Code", OtherKey="DepartCode")]
		public EntitySet<DepartMessage> DepartMessages
		{
			get
			{
				return this._DepartMessages;
			}
			set
			{
				this._DepartMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depart_Marjor", Storage="_Marjors", ThisKey="Code", OtherKey="DepartCode")]
		public EntitySet<Marjor> Marjors
		{
			get
			{
				return this._Marjors;
			}
			set
			{
				this._Marjors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depart_Student", Storage="_Students", ThisKey="Code", OtherKey="DepartCode")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depart_Teacher", Storage="_Teachers", ThisKey="Code", OtherKey="DepartCode")]
		public EntitySet<Teacher> Teachers
		{
			get
			{
				return this._Teachers;
			}
			set
			{
				this._Teachers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Depart = this;
		}
		
		private void detach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Depart = null;
		}
		
		private void attach_DepartAdmins(DepartAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Depart = this;
		}
		
		private void detach_DepartAdmins(DepartAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Depart = null;
		}
		
		private void attach_DepartMessages(DepartMessage entity)
		{
			this.SendPropertyChanging();
			entity.Depart = this;
		}
		
		private void detach_DepartMessages(DepartMessage entity)
		{
			this.SendPropertyChanging();
			entity.Depart = null;
		}
		
		private void attach_Marjors(Marjor entity)
		{
			this.SendPropertyChanging();
			entity.Depart = this;
		}
		
		private void detach_Marjors(Marjor entity)
		{
			this.SendPropertyChanging();
			entity.Depart = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Depart = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Depart = null;
		}
		
		private void attach_Teachers(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Depart = this;
		}
		
		private void detach_Teachers(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Depart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepartAdmin")]
	public partial class DepartAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _Telephone;
		
		private string _Email;
		
		private string _Description;
		
		private string _DepartCode;
		
		private string _Password;
		
		private EntitySet<DepartMessage> _DepartMessages;
		
		private EntityRef<Depart> _Depart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDepartCodeChanging(string value);
    partial void OnDepartCodeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public DepartAdmin()
		{
			this._DepartMessages = new EntitySet<DepartMessage>(new Action<DepartMessage>(this.attach_DepartMessages), new Action<DepartMessage>(this.detach_DepartMessages));
			this._Depart = default(EntityRef<Depart>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(30)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string DepartCode
		{
			get
			{
				return this._DepartCode;
			}
			set
			{
				if ((this._DepartCode != value))
				{
					if (this._Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartCode = value;
					this.SendPropertyChanged("DepartCode");
					this.OnDepartCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartAdmin_DepartMessage", Storage="_DepartMessages", ThisKey="ID", OtherKey="DepartAdminID")]
		public EntitySet<DepartMessage> DepartMessages
		{
			get
			{
				return this._DepartMessages;
			}
			set
			{
				this._DepartMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depart_DepartAdmin", Storage="_Depart", ThisKey="DepartCode", OtherKey="Code", IsForeignKey=true)]
		public Depart Depart
		{
			get
			{
				return this._Depart.Entity;
			}
			set
			{
				Depart previousValue = this._Depart.Entity;
				if (((previousValue != value) 
							|| (this._Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Depart.Entity = null;
						previousValue.DepartAdmins.Remove(this);
					}
					this._Depart.Entity = value;
					if ((value != null))
					{
						value.DepartAdmins.Add(this);
						this._DepartCode = value.Code;
					}
					else
					{
						this._DepartCode = default(string);
					}
					this.SendPropertyChanged("Depart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DepartMessages(DepartMessage entity)
		{
			this.SendPropertyChanging();
			entity.DepartAdmin = this;
		}
		
		private void detach_DepartMessages(DepartMessage entity)
		{
			this.SendPropertyChanging();
			entity.DepartAdmin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepartMessage")]
	public partial class DepartMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Content;
		
		private System.DateTime _CreateTime;
		
		private bool _IsOnline;
		
		private string _DepartCode;
		
		private int _DepartAdminID;
		
		private System.DateTime _LastUpdateTime;
		
		private EntityRef<Depart> _Depart;
		
		private EntityRef<DepartAdmin> _DepartAdmin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnDepartCodeChanging(string value);
    partial void OnDepartCodeChanged();
    partial void OnDepartAdminIDChanging(int value);
    partial void OnDepartAdminIDChanged();
    partial void OnLastUpdateTimeChanging(System.DateTime value);
    partial void OnLastUpdateTimeChanged();
    #endregion
		
		public DepartMessage()
		{
			this._Depart = default(EntityRef<Depart>);
			this._DepartAdmin = default(EntityRef<DepartAdmin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string DepartCode
		{
			get
			{
				return this._DepartCode;
			}
			set
			{
				if ((this._DepartCode != value))
				{
					if (this._Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartCode = value;
					this.SendPropertyChanged("DepartCode");
					this.OnDepartCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartAdminID", DbType="Int NOT NULL")]
		public int DepartAdminID
		{
			get
			{
				return this._DepartAdminID;
			}
			set
			{
				if ((this._DepartAdminID != value))
				{
					if (this._DepartAdmin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartAdminIDChanging(value);
					this.SendPropertyChanging();
					this._DepartAdminID = value;
					this.SendPropertyChanged("DepartAdminID");
					this.OnDepartAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdateTime
		{
			get
			{
				return this._LastUpdateTime;
			}
			set
			{
				if ((this._LastUpdateTime != value))
				{
					this.OnLastUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateTime = value;
					this.SendPropertyChanged("LastUpdateTime");
					this.OnLastUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depart_DepartMessage", Storage="_Depart", ThisKey="DepartCode", OtherKey="Code", IsForeignKey=true)]
		public Depart Depart
		{
			get
			{
				return this._Depart.Entity;
			}
			set
			{
				Depart previousValue = this._Depart.Entity;
				if (((previousValue != value) 
							|| (this._Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Depart.Entity = null;
						previousValue.DepartMessages.Remove(this);
					}
					this._Depart.Entity = value;
					if ((value != null))
					{
						value.DepartMessages.Add(this);
						this._DepartCode = value.Code;
					}
					else
					{
						this._DepartCode = default(string);
					}
					this.SendPropertyChanged("Depart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartAdmin_DepartMessage", Storage="_DepartAdmin", ThisKey="DepartAdminID", OtherKey="ID", IsForeignKey=true)]
		public DepartAdmin DepartAdmin
		{
			get
			{
				return this._DepartAdmin.Entity;
			}
			set
			{
				DepartAdmin previousValue = this._DepartAdmin.Entity;
				if (((previousValue != value) 
							|| (this._DepartAdmin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DepartAdmin.Entity = null;
						previousValue.DepartMessages.Remove(this);
					}
					this._DepartAdmin.Entity = value;
					if ((value != null))
					{
						value.DepartMessages.Add(this);
						this._DepartAdminID = value.ID;
					}
					else
					{
						this._DepartAdminID = default(int);
					}
					this.SendPropertyChanged("DepartAdmin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Education")]
	public partial class Education : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Teacher> _Teachers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Education()
		{
			this._Teachers = new EntitySet<Teacher>(new Action<Teacher>(this.attach_Teachers), new Action<Teacher>(this.detach_Teachers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Education_Teacher", Storage="_Teachers", ThisKey="Code", OtherKey="EducationCode")]
		public EntitySet<Teacher> Teachers
		{
			get
			{
				return this._Teachers;
			}
			set
			{
				this._Teachers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Teachers(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Education = this;
		}
		
		private void detach_Teachers(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.Education = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailTemplate")]
	public partial class EmailTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Subject;
		
		private string _Body;
		
		private int _EmailType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnEmailTypeChanging(int value);
    partial void OnEmailTypeChanged();
    #endregion
		
		public EmailTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailType", DbType="Int NOT NULL")]
		public int EmailType
		{
			get
			{
				return this._EmailType;
			}
			set
			{
				if ((this._EmailType != value))
				{
					this.OnEmailTypeChanging(value);
					this.SendPropertyChanging();
					this._EmailType = value;
					this.SendPropertyChanged("EmailType");
					this.OnEmailTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Enterprise")]
	public partial class Enterprise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private string _Address;
		
		private string _LicenseNo;
		
		private string _ContactName;
		
		private string _ContactPhone;
		
		private bool _IsOnline;
		
		private string _ScopeCode;
		
		private string _EnterpriseTypeCode;
		
		private string _RegionCode;
		
		private string _IndustryCode;
		
		private string _Email;
		
		private string _UserName;
		
		private string _Password;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private string _Corporation;
		
		private string _WebSite;
		
		private int _VerifyStatus;
		
		private bool _IsDeleted;
		
		private EntitySet<EnterpriseEmailTemplate> _EnterpriseEmailTemplates;
		
		private EntitySet<EnterpriseJob> _EnterpriseJobs;
		
		private EntitySet<EnterpriseRecruitBatch> _EnterpriseRecruitBatches;
		
		private EntitySet<EnterpriseVisited> _EnterpriseVisiteds;
		
		private EntityRef<CdIndustry> _CdIndustry;
		
		private EntityRef<CdRegion> _CdRegion;
		
		private EntityRef<EnterpriseScope> _EnterpriseScope;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnLicenseNoChanging(string value);
    partial void OnLicenseNoChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnScopeCodeChanging(string value);
    partial void OnScopeCodeChanged();
    partial void OnEnterpriseTypeCodeChanging(string value);
    partial void OnEnterpriseTypeCodeChanged();
    partial void OnRegionCodeChanging(string value);
    partial void OnRegionCodeChanged();
    partial void OnIndustryCodeChanging(string value);
    partial void OnIndustryCodeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    partial void OnCorporationChanging(string value);
    partial void OnCorporationChanged();
    partial void OnWebSiteChanging(string value);
    partial void OnWebSiteChanged();
    partial void OnVerifyStatusChanging(int value);
    partial void OnVerifyStatusChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Enterprise()
		{
			this._EnterpriseEmailTemplates = new EntitySet<EnterpriseEmailTemplate>(new Action<EnterpriseEmailTemplate>(this.attach_EnterpriseEmailTemplates), new Action<EnterpriseEmailTemplate>(this.detach_EnterpriseEmailTemplates));
			this._EnterpriseJobs = new EntitySet<EnterpriseJob>(new Action<EnterpriseJob>(this.attach_EnterpriseJobs), new Action<EnterpriseJob>(this.detach_EnterpriseJobs));
			this._EnterpriseRecruitBatches = new EntitySet<EnterpriseRecruitBatch>(new Action<EnterpriseRecruitBatch>(this.attach_EnterpriseRecruitBatches), new Action<EnterpriseRecruitBatch>(this.detach_EnterpriseRecruitBatches));
			this._EnterpriseVisiteds = new EntitySet<EnterpriseVisited>(new Action<EnterpriseVisited>(this.attach_EnterpriseVisiteds), new Action<EnterpriseVisited>(this.detach_EnterpriseVisiteds));
			this._CdIndustry = default(EntityRef<CdIndustry>);
			this._CdRegion = default(EntityRef<CdRegion>);
			this._EnterpriseScope = default(EntityRef<EnterpriseScope>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNo", DbType="NVarChar(100)")]
		public string LicenseNo
		{
			get
			{
				return this._LicenseNo;
			}
			set
			{
				if ((this._LicenseNo != value))
				{
					this.OnLicenseNoChanging(value);
					this.SendPropertyChanging();
					this._LicenseNo = value;
					this.SendPropertyChanged("LicenseNo");
					this.OnLicenseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="VarChar(20)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeCode", DbType="Char(3)")]
		public string ScopeCode
		{
			get
			{
				return this._ScopeCode;
			}
			set
			{
				if ((this._ScopeCode != value))
				{
					if (this._EnterpriseScope.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScopeCodeChanging(value);
					this.SendPropertyChanging();
					this._ScopeCode = value;
					this.SendPropertyChanged("ScopeCode");
					this.OnScopeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseTypeCode", DbType="Char(3)")]
		public string EnterpriseTypeCode
		{
			get
			{
				return this._EnterpriseTypeCode;
			}
			set
			{
				if ((this._EnterpriseTypeCode != value))
				{
					this.OnEnterpriseTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseTypeCode = value;
					this.SendPropertyChanged("EnterpriseTypeCode");
					this.OnEnterpriseTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionCode", DbType="VarChar(6)")]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					if (this._CdRegion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._RegionCode = value;
					this.SendPropertyChanged("RegionCode");
					this.OnRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryCode", DbType="Char(3)")]
		public string IndustryCode
		{
			get
			{
				return this._IndustryCode;
			}
			set
			{
				if ((this._IndustryCode != value))
				{
					if (this._CdIndustry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIndustryCodeChanging(value);
					this.SendPropertyChanging();
					this._IndustryCode = value;
					this.SendPropertyChanged("IndustryCode");
					this.OnIndustryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corporation", DbType="NVarChar(100)")]
		public string Corporation
		{
			get
			{
				return this._Corporation;
			}
			set
			{
				if ((this._Corporation != value))
				{
					this.OnCorporationChanging(value);
					this.SendPropertyChanging();
					this._Corporation = value;
					this.SendPropertyChanged("Corporation");
					this.OnCorporationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="NVarChar(200)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyStatus", DbType="Int NOT NULL")]
		public int VerifyStatus
		{
			get
			{
				return this._VerifyStatus;
			}
			set
			{
				if ((this._VerifyStatus != value))
				{
					this.OnVerifyStatusChanging(value);
					this.SendPropertyChanging();
					this._VerifyStatus = value;
					this.SendPropertyChanged("VerifyStatus");
					this.OnVerifyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprise_EnterpriseEmailTemplate", Storage="_EnterpriseEmailTemplates", ThisKey="Code", OtherKey="EnterpriseCode")]
		public EntitySet<EnterpriseEmailTemplate> EnterpriseEmailTemplates
		{
			get
			{
				return this._EnterpriseEmailTemplates;
			}
			set
			{
				this._EnterpriseEmailTemplates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprise_EnterpriseJob", Storage="_EnterpriseJobs", ThisKey="Code", OtherKey="EnterpriseCode")]
		public EntitySet<EnterpriseJob> EnterpriseJobs
		{
			get
			{
				return this._EnterpriseJobs;
			}
			set
			{
				this._EnterpriseJobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprise_EnterpriseRecruitBatch", Storage="_EnterpriseRecruitBatches", ThisKey="Code", OtherKey="EnterpriseCode")]
		public EntitySet<EnterpriseRecruitBatch> EnterpriseRecruitBatches
		{
			get
			{
				return this._EnterpriseRecruitBatches;
			}
			set
			{
				this._EnterpriseRecruitBatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprise_EnterpriseVisited", Storage="_EnterpriseVisiteds", ThisKey="Code", OtherKey="EnterpriseCode")]
		public EntitySet<EnterpriseVisited> EnterpriseVisiteds
		{
			get
			{
				return this._EnterpriseVisiteds;
			}
			set
			{
				this._EnterpriseVisiteds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CdIndustry_Enterprise", Storage="_CdIndustry", ThisKey="IndustryCode", OtherKey="Code", IsForeignKey=true)]
		public CdIndustry CdIndustry
		{
			get
			{
				return this._CdIndustry.Entity;
			}
			set
			{
				CdIndustry previousValue = this._CdIndustry.Entity;
				if (((previousValue != value) 
							|| (this._CdIndustry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CdIndustry.Entity = null;
						previousValue.Enterprises.Remove(this);
					}
					this._CdIndustry.Entity = value;
					if ((value != null))
					{
						value.Enterprises.Add(this);
						this._IndustryCode = value.Code;
					}
					else
					{
						this._IndustryCode = default(string);
					}
					this.SendPropertyChanged("CdIndustry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CdRegion_Enterprise", Storage="_CdRegion", ThisKey="RegionCode", OtherKey="Code", IsForeignKey=true)]
		public CdRegion CdRegion
		{
			get
			{
				return this._CdRegion.Entity;
			}
			set
			{
				CdRegion previousValue = this._CdRegion.Entity;
				if (((previousValue != value) 
							|| (this._CdRegion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CdRegion.Entity = null;
						previousValue.Enterprises.Remove(this);
					}
					this._CdRegion.Entity = value;
					if ((value != null))
					{
						value.Enterprises.Add(this);
						this._RegionCode = value.Code;
					}
					else
					{
						this._RegionCode = default(string);
					}
					this.SendPropertyChanged("CdRegion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseScope_Enterprise", Storage="_EnterpriseScope", ThisKey="ScopeCode", OtherKey="Code", IsForeignKey=true)]
		public EnterpriseScope EnterpriseScope
		{
			get
			{
				return this._EnterpriseScope.Entity;
			}
			set
			{
				EnterpriseScope previousValue = this._EnterpriseScope.Entity;
				if (((previousValue != value) 
							|| (this._EnterpriseScope.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnterpriseScope.Entity = null;
						previousValue.Enterprises.Remove(this);
					}
					this._EnterpriseScope.Entity = value;
					if ((value != null))
					{
						value.Enterprises.Add(this);
						this._ScopeCode = value.Code;
					}
					else
					{
						this._ScopeCode = default(string);
					}
					this.SendPropertyChanged("EnterpriseScope");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EnterpriseEmailTemplates(EnterpriseEmailTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Enterprise = this;
		}
		
		private void detach_EnterpriseEmailTemplates(EnterpriseEmailTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Enterprise = null;
		}
		
		private void attach_EnterpriseJobs(EnterpriseJob entity)
		{
			this.SendPropertyChanging();
			entity.Enterprise = this;
		}
		
		private void detach_EnterpriseJobs(EnterpriseJob entity)
		{
			this.SendPropertyChanging();
			entity.Enterprise = null;
		}
		
		private void attach_EnterpriseRecruitBatches(EnterpriseRecruitBatch entity)
		{
			this.SendPropertyChanging();
			entity.Enterprise = this;
		}
		
		private void detach_EnterpriseRecruitBatches(EnterpriseRecruitBatch entity)
		{
			this.SendPropertyChanging();
			entity.Enterprise = null;
		}
		
		private void attach_EnterpriseVisiteds(EnterpriseVisited entity)
		{
			this.SendPropertyChanging();
			entity.Enterprise = this;
		}
		
		private void detach_EnterpriseVisiteds(EnterpriseVisited entity)
		{
			this.SendPropertyChanging();
			entity.Enterprise = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseBatchRelative")]
	public partial class EnterpriseBatchRelative : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecruitBatchID;
		
		private int _JobRequestID;
		
		private System.DateTime _CreateTime;
		
		private EntityRef<EnterpriseJobRequester> _EnterpriseJobRequester;
		
		private EntityRef<EnterpriseRecruitBatch> _EnterpriseRecruitBatch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecruitBatchIDChanging(int value);
    partial void OnRecruitBatchIDChanged();
    partial void OnJobRequestIDChanging(int value);
    partial void OnJobRequestIDChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public EnterpriseBatchRelative()
		{
			this._EnterpriseJobRequester = default(EntityRef<EnterpriseJobRequester>);
			this._EnterpriseRecruitBatch = default(EntityRef<EnterpriseRecruitBatch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecruitBatchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RecruitBatchID
		{
			get
			{
				return this._RecruitBatchID;
			}
			set
			{
				if ((this._RecruitBatchID != value))
				{
					if (this._EnterpriseRecruitBatch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecruitBatchIDChanging(value);
					this.SendPropertyChanging();
					this._RecruitBatchID = value;
					this.SendPropertyChanged("RecruitBatchID");
					this.OnRecruitBatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobRequestID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int JobRequestID
		{
			get
			{
				return this._JobRequestID;
			}
			set
			{
				if ((this._JobRequestID != value))
				{
					if (this._EnterpriseJobRequester.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobRequestIDChanging(value);
					this.SendPropertyChanging();
					this._JobRequestID = value;
					this.SendPropertyChanged("JobRequestID");
					this.OnJobRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseJobRequester_EnterpriseBatchRelative", Storage="_EnterpriseJobRequester", ThisKey="JobRequestID", OtherKey="ID", IsForeignKey=true)]
		public EnterpriseJobRequester EnterpriseJobRequester
		{
			get
			{
				return this._EnterpriseJobRequester.Entity;
			}
			set
			{
				EnterpriseJobRequester previousValue = this._EnterpriseJobRequester.Entity;
				if (((previousValue != value) 
							|| (this._EnterpriseJobRequester.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnterpriseJobRequester.Entity = null;
						previousValue.EnterpriseBatchRelatives.Remove(this);
					}
					this._EnterpriseJobRequester.Entity = value;
					if ((value != null))
					{
						value.EnterpriseBatchRelatives.Add(this);
						this._JobRequestID = value.ID;
					}
					else
					{
						this._JobRequestID = default(int);
					}
					this.SendPropertyChanged("EnterpriseJobRequester");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseRecruitBatch_EnterpriseBatchRelative", Storage="_EnterpriseRecruitBatch", ThisKey="RecruitBatchID", OtherKey="ID", IsForeignKey=true)]
		public EnterpriseRecruitBatch EnterpriseRecruitBatch
		{
			get
			{
				return this._EnterpriseRecruitBatch.Entity;
			}
			set
			{
				EnterpriseRecruitBatch previousValue = this._EnterpriseRecruitBatch.Entity;
				if (((previousValue != value) 
							|| (this._EnterpriseRecruitBatch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnterpriseRecruitBatch.Entity = null;
						previousValue.EnterpriseBatchRelatives.Remove(this);
					}
					this._EnterpriseRecruitBatch.Entity = value;
					if ((value != null))
					{
						value.EnterpriseBatchRelatives.Add(this);
						this._RecruitBatchID = value.ID;
					}
					else
					{
						this._RecruitBatchID = default(int);
					}
					this.SendPropertyChanged("EnterpriseRecruitBatch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseEmailTemplate")]
	public partial class EnterpriseEmailTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Subject;
		
		private string _Body;
		
		private int _EmailType;
		
		private string _Sender;
		
		private string _SenderName;
		
		private string _Cc;
		
		private string _EnterpriseCode;
		
		private string _HelpTip;
		
		private EntityRef<Enterprise> _Enterprise;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnEmailTypeChanging(int value);
    partial void OnEmailTypeChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnSenderNameChanging(string value);
    partial void OnSenderNameChanged();
    partial void OnCcChanging(string value);
    partial void OnCcChanged();
    partial void OnEnterpriseCodeChanging(string value);
    partial void OnEnterpriseCodeChanged();
    partial void OnHelpTipChanging(string value);
    partial void OnHelpTipChanged();
    #endregion
		
		public EnterpriseEmailTemplate()
		{
			this._Enterprise = default(EntityRef<Enterprise>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailType", DbType="Int NOT NULL")]
		public int EmailType
		{
			get
			{
				return this._EmailType;
			}
			set
			{
				if ((this._EmailType != value))
				{
					this.OnEmailTypeChanging(value);
					this.SendPropertyChanging();
					this._EmailType = value;
					this.SendPropertyChanged("EmailType");
					this.OnEmailTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SenderName
		{
			get
			{
				return this._SenderName;
			}
			set
			{
				if ((this._SenderName != value))
				{
					this.OnSenderNameChanging(value);
					this.SendPropertyChanging();
					this._SenderName = value;
					this.SendPropertyChanged("SenderName");
					this.OnSenderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cc", DbType="VarChar(50)")]
		public string Cc
		{
			get
			{
				return this._Cc;
			}
			set
			{
				if ((this._Cc != value))
				{
					this.OnCcChanging(value);
					this.SendPropertyChanging();
					this._Cc = value;
					this.SendPropertyChanged("Cc");
					this.OnCcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseCode", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string EnterpriseCode
		{
			get
			{
				return this._EnterpriseCode;
			}
			set
			{
				if ((this._EnterpriseCode != value))
				{
					if (this._Enterprise.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseCodeChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseCode = value;
					this.SendPropertyChanged("EnterpriseCode");
					this.OnEnterpriseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpTip", DbType="NVarChar(2000)")]
		public string HelpTip
		{
			get
			{
				return this._HelpTip;
			}
			set
			{
				if ((this._HelpTip != value))
				{
					this.OnHelpTipChanging(value);
					this.SendPropertyChanging();
					this._HelpTip = value;
					this.SendPropertyChanged("HelpTip");
					this.OnHelpTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprise_EnterpriseEmailTemplate", Storage="_Enterprise", ThisKey="EnterpriseCode", OtherKey="Code", IsForeignKey=true)]
		public Enterprise Enterprise
		{
			get
			{
				return this._Enterprise.Entity;
			}
			set
			{
				Enterprise previousValue = this._Enterprise.Entity;
				if (((previousValue != value) 
							|| (this._Enterprise.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprise.Entity = null;
						previousValue.EnterpriseEmailTemplates.Remove(this);
					}
					this._Enterprise.Entity = value;
					if ((value != null))
					{
						value.EnterpriseEmailTemplates.Add(this);
						this._EnterpriseCode = value.Code;
					}
					else
					{
						this._EnterpriseCode = default(string);
					}
					this.SendPropertyChanged("Enterprise");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseJob")]
	public partial class EnterpriseJob : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private int _Num;
		
		private int _Sex;
		
		private string _Nature;
		
		private string _AgeScope;
		
		private string _Telephone;
		
		private string _ContactName;
		
		private string _Address;
		
		private string _Education;
		
		private string _Professional;
		
		private string _WorkPlace;
		
		private string _RecruitmentTargets;
		
		private string _SalaryScope;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private bool _IsOnline;
		
		private string _EnterpriseCode;
		
		private int _DisplayOrder;
		
		private System.DateTime _CreateTime;
		
		private string _DepartName;
		
		private string _Tax;
		
		private bool _IsDelete;
		
		private EntitySet<EnterpriseJobRequester> _EnterpriseJobRequesters;
		
		private EntitySet<EnterpriseJobRequestQueue> _EnterpriseJobRequestQueues;
		
		private EntityRef<Enterprise> _Enterprise;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNumChanging(int value);
    partial void OnNumChanged();
    partial void OnSexChanging(int value);
    partial void OnSexChanged();
    partial void OnNatureChanging(string value);
    partial void OnNatureChanged();
    partial void OnAgeScopeChanging(string value);
    partial void OnAgeScopeChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnProfessionalChanging(string value);
    partial void OnProfessionalChanged();
    partial void OnWorkPlaceChanging(string value);
    partial void OnWorkPlaceChanged();
    partial void OnRecruitmentTargetsChanging(string value);
    partial void OnRecruitmentTargetsChanged();
    partial void OnSalaryScopeChanging(string value);
    partial void OnSalaryScopeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnEnterpriseCodeChanging(string value);
    partial void OnEnterpriseCodeChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnDepartNameChanging(string value);
    partial void OnDepartNameChanged();
    partial void OnTaxChanging(string value);
    partial void OnTaxChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public EnterpriseJob()
		{
			this._EnterpriseJobRequesters = new EntitySet<EnterpriseJobRequester>(new Action<EnterpriseJobRequester>(this.attach_EnterpriseJobRequesters), new Action<EnterpriseJobRequester>(this.detach_EnterpriseJobRequesters));
			this._EnterpriseJobRequestQueues = new EntitySet<EnterpriseJobRequestQueue>(new Action<EnterpriseJobRequestQueue>(this.attach_EnterpriseJobRequestQueues), new Action<EnterpriseJobRequestQueue>(this.detach_EnterpriseJobRequestQueues));
			this._Enterprise = default(EntityRef<Enterprise>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num", DbType="Int NOT NULL")]
		public int Num
		{
			get
			{
				return this._Num;
			}
			set
			{
				if ((this._Num != value))
				{
					this.OnNumChanging(value);
					this.SendPropertyChanging();
					this._Num = value;
					this.SendPropertyChanged("Num");
					this.OnNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Int NOT NULL")]
		public int Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nature", DbType="NVarChar(40)")]
		public string Nature
		{
			get
			{
				return this._Nature;
			}
			set
			{
				if ((this._Nature != value))
				{
					this.OnNatureChanging(value);
					this.SendPropertyChanging();
					this._Nature = value;
					this.SendPropertyChanged("Nature");
					this.OnNatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeScope", DbType="NVarChar(10)")]
		public string AgeScope
		{
			get
			{
				return this._AgeScope;
			}
			set
			{
				if ((this._AgeScope != value))
				{
					this.OnAgeScopeChanging(value);
					this.SendPropertyChanging();
					this._AgeScope = value;
					this.SendPropertyChanged("AgeScope");
					this.OnAgeScopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(15)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(10)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(20)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Professional", DbType="NVarChar(30)")]
		public string Professional
		{
			get
			{
				return this._Professional;
			}
			set
			{
				if ((this._Professional != value))
				{
					this.OnProfessionalChanging(value);
					this.SendPropertyChanging();
					this._Professional = value;
					this.SendPropertyChanged("Professional");
					this.OnProfessionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPlace", DbType="NVarChar(40)")]
		public string WorkPlace
		{
			get
			{
				return this._WorkPlace;
			}
			set
			{
				if ((this._WorkPlace != value))
				{
					this.OnWorkPlaceChanging(value);
					this.SendPropertyChanging();
					this._WorkPlace = value;
					this.SendPropertyChanged("WorkPlace");
					this.OnWorkPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecruitmentTargets", DbType="NVarChar(30)")]
		public string RecruitmentTargets
		{
			get
			{
				return this._RecruitmentTargets;
			}
			set
			{
				if ((this._RecruitmentTargets != value))
				{
					this.OnRecruitmentTargetsChanging(value);
					this.SendPropertyChanging();
					this._RecruitmentTargets = value;
					this.SendPropertyChanged("RecruitmentTargets");
					this.OnRecruitmentTargetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryScope", DbType="NVarChar(30)")]
		public string SalaryScope
		{
			get
			{
				return this._SalaryScope;
			}
			set
			{
				if ((this._SalaryScope != value))
				{
					this.OnSalaryScopeChanging(value);
					this.SendPropertyChanging();
					this._SalaryScope = value;
					this.SendPropertyChanged("SalaryScope");
					this.OnSalaryScopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseCode", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string EnterpriseCode
		{
			get
			{
				return this._EnterpriseCode;
			}
			set
			{
				if ((this._EnterpriseCode != value))
				{
					if (this._Enterprise.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseCodeChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseCode = value;
					this.SendPropertyChanged("EnterpriseCode");
					this.OnEnterpriseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartName", DbType="NVarChar(50)")]
		public string DepartName
		{
			get
			{
				return this._DepartName;
			}
			set
			{
				if ((this._DepartName != value))
				{
					this.OnDepartNameChanging(value);
					this.SendPropertyChanging();
					this._DepartName = value;
					this.SendPropertyChanged("DepartName");
					this.OnDepartNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="VarChar(20)")]
		public string Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseJob_EnterpriseJobRequester", Storage="_EnterpriseJobRequesters", ThisKey="Code", OtherKey="JobCode")]
		public EntitySet<EnterpriseJobRequester> EnterpriseJobRequesters
		{
			get
			{
				return this._EnterpriseJobRequesters;
			}
			set
			{
				this._EnterpriseJobRequesters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseJob_EnterpriseJobRequestQueue", Storage="_EnterpriseJobRequestQueues", ThisKey="Code", OtherKey="JobCode")]
		public EntitySet<EnterpriseJobRequestQueue> EnterpriseJobRequestQueues
		{
			get
			{
				return this._EnterpriseJobRequestQueues;
			}
			set
			{
				this._EnterpriseJobRequestQueues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprise_EnterpriseJob", Storage="_Enterprise", ThisKey="EnterpriseCode", OtherKey="Code", IsForeignKey=true)]
		public Enterprise Enterprise
		{
			get
			{
				return this._Enterprise.Entity;
			}
			set
			{
				Enterprise previousValue = this._Enterprise.Entity;
				if (((previousValue != value) 
							|| (this._Enterprise.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprise.Entity = null;
						previousValue.EnterpriseJobs.Remove(this);
					}
					this._Enterprise.Entity = value;
					if ((value != null))
					{
						value.EnterpriseJobs.Add(this);
						this._EnterpriseCode = value.Code;
					}
					else
					{
						this._EnterpriseCode = default(string);
					}
					this.SendPropertyChanged("Enterprise");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EnterpriseJobRequesters(EnterpriseJobRequester entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseJob = this;
		}
		
		private void detach_EnterpriseJobRequesters(EnterpriseJobRequester entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseJob = null;
		}
		
		private void attach_EnterpriseJobRequestQueues(EnterpriseJobRequestQueue entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseJob = this;
		}
		
		private void detach_EnterpriseJobRequestQueues(EnterpriseJobRequestQueue entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseJob = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseJobReferraler")]
	public partial class EnterpriseJobReferraler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RequestQueueID;
		
		private string _UserName;
		
		private int _UserType;
		
		private int _ReferralState;
		
		private System.DateTime _CreateTime;
		
		private string _Content;
		
		private EntitySet<EnterpriseJobReferralerRemark> _EnterpriseJobReferralerRemarks;
		
		private EntityRef<EnterpriseJobRequestQueue> _EnterpriseJobRequestQueue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestQueueIDChanging(int value);
    partial void OnRequestQueueIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserTypeChanging(int value);
    partial void OnUserTypeChanged();
    partial void OnReferralStateChanging(int value);
    partial void OnReferralStateChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    #endregion
		
		public EnterpriseJobReferraler()
		{
			this._EnterpriseJobReferralerRemarks = new EntitySet<EnterpriseJobReferralerRemark>(new Action<EnterpriseJobReferralerRemark>(this.attach_EnterpriseJobReferralerRemarks), new Action<EnterpriseJobReferralerRemark>(this.detach_EnterpriseJobReferralerRemarks));
			this._EnterpriseJobRequestQueue = default(EntityRef<EnterpriseJobRequestQueue>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestQueueID", DbType="Int NOT NULL")]
		public int RequestQueueID
		{
			get
			{
				return this._RequestQueueID;
			}
			set
			{
				if ((this._RequestQueueID != value))
				{
					if (this._EnterpriseJobRequestQueue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestQueueIDChanging(value);
					this.SendPropertyChanging();
					this._RequestQueueID = value;
					this.SendPropertyChanged("RequestQueueID");
					this.OnRequestQueueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="Int NOT NULL")]
		public int UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferralState", DbType="Int NOT NULL")]
		public int ReferralState
		{
			get
			{
				return this._ReferralState;
			}
			set
			{
				if ((this._ReferralState != value))
				{
					this.OnReferralStateChanging(value);
					this.SendPropertyChanging();
					this._ReferralState = value;
					this.SendPropertyChanged("ReferralState");
					this.OnReferralStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(500)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseJobReferraler_EnterpriseJobReferralerRemark", Storage="_EnterpriseJobReferralerRemarks", ThisKey="ID", OtherKey="ReferralerID")]
		public EntitySet<EnterpriseJobReferralerRemark> EnterpriseJobReferralerRemarks
		{
			get
			{
				return this._EnterpriseJobReferralerRemarks;
			}
			set
			{
				this._EnterpriseJobReferralerRemarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseJobRequestQueue_EnterpriseJobReferraler", Storage="_EnterpriseJobRequestQueue", ThisKey="RequestQueueID", OtherKey="ID", IsForeignKey=true)]
		public EnterpriseJobRequestQueue EnterpriseJobRequestQueue
		{
			get
			{
				return this._EnterpriseJobRequestQueue.Entity;
			}
			set
			{
				EnterpriseJobRequestQueue previousValue = this._EnterpriseJobRequestQueue.Entity;
				if (((previousValue != value) 
							|| (this._EnterpriseJobRequestQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnterpriseJobRequestQueue.Entity = null;
						previousValue.EnterpriseJobReferralers.Remove(this);
					}
					this._EnterpriseJobRequestQueue.Entity = value;
					if ((value != null))
					{
						value.EnterpriseJobReferralers.Add(this);
						this._RequestQueueID = value.ID;
					}
					else
					{
						this._RequestQueueID = default(int);
					}
					this.SendPropertyChanged("EnterpriseJobRequestQueue");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EnterpriseJobReferralerRemarks(EnterpriseJobReferralerRemark entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseJobReferraler = this;
		}
		
		private void detach_EnterpriseJobReferralerRemarks(EnterpriseJobReferralerRemark entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseJobReferraler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseJobReferralerRemark")]
	public partial class EnterpriseJobReferralerRemark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ReferralerID;
		
		private string _Content;
		
		private System.DateTime _CreateTime;
		
		private int _ReferralState;
		
		private EntityRef<EnterpriseJobReferraler> _EnterpriseJobReferraler;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReferralerIDChanging(int value);
    partial void OnReferralerIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnReferralStateChanging(int value);
    partial void OnReferralStateChanged();
    #endregion
		
		public EnterpriseJobReferralerRemark()
		{
			this._EnterpriseJobReferraler = default(EntityRef<EnterpriseJobReferraler>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferralerID", DbType="Int NOT NULL")]
		public int ReferralerID
		{
			get
			{
				return this._ReferralerID;
			}
			set
			{
				if ((this._ReferralerID != value))
				{
					if (this._EnterpriseJobReferraler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferralerIDChanging(value);
					this.SendPropertyChanging();
					this._ReferralerID = value;
					this.SendPropertyChanged("ReferralerID");
					this.OnReferralerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(500)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferralState", DbType="Int NOT NULL")]
		public int ReferralState
		{
			get
			{
				return this._ReferralState;
			}
			set
			{
				if ((this._ReferralState != value))
				{
					this.OnReferralStateChanging(value);
					this.SendPropertyChanging();
					this._ReferralState = value;
					this.SendPropertyChanged("ReferralState");
					this.OnReferralStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseJobReferraler_EnterpriseJobReferralerRemark", Storage="_EnterpriseJobReferraler", ThisKey="ReferralerID", OtherKey="ID", IsForeignKey=true)]
		public EnterpriseJobReferraler EnterpriseJobReferraler
		{
			get
			{
				return this._EnterpriseJobReferraler.Entity;
			}
			set
			{
				EnterpriseJobReferraler previousValue = this._EnterpriseJobReferraler.Entity;
				if (((previousValue != value) 
							|| (this._EnterpriseJobReferraler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnterpriseJobReferraler.Entity = null;
						previousValue.EnterpriseJobReferralerRemarks.Remove(this);
					}
					this._EnterpriseJobReferraler.Entity = value;
					if ((value != null))
					{
						value.EnterpriseJobReferralerRemarks.Add(this);
						this._ReferralerID = value.ID;
					}
					else
					{
						this._ReferralerID = default(int);
					}
					this.SendPropertyChanged("EnterpriseJobReferraler");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseJobRequester")]
	public partial class EnterpriseJobRequester : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _JobCode;
		
		private string _StudentNum;
		
		private System.DateTime _RequestTime;
		
		private System.Nullable<int> _RequestQueueID;
		
		private EntitySet<EnterpriseBatchRelative> _EnterpriseBatchRelatives;
		
		private EntitySet<JobRequestRecruitStage> _JobRequestRecruitStages;
		
		private EntityRef<EnterpriseJob> _EnterpriseJob;
		
		private EntityRef<EnterpriseJobRequestQueue> _EnterpriseJobRequestQueue;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJobCodeChanging(string value);
    partial void OnJobCodeChanged();
    partial void OnStudentNumChanging(string value);
    partial void OnStudentNumChanged();
    partial void OnRequestTimeChanging(System.DateTime value);
    partial void OnRequestTimeChanged();
    partial void OnRequestQueueIDChanging(System.Nullable<int> value);
    partial void OnRequestQueueIDChanged();
    #endregion
		
		public EnterpriseJobRequester()
		{
			this._EnterpriseBatchRelatives = new EntitySet<EnterpriseBatchRelative>(new Action<EnterpriseBatchRelative>(this.attach_EnterpriseBatchRelatives), new Action<EnterpriseBatchRelative>(this.detach_EnterpriseBatchRelatives));
			this._JobRequestRecruitStages = new EntitySet<JobRequestRecruitStage>(new Action<JobRequestRecruitStage>(this.attach_JobRequestRecruitStages), new Action<JobRequestRecruitStage>(this.detach_JobRequestRecruitStages));
			this._EnterpriseJob = default(EntityRef<EnterpriseJob>);
			this._EnterpriseJobRequestQueue = default(EntityRef<EnterpriseJobRequestQueue>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					if (this._EnterpriseJob.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobCodeChanging(value);
					this.SendPropertyChanging();
					this._JobCode = value;
					this.SendPropertyChanged("JobCode");
					this.OnJobCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentNumChanging(value);
					this.SendPropertyChanging();
					this._StudentNum = value;
					this.SendPropertyChanged("StudentNum");
					this.OnStudentNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="DateTime NOT NULL")]
		public System.DateTime RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestQueueID", DbType="Int")]
		public System.Nullable<int> RequestQueueID
		{
			get
			{
				return this._RequestQueueID;
			}
			set
			{
				if ((this._RequestQueueID != value))
				{
					if (this._EnterpriseJobRequestQueue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestQueueIDChanging(value);
					this.SendPropertyChanging();
					this._RequestQueueID = value;
					this.SendPropertyChanged("RequestQueueID");
					this.OnRequestQueueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseJobRequester_EnterpriseBatchRelative", Storage="_EnterpriseBatchRelatives", ThisKey="ID", OtherKey="JobRequestID")]
		public EntitySet<EnterpriseBatchRelative> EnterpriseBatchRelatives
		{
			get
			{
				return this._EnterpriseBatchRelatives;
			}
			set
			{
				this._EnterpriseBatchRelatives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseJobRequester_JobRequestRecruitStage", Storage="_JobRequestRecruitStages", ThisKey="ID", OtherKey="JobRequestID")]
		public EntitySet<JobRequestRecruitStage> JobRequestRecruitStages
		{
			get
			{
				return this._JobRequestRecruitStages;
			}
			set
			{
				this._JobRequestRecruitStages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseJob_EnterpriseJobRequester", Storage="_EnterpriseJob", ThisKey="JobCode", OtherKey="Code", IsForeignKey=true)]
		public EnterpriseJob EnterpriseJob
		{
			get
			{
				return this._EnterpriseJob.Entity;
			}
			set
			{
				EnterpriseJob previousValue = this._EnterpriseJob.Entity;
				if (((previousValue != value) 
							|| (this._EnterpriseJob.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnterpriseJob.Entity = null;
						previousValue.EnterpriseJobRequesters.Remove(this);
					}
					this._EnterpriseJob.Entity = value;
					if ((value != null))
					{
						value.EnterpriseJobRequesters.Add(this);
						this._JobCode = value.Code;
					}
					else
					{
						this._JobCode = default(string);
					}
					this.SendPropertyChanged("EnterpriseJob");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseJobRequestQueue_EnterpriseJobRequester", Storage="_EnterpriseJobRequestQueue", ThisKey="RequestQueueID", OtherKey="ID", IsForeignKey=true)]
		public EnterpriseJobRequestQueue EnterpriseJobRequestQueue
		{
			get
			{
				return this._EnterpriseJobRequestQueue.Entity;
			}
			set
			{
				EnterpriseJobRequestQueue previousValue = this._EnterpriseJobRequestQueue.Entity;
				if (((previousValue != value) 
							|| (this._EnterpriseJobRequestQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnterpriseJobRequestQueue.Entity = null;
						previousValue.EnterpriseJobRequesters.Remove(this);
					}
					this._EnterpriseJobRequestQueue.Entity = value;
					if ((value != null))
					{
						value.EnterpriseJobRequesters.Add(this);
						this._RequestQueueID = value.ID;
					}
					else
					{
						this._RequestQueueID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EnterpriseJobRequestQueue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_EnterpriseJobRequester", Storage="_Student", ThisKey="StudentNum", OtherKey="StudentNum", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.EnterpriseJobRequesters.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.EnterpriseJobRequesters.Add(this);
						this._StudentNum = value.StudentNum;
					}
					else
					{
						this._StudentNum = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EnterpriseBatchRelatives(EnterpriseBatchRelative entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseJobRequester = this;
		}
		
		private void detach_EnterpriseBatchRelatives(EnterpriseBatchRelative entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseJobRequester = null;
		}
		
		private void attach_JobRequestRecruitStages(JobRequestRecruitStage entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseJobRequester = this;
		}
		
		private void detach_JobRequestRecruitStages(JobRequestRecruitStage entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseJobRequester = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseJobRequestQueue")]
	public partial class EnterpriseJobRequestQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _JobCode;
		
		private string _StudentNum;
		
		private bool _IsProcessed;
		
		private bool _IsSendToEnterprise;
		
		private System.DateTime _CreateTime;
		
		private int _ReferralState;
		
		private string _Content;
		
		private string _Note;
		
		private int _RequestQueueType;
		
		private EntitySet<EnterpriseJobReferraler> _EnterpriseJobReferralers;
		
		private EntitySet<EnterpriseJobRequester> _EnterpriseJobRequesters;
		
		private EntityRef<EnterpriseJob> _EnterpriseJob;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJobCodeChanging(string value);
    partial void OnJobCodeChanged();
    partial void OnStudentNumChanging(string value);
    partial void OnStudentNumChanged();
    partial void OnIsProcessedChanging(bool value);
    partial void OnIsProcessedChanged();
    partial void OnIsSendToEnterpriseChanging(bool value);
    partial void OnIsSendToEnterpriseChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnReferralStateChanging(int value);
    partial void OnReferralStateChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnRequestQueueTypeChanging(int value);
    partial void OnRequestQueueTypeChanged();
    #endregion
		
		public EnterpriseJobRequestQueue()
		{
			this._EnterpriseJobReferralers = new EntitySet<EnterpriseJobReferraler>(new Action<EnterpriseJobReferraler>(this.attach_EnterpriseJobReferralers), new Action<EnterpriseJobReferraler>(this.detach_EnterpriseJobReferralers));
			this._EnterpriseJobRequesters = new EntitySet<EnterpriseJobRequester>(new Action<EnterpriseJobRequester>(this.attach_EnterpriseJobRequesters), new Action<EnterpriseJobRequester>(this.detach_EnterpriseJobRequesters));
			this._EnterpriseJob = default(EntityRef<EnterpriseJob>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					if (this._EnterpriseJob.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobCodeChanging(value);
					this.SendPropertyChanging();
					this._JobCode = value;
					this.SendPropertyChanged("JobCode");
					this.OnJobCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentNumChanging(value);
					this.SendPropertyChanging();
					this._StudentNum = value;
					this.SendPropertyChanged("StudentNum");
					this.OnStudentNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcessed", DbType="Bit NOT NULL")]
		public bool IsProcessed
		{
			get
			{
				return this._IsProcessed;
			}
			set
			{
				if ((this._IsProcessed != value))
				{
					this.OnIsProcessedChanging(value);
					this.SendPropertyChanging();
					this._IsProcessed = value;
					this.SendPropertyChanged("IsProcessed");
					this.OnIsProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSendToEnterprise", DbType="Bit NOT NULL")]
		public bool IsSendToEnterprise
		{
			get
			{
				return this._IsSendToEnterprise;
			}
			set
			{
				if ((this._IsSendToEnterprise != value))
				{
					this.OnIsSendToEnterpriseChanging(value);
					this.SendPropertyChanging();
					this._IsSendToEnterprise = value;
					this.SendPropertyChanged("IsSendToEnterprise");
					this.OnIsSendToEnterpriseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferralState", DbType="Int NOT NULL")]
		public int ReferralState
		{
			get
			{
				return this._ReferralState;
			}
			set
			{
				if ((this._ReferralState != value))
				{
					this.OnReferralStateChanging(value);
					this.SendPropertyChanging();
					this._ReferralState = value;
					this.SendPropertyChanged("ReferralState");
					this.OnReferralStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(500)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestQueueType", DbType="Int NOT NULL")]
		public int RequestQueueType
		{
			get
			{
				return this._RequestQueueType;
			}
			set
			{
				if ((this._RequestQueueType != value))
				{
					this.OnRequestQueueTypeChanging(value);
					this.SendPropertyChanging();
					this._RequestQueueType = value;
					this.SendPropertyChanged("RequestQueueType");
					this.OnRequestQueueTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseJobRequestQueue_EnterpriseJobReferraler", Storage="_EnterpriseJobReferralers", ThisKey="ID", OtherKey="RequestQueueID")]
		public EntitySet<EnterpriseJobReferraler> EnterpriseJobReferralers
		{
			get
			{
				return this._EnterpriseJobReferralers;
			}
			set
			{
				this._EnterpriseJobReferralers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseJobRequestQueue_EnterpriseJobRequester", Storage="_EnterpriseJobRequesters", ThisKey="ID", OtherKey="RequestQueueID")]
		public EntitySet<EnterpriseJobRequester> EnterpriseJobRequesters
		{
			get
			{
				return this._EnterpriseJobRequesters;
			}
			set
			{
				this._EnterpriseJobRequesters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseJob_EnterpriseJobRequestQueue", Storage="_EnterpriseJob", ThisKey="JobCode", OtherKey="Code", IsForeignKey=true)]
		public EnterpriseJob EnterpriseJob
		{
			get
			{
				return this._EnterpriseJob.Entity;
			}
			set
			{
				EnterpriseJob previousValue = this._EnterpriseJob.Entity;
				if (((previousValue != value) 
							|| (this._EnterpriseJob.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnterpriseJob.Entity = null;
						previousValue.EnterpriseJobRequestQueues.Remove(this);
					}
					this._EnterpriseJob.Entity = value;
					if ((value != null))
					{
						value.EnterpriseJobRequestQueues.Add(this);
						this._JobCode = value.Code;
					}
					else
					{
						this._JobCode = default(string);
					}
					this.SendPropertyChanged("EnterpriseJob");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_EnterpriseJobRequestQueue", Storage="_Student", ThisKey="StudentNum", OtherKey="StudentNum", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.EnterpriseJobRequestQueues.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.EnterpriseJobRequestQueues.Add(this);
						this._StudentNum = value.StudentNum;
					}
					else
					{
						this._StudentNum = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EnterpriseJobReferralers(EnterpriseJobReferraler entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseJobRequestQueue = this;
		}
		
		private void detach_EnterpriseJobReferralers(EnterpriseJobReferraler entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseJobRequestQueue = null;
		}
		
		private void attach_EnterpriseJobRequesters(EnterpriseJobRequester entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseJobRequestQueue = this;
		}
		
		private void detach_EnterpriseJobRequesters(EnterpriseJobRequester entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseJobRequestQueue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseRecruitBatch")]
	public partial class EnterpriseRecruitBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Description;
		
		private string _EnterpriseCode;
		
		private EntitySet<EnterpriseBatchRelative> _EnterpriseBatchRelatives;
		
		private EntityRef<Enterprise> _Enterprise;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnEnterpriseCodeChanging(string value);
    partial void OnEnterpriseCodeChanged();
    #endregion
		
		public EnterpriseRecruitBatch()
		{
			this._EnterpriseBatchRelatives = new EntitySet<EnterpriseBatchRelative>(new Action<EnterpriseBatchRelative>(this.attach_EnterpriseBatchRelatives), new Action<EnterpriseBatchRelative>(this.detach_EnterpriseBatchRelatives));
			this._Enterprise = default(EntityRef<Enterprise>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(300)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseCode", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string EnterpriseCode
		{
			get
			{
				return this._EnterpriseCode;
			}
			set
			{
				if ((this._EnterpriseCode != value))
				{
					if (this._Enterprise.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseCodeChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseCode = value;
					this.SendPropertyChanged("EnterpriseCode");
					this.OnEnterpriseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseRecruitBatch_EnterpriseBatchRelative", Storage="_EnterpriseBatchRelatives", ThisKey="ID", OtherKey="RecruitBatchID")]
		public EntitySet<EnterpriseBatchRelative> EnterpriseBatchRelatives
		{
			get
			{
				return this._EnterpriseBatchRelatives;
			}
			set
			{
				this._EnterpriseBatchRelatives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprise_EnterpriseRecruitBatch", Storage="_Enterprise", ThisKey="EnterpriseCode", OtherKey="Code", IsForeignKey=true)]
		public Enterprise Enterprise
		{
			get
			{
				return this._Enterprise.Entity;
			}
			set
			{
				Enterprise previousValue = this._Enterprise.Entity;
				if (((previousValue != value) 
							|| (this._Enterprise.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprise.Entity = null;
						previousValue.EnterpriseRecruitBatches.Remove(this);
					}
					this._Enterprise.Entity = value;
					if ((value != null))
					{
						value.EnterpriseRecruitBatches.Add(this);
						this._EnterpriseCode = value.Code;
					}
					else
					{
						this._EnterpriseCode = default(string);
					}
					this.SendPropertyChanged("Enterprise");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EnterpriseBatchRelatives(EnterpriseBatchRelative entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseRecruitBatch = this;
		}
		
		private void detach_EnterpriseBatchRelatives(EnterpriseBatchRelative entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseRecruitBatch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseScope")]
	public partial class EnterpriseScope : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Enterprise> _Enterprises;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public EnterpriseScope()
		{
			this._Enterprises = new EntitySet<Enterprise>(new Action<Enterprise>(this.attach_Enterprises), new Action<Enterprise>(this.detach_Enterprises));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseScope_Enterprise", Storage="_Enterprises", ThisKey="Code", OtherKey="ScopeCode")]
		public EntitySet<Enterprise> Enterprises
		{
			get
			{
				return this._Enterprises;
			}
			set
			{
				this._Enterprises.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Enterprises(Enterprise entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseScope = this;
		}
		
		private void detach_Enterprises(Enterprise entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseScope = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseType")]
	public partial class EnterpriseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public EnterpriseType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseVisited")]
	public partial class EnterpriseVisited : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _EnterpriseCode;
		
		private System.DateTime _VisitTime;
		
		private string _IPAddress;
		
		private string _UserName;
		
		private int _UserType;
		
		private EntityRef<Enterprise> _Enterprise;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEnterpriseCodeChanging(string value);
    partial void OnEnterpriseCodeChanged();
    partial void OnVisitTimeChanging(System.DateTime value);
    partial void OnVisitTimeChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserTypeChanging(int value);
    partial void OnUserTypeChanged();
    #endregion
		
		public EnterpriseVisited()
		{
			this._Enterprise = default(EntityRef<Enterprise>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseCode", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string EnterpriseCode
		{
			get
			{
				return this._EnterpriseCode;
			}
			set
			{
				if ((this._EnterpriseCode != value))
				{
					if (this._Enterprise.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseCodeChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseCode = value;
					this.SendPropertyChanged("EnterpriseCode");
					this.OnEnterpriseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitTime", DbType="DateTime NOT NULL")]
		public System.DateTime VisitTime
		{
			get
			{
				return this._VisitTime;
			}
			set
			{
				if ((this._VisitTime != value))
				{
					this.OnVisitTimeChanging(value);
					this.SendPropertyChanging();
					this._VisitTime = value;
					this.SendPropertyChanged("VisitTime");
					this.OnVisitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(40)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="Int NOT NULL")]
		public int UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprise_EnterpriseVisited", Storage="_Enterprise", ThisKey="EnterpriseCode", OtherKey="Code", IsForeignKey=true)]
		public Enterprise Enterprise
		{
			get
			{
				return this._Enterprise.Entity;
			}
			set
			{
				Enterprise previousValue = this._Enterprise.Entity;
				if (((previousValue != value) 
							|| (this._Enterprise.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprise.Entity = null;
						previousValue.EnterpriseVisiteds.Remove(this);
					}
					this._Enterprise.Entity = value;
					if ((value != null))
					{
						value.EnterpriseVisiteds.Add(this);
						this._EnterpriseCode = value.Code;
					}
					else
					{
						this._EnterpriseCode = default(string);
					}
					this.SendPropertyChanged("Enterprise");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FamilyAccount")]
	public partial class FamilyAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FamilyAccountNum;
		
		private string _Photo;
		
		private string _ThumbPath;
		
		private string _Interested;
		
		private string _AboutMe;
		
		private System.DateTime _LastUpdatedTime;
		
		private string _Telephone;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private EntityRef<StudentFamilyAccount> _StudentFamilyAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFamilyAccountNumChanging(string value);
    partial void OnFamilyAccountNumChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnThumbPathChanging(string value);
    partial void OnThumbPathChanged();
    partial void OnInterestedChanging(string value);
    partial void OnInterestedChanged();
    partial void OnAboutMeChanging(string value);
    partial void OnAboutMeChanged();
    partial void OnLastUpdatedTimeChanging(System.DateTime value);
    partial void OnLastUpdatedTimeChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    #endregion
		
		public FamilyAccount()
		{
			this._StudentFamilyAccount = default(EntityRef<StudentFamilyAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyAccountNum", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FamilyAccountNum
		{
			get
			{
				return this._FamilyAccountNum;
			}
			set
			{
				if ((this._FamilyAccountNum != value))
				{
					if (this._StudentFamilyAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyAccountNumChanging(value);
					this.SendPropertyChanging();
					this._FamilyAccountNum = value;
					this.SendPropertyChanged("FamilyAccountNum");
					this.OnFamilyAccountNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(200)")]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbPath", DbType="NVarChar(200)")]
		public string ThumbPath
		{
			get
			{
				return this._ThumbPath;
			}
			set
			{
				if ((this._ThumbPath != value))
				{
					this.OnThumbPathChanging(value);
					this.SendPropertyChanging();
					this._ThumbPath = value;
					this.SendPropertyChanged("ThumbPath");
					this.OnThumbPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interested", DbType="NVarChar(500)")]
		public string Interested
		{
			get
			{
				return this._Interested;
			}
			set
			{
				if ((this._Interested != value))
				{
					this.OnInterestedChanging(value);
					this.SendPropertyChanging();
					this._Interested = value;
					this.SendPropertyChanged("Interested");
					this.OnInterestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutMe", DbType="NVarChar(500)")]
		public string AboutMe
		{
			get
			{
				return this._AboutMe;
			}
			set
			{
				if ((this._AboutMe != value))
				{
					this.OnAboutMeChanging(value);
					this.SendPropertyChanging();
					this._AboutMe = value;
					this.SendPropertyChanged("AboutMe");
					this.OnAboutMeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedTime
		{
			get
			{
				return this._LastUpdatedTime;
			}
			set
			{
				if ((this._LastUpdatedTime != value))
				{
					this.OnLastUpdatedTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedTime = value;
					this.SendPropertyChanged("LastUpdatedTime");
					this.OnLastUpdatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentFamilyAccount_FamilyAccount", Storage="_StudentFamilyAccount", ThisKey="FamilyAccountNum", OtherKey="UserName", IsForeignKey=true)]
		public StudentFamilyAccount StudentFamilyAccount
		{
			get
			{
				return this._StudentFamilyAccount.Entity;
			}
			set
			{
				StudentFamilyAccount previousValue = this._StudentFamilyAccount.Entity;
				if (((previousValue != value) 
							|| (this._StudentFamilyAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentFamilyAccount.Entity = null;
						previousValue.FamilyAccount = null;
					}
					this._StudentFamilyAccount.Entity = value;
					if ((value != null))
					{
						value.FamilyAccount = this;
						this._FamilyAccountNum = value.UserName;
					}
					else
					{
						this._FamilyAccountNum = default(string);
					}
					this.SendPropertyChanged("StudentFamilyAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobRequestRecruitStage")]
	public partial class JobRequestRecruitStage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _JobRequestID;
		
		private int _RecruitFlowID;
		
		private string _Description;
		
		private System.DateTime _CreateTime;
		
		private bool _IsNewest;
		
		private EntityRef<EnterpriseJobRequester> _EnterpriseJobRequester;
		
		private EntityRef<RecruitFlowSetted> _RecruitFlowSetted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJobRequestIDChanging(int value);
    partial void OnJobRequestIDChanged();
    partial void OnRecruitFlowIDChanging(int value);
    partial void OnRecruitFlowIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnIsNewestChanging(bool value);
    partial void OnIsNewestChanged();
    #endregion
		
		public JobRequestRecruitStage()
		{
			this._EnterpriseJobRequester = default(EntityRef<EnterpriseJobRequester>);
			this._RecruitFlowSetted = default(EntityRef<RecruitFlowSetted>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobRequestID", DbType="Int NOT NULL")]
		public int JobRequestID
		{
			get
			{
				return this._JobRequestID;
			}
			set
			{
				if ((this._JobRequestID != value))
				{
					if (this._EnterpriseJobRequester.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobRequestIDChanging(value);
					this.SendPropertyChanging();
					this._JobRequestID = value;
					this.SendPropertyChanged("JobRequestID");
					this.OnJobRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecruitFlowID", DbType="Int NOT NULL")]
		public int RecruitFlowID
		{
			get
			{
				return this._RecruitFlowID;
			}
			set
			{
				if ((this._RecruitFlowID != value))
				{
					if (this._RecruitFlowSetted.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecruitFlowIDChanging(value);
					this.SendPropertyChanging();
					this._RecruitFlowID = value;
					this.SendPropertyChanged("RecruitFlowID");
					this.OnRecruitFlowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNewest", DbType="Bit NOT NULL")]
		public bool IsNewest
		{
			get
			{
				return this._IsNewest;
			}
			set
			{
				if ((this._IsNewest != value))
				{
					this.OnIsNewestChanging(value);
					this.SendPropertyChanging();
					this._IsNewest = value;
					this.SendPropertyChanged("IsNewest");
					this.OnIsNewestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseJobRequester_JobRequestRecruitStage", Storage="_EnterpriseJobRequester", ThisKey="JobRequestID", OtherKey="ID", IsForeignKey=true)]
		public EnterpriseJobRequester EnterpriseJobRequester
		{
			get
			{
				return this._EnterpriseJobRequester.Entity;
			}
			set
			{
				EnterpriseJobRequester previousValue = this._EnterpriseJobRequester.Entity;
				if (((previousValue != value) 
							|| (this._EnterpriseJobRequester.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnterpriseJobRequester.Entity = null;
						previousValue.JobRequestRecruitStages.Remove(this);
					}
					this._EnterpriseJobRequester.Entity = value;
					if ((value != null))
					{
						value.JobRequestRecruitStages.Add(this);
						this._JobRequestID = value.ID;
					}
					else
					{
						this._JobRequestID = default(int);
					}
					this.SendPropertyChanged("EnterpriseJobRequester");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecruitFlowSetted_JobRequestRecruitStage", Storage="_RecruitFlowSetted", ThisKey="RecruitFlowID", OtherKey="ID", IsForeignKey=true)]
		public RecruitFlowSetted RecruitFlowSetted
		{
			get
			{
				return this._RecruitFlowSetted.Entity;
			}
			set
			{
				RecruitFlowSetted previousValue = this._RecruitFlowSetted.Entity;
				if (((previousValue != value) 
							|| (this._RecruitFlowSetted.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecruitFlowSetted.Entity = null;
						previousValue.JobRequestRecruitStages.Remove(this);
					}
					this._RecruitFlowSetted.Entity = value;
					if ((value != null))
					{
						value.JobRequestRecruitStages.Add(this);
						this._RecruitFlowID = value.ID;
					}
					else
					{
						this._RecruitFlowID = default(int);
					}
					this.SendPropertyChanged("RecruitFlowSetted");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailQueue")]
	public partial class MailQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Message;
		
		private System.DateTime _CreateTime;
		
		private bool _IsSended;
		
		private string _Sender;
		
		private string _Receiver;
		
		private string _Cc;
		
		private string _ReceiverName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnIsSendedChanging(bool value);
    partial void OnIsSendedChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnReceiverChanging(string value);
    partial void OnReceiverChanged();
    partial void OnCcChanging(string value);
    partial void OnCcChanged();
    partial void OnReceiverNameChanging(string value);
    partial void OnReceiverNameChanged();
    #endregion
		
		public MailQueue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(300)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(3000)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSended", DbType="Bit NOT NULL")]
		public bool IsSended
		{
			get
			{
				return this._IsSended;
			}
			set
			{
				if ((this._IsSended != value))
				{
					this.OnIsSendedChanging(value);
					this.SendPropertyChanging();
					this._IsSended = value;
					this.SendPropertyChanged("IsSended");
					this.OnIsSendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="NVarChar(50)")]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receiver", DbType="NVarChar(300)")]
		public string Receiver
		{
			get
			{
				return this._Receiver;
			}
			set
			{
				if ((this._Receiver != value))
				{
					this.OnReceiverChanging(value);
					this.SendPropertyChanging();
					this._Receiver = value;
					this.SendPropertyChanged("Receiver");
					this.OnReceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cc", DbType="NVarChar(300)")]
		public string Cc
		{
			get
			{
				return this._Cc;
			}
			set
			{
				if ((this._Cc != value))
				{
					this.OnCcChanging(value);
					this.SendPropertyChanging();
					this._Cc = value;
					this.SendPropertyChanged("Cc");
					this.OnCcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverName", DbType="NVarChar(300)")]
		public string ReceiverName
		{
			get
			{
				return this._ReceiverName;
			}
			set
			{
				if ((this._ReceiverName != value))
				{
					this.OnReceiverNameChanging(value);
					this.SendPropertyChanging();
					this._ReceiverName = value;
					this.SendPropertyChanged("ReceiverName");
					this.OnReceiverNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Marjor")]
	public partial class Marjor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private string _DepartCode;
		
		private EntitySet<Course> _Courses;
		
		private EntitySet<Student> _Students;
		
		private EntitySet<TeacherRelativeCourse> _TeacherRelativeCourses;
		
		private EntityRef<Depart> _Depart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDepartCodeChanging(string value);
    partial void OnDepartCodeChanged();
    #endregion
		
		public Marjor()
		{
			this._Courses = new EntitySet<Course>(new Action<Course>(this.attach_Courses), new Action<Course>(this.detach_Courses));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._TeacherRelativeCourses = new EntitySet<TeacherRelativeCourse>(new Action<TeacherRelativeCourse>(this.attach_TeacherRelativeCourses), new Action<TeacherRelativeCourse>(this.detach_TeacherRelativeCourses));
			this._Depart = default(EntityRef<Depart>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string DepartCode
		{
			get
			{
				return this._DepartCode;
			}
			set
			{
				if ((this._DepartCode != value))
				{
					if (this._Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartCode = value;
					this.SendPropertyChanged("DepartCode");
					this.OnDepartCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marjor_Course", Storage="_Courses", ThisKey="Code", OtherKey="MarjorCode")]
		public EntitySet<Course> Courses
		{
			get
			{
				return this._Courses;
			}
			set
			{
				this._Courses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marjor_Student", Storage="_Students", ThisKey="Code", OtherKey="MarjorCode")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marjor_TeacherRelativeCourse", Storage="_TeacherRelativeCourses", ThisKey="Code", OtherKey="MarjorCode")]
		public EntitySet<TeacherRelativeCourse> TeacherRelativeCourses
		{
			get
			{
				return this._TeacherRelativeCourses;
			}
			set
			{
				this._TeacherRelativeCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depart_Marjor", Storage="_Depart", ThisKey="DepartCode", OtherKey="Code", IsForeignKey=true)]
		public Depart Depart
		{
			get
			{
				return this._Depart.Entity;
			}
			set
			{
				Depart previousValue = this._Depart.Entity;
				if (((previousValue != value) 
							|| (this._Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Depart.Entity = null;
						previousValue.Marjors.Remove(this);
					}
					this._Depart.Entity = value;
					if ((value != null))
					{
						value.Marjors.Add(this);
						this._DepartCode = value.Code;
					}
					else
					{
						this._DepartCode = default(string);
					}
					this.SendPropertyChanged("Depart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Marjor = this;
		}
		
		private void detach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Marjor = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Marjor = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Marjor = null;
		}
		
		private void attach_TeacherRelativeCourses(TeacherRelativeCourse entity)
		{
			this.SendPropertyChanging();
			entity.Marjor = this;
		}
		
		private void detach_TeacherRelativeCourses(TeacherRelativeCourse entity)
		{
			this.SendPropertyChanging();
			entity.Marjor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MessageBox")]
	public partial class MessageBox : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Subject;
		
		private string _Content;
		
		private System.DateTime _CreateTime;
		
		private int _ReceiverType;
		
		private string _ReceiverKey;
		
		private int _SenderType;
		
		private string _SenderKey;
		
		private System.Nullable<int> _ReferenceID;
		
		private bool _IsReaded;
		
		private System.Nullable<int> _TopRefID;
		
		private EntitySet<MessageBox> _MessageBoxes;
		
		private EntitySet<MessageBox> _MessageBoxes1;
		
		private EntityRef<MessageBox> _MessageBox1;
		
		private EntityRef<MessageBox> _MessageBox2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnReceiverTypeChanging(int value);
    partial void OnReceiverTypeChanged();
    partial void OnReceiverKeyChanging(string value);
    partial void OnReceiverKeyChanged();
    partial void OnSenderTypeChanging(int value);
    partial void OnSenderTypeChanged();
    partial void OnSenderKeyChanging(string value);
    partial void OnSenderKeyChanged();
    partial void OnReferenceIDChanging(System.Nullable<int> value);
    partial void OnReferenceIDChanged();
    partial void OnIsReadedChanging(bool value);
    partial void OnIsReadedChanged();
    partial void OnTopRefIDChanging(System.Nullable<int> value);
    partial void OnTopRefIDChanged();
    #endregion
		
		public MessageBox()
		{
			this._MessageBoxes = new EntitySet<MessageBox>(new Action<MessageBox>(this.attach_MessageBoxes), new Action<MessageBox>(this.detach_MessageBoxes));
			this._MessageBoxes1 = new EntitySet<MessageBox>(new Action<MessageBox>(this.attach_MessageBoxes1), new Action<MessageBox>(this.detach_MessageBoxes1));
			this._MessageBox1 = default(EntityRef<MessageBox>);
			this._MessageBox2 = default(EntityRef<MessageBox>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverType", DbType="Int NOT NULL")]
		public int ReceiverType
		{
			get
			{
				return this._ReceiverType;
			}
			set
			{
				if ((this._ReceiverType != value))
				{
					this.OnReceiverTypeChanging(value);
					this.SendPropertyChanging();
					this._ReceiverType = value;
					this.SendPropertyChanged("ReceiverType");
					this.OnReceiverTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverKey", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceiverKey
		{
			get
			{
				return this._ReceiverKey;
			}
			set
			{
				if ((this._ReceiverKey != value))
				{
					this.OnReceiverKeyChanging(value);
					this.SendPropertyChanging();
					this._ReceiverKey = value;
					this.SendPropertyChanged("ReceiverKey");
					this.OnReceiverKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderType", DbType="Int NOT NULL")]
		public int SenderType
		{
			get
			{
				return this._SenderType;
			}
			set
			{
				if ((this._SenderType != value))
				{
					this.OnSenderTypeChanging(value);
					this.SendPropertyChanging();
					this._SenderType = value;
					this.SendPropertyChanged("SenderType");
					this.OnSenderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderKey", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SenderKey
		{
			get
			{
				return this._SenderKey;
			}
			set
			{
				if ((this._SenderKey != value))
				{
					this.OnSenderKeyChanging(value);
					this.SendPropertyChanging();
					this._SenderKey = value;
					this.SendPropertyChanged("SenderKey");
					this.OnSenderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceID", DbType="Int")]
		public System.Nullable<int> ReferenceID
		{
			get
			{
				return this._ReferenceID;
			}
			set
			{
				if ((this._ReferenceID != value))
				{
					if (this._MessageBox1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceID = value;
					this.SendPropertyChanged("ReferenceID");
					this.OnReferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReaded", DbType="Bit NOT NULL")]
		public bool IsReaded
		{
			get
			{
				return this._IsReaded;
			}
			set
			{
				if ((this._IsReaded != value))
				{
					this.OnIsReadedChanging(value);
					this.SendPropertyChanging();
					this._IsReaded = value;
					this.SendPropertyChanged("IsReaded");
					this.OnIsReadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopRefID", DbType="Int")]
		public System.Nullable<int> TopRefID
		{
			get
			{
				return this._TopRefID;
			}
			set
			{
				if ((this._TopRefID != value))
				{
					if (this._MessageBox2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTopRefIDChanging(value);
					this.SendPropertyChanging();
					this._TopRefID = value;
					this.SendPropertyChanged("TopRefID");
					this.OnTopRefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBox_MessageBox", Storage="_MessageBoxes", ThisKey="ID", OtherKey="ReferenceID")]
		public EntitySet<MessageBox> MessageBoxes
		{
			get
			{
				return this._MessageBoxes;
			}
			set
			{
				this._MessageBoxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBox_MessageBox1", Storage="_MessageBoxes1", ThisKey="ID", OtherKey="TopRefID")]
		public EntitySet<MessageBox> MessageBoxes1
		{
			get
			{
				return this._MessageBoxes1;
			}
			set
			{
				this._MessageBoxes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBox_MessageBox", Storage="_MessageBox1", ThisKey="ReferenceID", OtherKey="ID", IsForeignKey=true)]
		public MessageBox MessageBox1
		{
			get
			{
				return this._MessageBox1.Entity;
			}
			set
			{
				MessageBox previousValue = this._MessageBox1.Entity;
				if (((previousValue != value) 
							|| (this._MessageBox1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MessageBox1.Entity = null;
						previousValue.MessageBoxes.Remove(this);
					}
					this._MessageBox1.Entity = value;
					if ((value != null))
					{
						value.MessageBoxes.Add(this);
						this._ReferenceID = value.ID;
					}
					else
					{
						this._ReferenceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MessageBox1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageBox_MessageBox1", Storage="_MessageBox2", ThisKey="TopRefID", OtherKey="ID", IsForeignKey=true)]
		public MessageBox MessageBox2
		{
			get
			{
				return this._MessageBox2.Entity;
			}
			set
			{
				MessageBox previousValue = this._MessageBox2.Entity;
				if (((previousValue != value) 
							|| (this._MessageBox2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MessageBox2.Entity = null;
						previousValue.MessageBoxes1.Remove(this);
					}
					this._MessageBox2.Entity = value;
					if ((value != null))
					{
						value.MessageBoxes1.Add(this);
						this._TopRefID = value.ID;
					}
					else
					{
						this._TopRefID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MessageBox2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MessageBoxes(MessageBox entity)
		{
			this.SendPropertyChanging();
			entity.MessageBox1 = this;
		}
		
		private void detach_MessageBoxes(MessageBox entity)
		{
			this.SendPropertyChanging();
			entity.MessageBox1 = null;
		}
		
		private void attach_MessageBoxes1(MessageBox entity)
		{
			this.SendPropertyChanging();
			entity.MessageBox2 = this;
		}
		
		private void detach_MessageBoxes1(MessageBox entity)
		{
			this.SendPropertyChanging();
			entity.MessageBox2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PublishActivity")]
	public partial class PublishActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Content;
		
		private string _Address;
		
		private System.DateTime _BeginTime;
		
		private System.DateTime _EndTime;
		
		private bool _IsOnline;
		
		private string _Publisher;
		
		private int _PublisherType;
		
		private string _ActivityType;
		
		private System.DateTime _CreateTime;
		
		private bool _IsDelete;
		
		private EntitySet<PublishActivityAttachment> _PublishActivityAttachments;
		
		private EntitySet<StudentActivity> _StudentActivities;
		
		private EntityRef<ActivityType> _ActivityType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnBeginTimeChanging(System.DateTime value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnPublisherTypeChanging(int value);
    partial void OnPublisherTypeChanged();
    partial void OnActivityTypeChanging(string value);
    partial void OnActivityTypeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public PublishActivity()
		{
			this._PublishActivityAttachments = new EntitySet<PublishActivityAttachment>(new Action<PublishActivityAttachment>(this.attach_PublishActivityAttachments), new Action<PublishActivityAttachment>(this.detach_PublishActivityAttachments));
			this._StudentActivities = new EntitySet<StudentActivity>(new Action<StudentActivity>(this.attach_StudentActivities), new Action<StudentActivity>(this.detach_StudentActivities));
			this._ActivityType1 = default(EntityRef<ActivityType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="DateTime NOT NULL")]
		public System.DateTime BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Publisher
		{
			get
			{
				return this._Publisher;
			}
			set
			{
				if ((this._Publisher != value))
				{
					this.OnPublisherChanging(value);
					this.SendPropertyChanging();
					this._Publisher = value;
					this.SendPropertyChanged("Publisher");
					this.OnPublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublisherType", DbType="Int NOT NULL")]
		public int PublisherType
		{
			get
			{
				return this._PublisherType;
			}
			set
			{
				if ((this._PublisherType != value))
				{
					this.OnPublisherTypeChanging(value);
					this.SendPropertyChanging();
					this._PublisherType = value;
					this.SendPropertyChanged("PublisherType");
					this.OnPublisherTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityType", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string ActivityType
		{
			get
			{
				return this._ActivityType;
			}
			set
			{
				if ((this._ActivityType != value))
				{
					if (this._ActivityType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityTypeChanging(value);
					this.SendPropertyChanging();
					this._ActivityType = value;
					this.SendPropertyChanged("ActivityType");
					this.OnActivityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PublishActivity_PublishActivityAttachment", Storage="_PublishActivityAttachments", ThisKey="ID", OtherKey="PublishActivityID")]
		public EntitySet<PublishActivityAttachment> PublishActivityAttachments
		{
			get
			{
				return this._PublishActivityAttachments;
			}
			set
			{
				this._PublishActivityAttachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PublishActivity_StudentActivity", Storage="_StudentActivities", ThisKey="ID", OtherKey="ReferenceID")]
		public EntitySet<StudentActivity> StudentActivities
		{
			get
			{
				return this._StudentActivities;
			}
			set
			{
				this._StudentActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityType_PublishActivity", Storage="_ActivityType1", ThisKey="ActivityType", OtherKey="Code", IsForeignKey=true)]
		public ActivityType ActivityType1
		{
			get
			{
				return this._ActivityType1.Entity;
			}
			set
			{
				ActivityType previousValue = this._ActivityType1.Entity;
				if (((previousValue != value) 
							|| (this._ActivityType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityType1.Entity = null;
						previousValue.PublishActivities.Remove(this);
					}
					this._ActivityType1.Entity = value;
					if ((value != null))
					{
						value.PublishActivities.Add(this);
						this._ActivityType = value.Code;
					}
					else
					{
						this._ActivityType = default(string);
					}
					this.SendPropertyChanged("ActivityType1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PublishActivityAttachments(PublishActivityAttachment entity)
		{
			this.SendPropertyChanging();
			entity.PublishActivity = this;
		}
		
		private void detach_PublishActivityAttachments(PublishActivityAttachment entity)
		{
			this.SendPropertyChanging();
			entity.PublishActivity = null;
		}
		
		private void attach_StudentActivities(StudentActivity entity)
		{
			this.SendPropertyChanging();
			entity.PublishActivity = this;
		}
		
		private void detach_StudentActivities(StudentActivity entity)
		{
			this.SendPropertyChanging();
			entity.PublishActivity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PublishActivityAttachment")]
	public partial class PublishActivityAttachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Path;
		
		private int _DocumentType;
		
		private int _PublishActivityID;
		
		private int _DisplayOrder;
		
		private bool _IsMain;
		
		private System.DateTime _CreateTime;
		
		private string _Description;
		
		private string _ThumbPath;
		
		private EntityRef<PublishActivity> _PublishActivity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnDocumentTypeChanging(int value);
    partial void OnDocumentTypeChanged();
    partial void OnPublishActivityIDChanging(int value);
    partial void OnPublishActivityIDChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnIsMainChanging(bool value);
    partial void OnIsMainChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnThumbPathChanging(string value);
    partial void OnThumbPathChanged();
    #endregion
		
		public PublishActivityAttachment()
		{
			this._PublishActivity = default(EntityRef<PublishActivity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="Int NOT NULL")]
		public int DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishActivityID", DbType="Int NOT NULL")]
		public int PublishActivityID
		{
			get
			{
				return this._PublishActivityID;
			}
			set
			{
				if ((this._PublishActivityID != value))
				{
					if (this._PublishActivity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPublishActivityIDChanging(value);
					this.SendPropertyChanging();
					this._PublishActivityID = value;
					this.SendPropertyChanged("PublishActivityID");
					this.OnPublishActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit NOT NULL")]
		public bool IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this.OnIsMainChanging(value);
					this.SendPropertyChanging();
					this._IsMain = value;
					this.SendPropertyChanged("IsMain");
					this.OnIsMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbPath", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ThumbPath
		{
			get
			{
				return this._ThumbPath;
			}
			set
			{
				if ((this._ThumbPath != value))
				{
					this.OnThumbPathChanging(value);
					this.SendPropertyChanging();
					this._ThumbPath = value;
					this.SendPropertyChanged("ThumbPath");
					this.OnThumbPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PublishActivity_PublishActivityAttachment", Storage="_PublishActivity", ThisKey="PublishActivityID", OtherKey="ID", IsForeignKey=true)]
		public PublishActivity PublishActivity
		{
			get
			{
				return this._PublishActivity.Entity;
			}
			set
			{
				PublishActivity previousValue = this._PublishActivity.Entity;
				if (((previousValue != value) 
							|| (this._PublishActivity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PublishActivity.Entity = null;
						previousValue.PublishActivityAttachments.Remove(this);
					}
					this._PublishActivity.Entity = value;
					if ((value != null))
					{
						value.PublishActivityAttachments.Add(this);
						this._PublishActivityID = value.ID;
					}
					else
					{
						this._PublishActivityID = default(int);
					}
					this.SendPropertyChanged("PublishActivity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecruitFlowSetted")]
	public partial class RecruitFlowSetted : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _DisplayOrder;
		
		private int _RecruitType;
		
		private System.DateTime _CreateTime;
		
		private EntitySet<JobRequestRecruitStage> _JobRequestRecruitStages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnRecruitTypeChanging(int value);
    partial void OnRecruitTypeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public RecruitFlowSetted()
		{
			this._JobRequestRecruitStages = new EntitySet<JobRequestRecruitStage>(new Action<JobRequestRecruitStage>(this.attach_JobRequestRecruitStages), new Action<JobRequestRecruitStage>(this.detach_JobRequestRecruitStages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecruitType", DbType="Int NOT NULL")]
		public int RecruitType
		{
			get
			{
				return this._RecruitType;
			}
			set
			{
				if ((this._RecruitType != value))
				{
					this.OnRecruitTypeChanging(value);
					this.SendPropertyChanging();
					this._RecruitType = value;
					this.SendPropertyChanged("RecruitType");
					this.OnRecruitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecruitFlowSetted_JobRequestRecruitStage", Storage="_JobRequestRecruitStages", ThisKey="ID", OtherKey="RecruitFlowID")]
		public EntitySet<JobRequestRecruitStage> JobRequestRecruitStages
		{
			get
			{
				return this._JobRequestRecruitStages;
			}
			set
			{
				this._JobRequestRecruitStages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobRequestRecruitStages(JobRequestRecruitStage entity)
		{
			this.SendPropertyChanging();
			entity.RecruitFlowSetted = this;
		}
		
		private void detach_JobRequestRecruitStages(JobRequestRecruitStage entity)
		{
			this.SendPropertyChanging();
			entity.RecruitFlowSetted = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecruitJobRequester")]
	public partial class RecruitJobRequester
	{
		
		private int _RequestID;
		
		private int _RecruitID;
		
		private System.DateTime _CreateTime;
		
		public RecruitJobRequester()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecruitID", DbType="Int NOT NULL")]
		public int RecruitID
		{
			get
			{
				return this._RecruitID;
			}
			set
			{
				if ((this._RecruitID != value))
				{
					this._RecruitID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this._CreateTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RewriteRule")]
	public partial class RewriteRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LookFor;
		
		private string _SendTo;
		
		private bool _IsOnline;
		
		private int _Priority;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLookForChanging(string value);
    partial void OnLookForChanged();
    partial void OnSendToChanging(string value);
    partial void OnSendToChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    #endregion
		
		public RewriteRule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LookFor", DbType="NVarChar(500)")]
		public string LookFor
		{
			get
			{
				return this._LookFor;
			}
			set
			{
				if ((this._LookFor != value))
				{
					this.OnLookForChanging(value);
					this.SendPropertyChanging();
					this._LookFor = value;
					this.SendPropertyChanged("LookFor");
					this.OnLookForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendTo", DbType="NVarChar(500)")]
		public string SendTo
		{
			get
			{
				return this._SendTo;
			}
			set
			{
				if ((this._SendTo != value))
				{
					this.OnSendToChanging(value);
					this.SendPropertyChanging();
					this._SendTo = value;
					this.SendPropertyChanged("SendTo");
					this.OnSendToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StudentNum;
		
		private string _NameZh;
		
		private string _NameEn;
		
		private int _Sex;
		
		private string _IDentityNum;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _Email;
		
		private string _Telephone;
		
		private string _WebSite;
		
		private int _Politics;
		
		private string _Tall;
		
		private System.Nullable<decimal> _Weight;
		
		private string _Class;
		
		private string _Period;
		
		private bool _IsMarried;
		
		private bool _IsOnline;
		
		private bool _IsDelete;
		
		private string _Address;
		
		private string _Photo;
		
		private string _NativePlace;
		
		private string _Description;
		
		private string _Interested;
		
		private string _Activity;
		
		private string _Movie;
		
		private string _Book;
		
		private string _Program;
		
		private string _Password;
		
		private string _DepartCode;
		
		private string _MarjorCode;
		
		private string _Music;
		
		private string _AboutMe;
		
		private string _ThumbPath;
		
		private EntitySet<EnterpriseJobRequester> _EnterpriseJobRequesters;
		
		private EntitySet<EnterpriseJobRequestQueue> _EnterpriseJobRequestQueues;
		
		private EntitySet<StudentActivity> _StudentActivities;
		
		private EntitySet<StudentCourse> _StudentCourses;
		
		private EntitySet<StudentDailyEssay> _StudentDailyEssays;
		
		private EntitySet<StudentDictory> _StudentDictories;
		
		private EntitySet<StudentFamilyAccount> _StudentFamilyAccounts;
		
		private EntityRef<StudentJobExpect> _StudentJobExpect;
		
		private EntitySet<StudentProfessional> _StudentProfessionals;
		
		private EntitySet<StudentProject> _StudentProjects;
		
		private EntitySet<StudentScore> _StudentScores;
		
		private EntitySet<StudentVisited> _StudentVisiteds;
		
		private EntityRef<Depart> _Depart;
		
		private EntityRef<Marjor> _Marjor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStudentNumChanging(string value);
    partial void OnStudentNumChanged();
    partial void OnNameZhChanging(string value);
    partial void OnNameZhChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnSexChanging(int value);
    partial void OnSexChanged();
    partial void OnIDentityNumChanging(string value);
    partial void OnIDentityNumChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnWebSiteChanging(string value);
    partial void OnWebSiteChanged();
    partial void OnPoliticsChanging(int value);
    partial void OnPoliticsChanged();
    partial void OnTallChanging(string value);
    partial void OnTallChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    partial void OnIsMarriedChanging(bool value);
    partial void OnIsMarriedChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnNativePlaceChanging(string value);
    partial void OnNativePlaceChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnInterestedChanging(string value);
    partial void OnInterestedChanged();
    partial void OnActivityChanging(string value);
    partial void OnActivityChanged();
    partial void OnMovieChanging(string value);
    partial void OnMovieChanged();
    partial void OnBookChanging(string value);
    partial void OnBookChanged();
    partial void OnProgramChanging(string value);
    partial void OnProgramChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDepartCodeChanging(string value);
    partial void OnDepartCodeChanged();
    partial void OnMarjorCodeChanging(string value);
    partial void OnMarjorCodeChanged();
    partial void OnMusicChanging(string value);
    partial void OnMusicChanged();
    partial void OnAboutMeChanging(string value);
    partial void OnAboutMeChanged();
    partial void OnThumbPathChanging(string value);
    partial void OnThumbPathChanged();
    #endregion
		
		public Student()
		{
			this._EnterpriseJobRequesters = new EntitySet<EnterpriseJobRequester>(new Action<EnterpriseJobRequester>(this.attach_EnterpriseJobRequesters), new Action<EnterpriseJobRequester>(this.detach_EnterpriseJobRequesters));
			this._EnterpriseJobRequestQueues = new EntitySet<EnterpriseJobRequestQueue>(new Action<EnterpriseJobRequestQueue>(this.attach_EnterpriseJobRequestQueues), new Action<EnterpriseJobRequestQueue>(this.detach_EnterpriseJobRequestQueues));
			this._StudentActivities = new EntitySet<StudentActivity>(new Action<StudentActivity>(this.attach_StudentActivities), new Action<StudentActivity>(this.detach_StudentActivities));
			this._StudentCourses = new EntitySet<StudentCourse>(new Action<StudentCourse>(this.attach_StudentCourses), new Action<StudentCourse>(this.detach_StudentCourses));
			this._StudentDailyEssays = new EntitySet<StudentDailyEssay>(new Action<StudentDailyEssay>(this.attach_StudentDailyEssays), new Action<StudentDailyEssay>(this.detach_StudentDailyEssays));
			this._StudentDictories = new EntitySet<StudentDictory>(new Action<StudentDictory>(this.attach_StudentDictories), new Action<StudentDictory>(this.detach_StudentDictories));
			this._StudentFamilyAccounts = new EntitySet<StudentFamilyAccount>(new Action<StudentFamilyAccount>(this.attach_StudentFamilyAccounts), new Action<StudentFamilyAccount>(this.detach_StudentFamilyAccounts));
			this._StudentJobExpect = default(EntityRef<StudentJobExpect>);
			this._StudentProfessionals = new EntitySet<StudentProfessional>(new Action<StudentProfessional>(this.attach_StudentProfessionals), new Action<StudentProfessional>(this.detach_StudentProfessionals));
			this._StudentProjects = new EntitySet<StudentProject>(new Action<StudentProject>(this.attach_StudentProjects), new Action<StudentProject>(this.detach_StudentProjects));
			this._StudentScores = new EntitySet<StudentScore>(new Action<StudentScore>(this.attach_StudentScores), new Action<StudentScore>(this.detach_StudentScores));
			this._StudentVisiteds = new EntitySet<StudentVisited>(new Action<StudentVisited>(this.attach_StudentVisiteds), new Action<StudentVisited>(this.detach_StudentVisiteds));
			this._Depart = default(EntityRef<Depart>);
			this._Marjor = default(EntityRef<Marjor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					this.OnStudentNumChanging(value);
					this.SendPropertyChanging();
					this._StudentNum = value;
					this.SendPropertyChanged("StudentNum");
					this.OnStudentNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameZh", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string NameZh
		{
			get
			{
				return this._NameZh;
			}
			set
			{
				if ((this._NameZh != value))
				{
					this.OnNameZhChanging(value);
					this.SendPropertyChanging();
					this._NameZh = value;
					this.SendPropertyChanged("NameZh");
					this.OnNameZhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="VarChar(30)")]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Int NOT NULL")]
		public int Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDentityNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string IDentityNum
		{
			get
			{
				return this._IDentityNum;
			}
			set
			{
				if ((this._IDentityNum != value))
				{
					this.OnIDentityNumChanging(value);
					this.SendPropertyChanging();
					this._IDentityNum = value;
					this.SendPropertyChanged("IDentityNum");
					this.OnIDentityNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="NVarChar(200)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Politics", DbType="Int NOT NULL")]
		public int Politics
		{
			get
			{
				return this._Politics;
			}
			set
			{
				if ((this._Politics != value))
				{
					this.OnPoliticsChanging(value);
					this.SendPropertyChanging();
					this._Politics = value;
					this.SendPropertyChanged("Politics");
					this.OnPoliticsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tall", DbType="VarChar(10)")]
		public string Tall
		{
			get
			{
				return this._Tall;
			}
			set
			{
				if ((this._Tall != value))
				{
					this.OnTallChanging(value);
					this.SendPropertyChanging();
					this._Tall = value;
					this.SendPropertyChanged("Tall");
					this.OnTallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMarried", DbType="Bit NOT NULL")]
		public bool IsMarried
		{
			get
			{
				return this._IsMarried;
			}
			set
			{
				if ((this._IsMarried != value))
				{
					this.OnIsMarriedChanging(value);
					this.SendPropertyChanging();
					this._IsMarried = value;
					this.SendPropertyChanged("IsMarried");
					this.OnIsMarriedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(200)")]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NativePlace", DbType="NVarChar(100)")]
		public string NativePlace
		{
			get
			{
				return this._NativePlace;
			}
			set
			{
				if ((this._NativePlace != value))
				{
					this.OnNativePlaceChanging(value);
					this.SendPropertyChanging();
					this._NativePlace = value;
					this.SendPropertyChanged("NativePlace");
					this.OnNativePlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interested", DbType="NVarChar(500)")]
		public string Interested
		{
			get
			{
				return this._Interested;
			}
			set
			{
				if ((this._Interested != value))
				{
					this.OnInterestedChanging(value);
					this.SendPropertyChanging();
					this._Interested = value;
					this.SendPropertyChanged("Interested");
					this.OnInterestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="NVarChar(500)")]
		public string Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this.OnActivityChanging(value);
					this.SendPropertyChanging();
					this._Activity = value;
					this.SendPropertyChanged("Activity");
					this.OnActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Movie", DbType="NVarChar(500)")]
		public string Movie
		{
			get
			{
				return this._Movie;
			}
			set
			{
				if ((this._Movie != value))
				{
					this.OnMovieChanging(value);
					this.SendPropertyChanging();
					this._Movie = value;
					this.SendPropertyChanged("Movie");
					this.OnMovieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book", DbType="NVarChar(500)")]
		public string Book
		{
			get
			{
				return this._Book;
			}
			set
			{
				if ((this._Book != value))
				{
					this.OnBookChanging(value);
					this.SendPropertyChanging();
					this._Book = value;
					this.SendPropertyChanged("Book");
					this.OnBookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Program", DbType="NVarChar(500)")]
		public string Program
		{
			get
			{
				return this._Program;
			}
			set
			{
				if ((this._Program != value))
				{
					this.OnProgramChanging(value);
					this.SendPropertyChanging();
					this._Program = value;
					this.SendPropertyChanged("Program");
					this.OnProgramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string DepartCode
		{
			get
			{
				return this._DepartCode;
			}
			set
			{
				if ((this._DepartCode != value))
				{
					if (this._Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartCode = value;
					this.SendPropertyChanged("DepartCode");
					this.OnDepartCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarjorCode", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string MarjorCode
		{
			get
			{
				return this._MarjorCode;
			}
			set
			{
				if ((this._MarjorCode != value))
				{
					if (this._Marjor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarjorCodeChanging(value);
					this.SendPropertyChanging();
					this._MarjorCode = value;
					this.SendPropertyChanged("MarjorCode");
					this.OnMarjorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Music", DbType="NVarChar(500)")]
		public string Music
		{
			get
			{
				return this._Music;
			}
			set
			{
				if ((this._Music != value))
				{
					this.OnMusicChanging(value);
					this.SendPropertyChanging();
					this._Music = value;
					this.SendPropertyChanged("Music");
					this.OnMusicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutMe", DbType="NVarChar(500)")]
		public string AboutMe
		{
			get
			{
				return this._AboutMe;
			}
			set
			{
				if ((this._AboutMe != value))
				{
					this.OnAboutMeChanging(value);
					this.SendPropertyChanging();
					this._AboutMe = value;
					this.SendPropertyChanged("AboutMe");
					this.OnAboutMeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbPath", DbType="NVarChar(100)")]
		public string ThumbPath
		{
			get
			{
				return this._ThumbPath;
			}
			set
			{
				if ((this._ThumbPath != value))
				{
					this.OnThumbPathChanging(value);
					this.SendPropertyChanging();
					this._ThumbPath = value;
					this.SendPropertyChanged("ThumbPath");
					this.OnThumbPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_EnterpriseJobRequester", Storage="_EnterpriseJobRequesters", ThisKey="StudentNum", OtherKey="StudentNum")]
		public EntitySet<EnterpriseJobRequester> EnterpriseJobRequesters
		{
			get
			{
				return this._EnterpriseJobRequesters;
			}
			set
			{
				this._EnterpriseJobRequesters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_EnterpriseJobRequestQueue", Storage="_EnterpriseJobRequestQueues", ThisKey="StudentNum", OtherKey="StudentNum")]
		public EntitySet<EnterpriseJobRequestQueue> EnterpriseJobRequestQueues
		{
			get
			{
				return this._EnterpriseJobRequestQueues;
			}
			set
			{
				this._EnterpriseJobRequestQueues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentActivity", Storage="_StudentActivities", ThisKey="StudentNum", OtherKey="StudentNum")]
		public EntitySet<StudentActivity> StudentActivities
		{
			get
			{
				return this._StudentActivities;
			}
			set
			{
				this._StudentActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentCourse", Storage="_StudentCourses", ThisKey="StudentNum", OtherKey="StudentNum")]
		public EntitySet<StudentCourse> StudentCourses
		{
			get
			{
				return this._StudentCourses;
			}
			set
			{
				this._StudentCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentDailyEssay", Storage="_StudentDailyEssays", ThisKey="StudentNum", OtherKey="StudentNum")]
		public EntitySet<StudentDailyEssay> StudentDailyEssays
		{
			get
			{
				return this._StudentDailyEssays;
			}
			set
			{
				this._StudentDailyEssays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentDictory", Storage="_StudentDictories", ThisKey="StudentNum", OtherKey="StudentNum")]
		public EntitySet<StudentDictory> StudentDictories
		{
			get
			{
				return this._StudentDictories;
			}
			set
			{
				this._StudentDictories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentFamilyAccount", Storage="_StudentFamilyAccounts", ThisKey="StudentNum", OtherKey="StudentNum")]
		public EntitySet<StudentFamilyAccount> StudentFamilyAccounts
		{
			get
			{
				return this._StudentFamilyAccounts;
			}
			set
			{
				this._StudentFamilyAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentJobExpect", Storage="_StudentJobExpect", ThisKey="StudentNum", OtherKey="StudentNum", IsUnique=true, IsForeignKey=false)]
		public StudentJobExpect StudentJobExpect
		{
			get
			{
				return this._StudentJobExpect.Entity;
			}
			set
			{
				StudentJobExpect previousValue = this._StudentJobExpect.Entity;
				if (((previousValue != value) 
							|| (this._StudentJobExpect.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentJobExpect.Entity = null;
						previousValue.Student = null;
					}
					this._StudentJobExpect.Entity = value;
					if ((value != null))
					{
						value.Student = this;
					}
					this.SendPropertyChanged("StudentJobExpect");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentProfessional", Storage="_StudentProfessionals", ThisKey="StudentNum", OtherKey="StudentNum")]
		public EntitySet<StudentProfessional> StudentProfessionals
		{
			get
			{
				return this._StudentProfessionals;
			}
			set
			{
				this._StudentProfessionals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentProject", Storage="_StudentProjects", ThisKey="StudentNum", OtherKey="StudentNum")]
		public EntitySet<StudentProject> StudentProjects
		{
			get
			{
				return this._StudentProjects;
			}
			set
			{
				this._StudentProjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentScore", Storage="_StudentScores", ThisKey="StudentNum", OtherKey="StudentNum")]
		public EntitySet<StudentScore> StudentScores
		{
			get
			{
				return this._StudentScores;
			}
			set
			{
				this._StudentScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentVisited", Storage="_StudentVisiteds", ThisKey="StudentNum", OtherKey="StudentNum")]
		public EntitySet<StudentVisited> StudentVisiteds
		{
			get
			{
				return this._StudentVisiteds;
			}
			set
			{
				this._StudentVisiteds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depart_Student", Storage="_Depart", ThisKey="DepartCode", OtherKey="Code", IsForeignKey=true)]
		public Depart Depart
		{
			get
			{
				return this._Depart.Entity;
			}
			set
			{
				Depart previousValue = this._Depart.Entity;
				if (((previousValue != value) 
							|| (this._Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Depart.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Depart.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._DepartCode = value.Code;
					}
					else
					{
						this._DepartCode = default(string);
					}
					this.SendPropertyChanged("Depart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marjor_Student", Storage="_Marjor", ThisKey="MarjorCode", OtherKey="Code", IsForeignKey=true)]
		public Marjor Marjor
		{
			get
			{
				return this._Marjor.Entity;
			}
			set
			{
				Marjor previousValue = this._Marjor.Entity;
				if (((previousValue != value) 
							|| (this._Marjor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marjor.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Marjor.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._MarjorCode = value.Code;
					}
					else
					{
						this._MarjorCode = default(string);
					}
					this.SendPropertyChanged("Marjor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EnterpriseJobRequesters(EnterpriseJobRequester entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_EnterpriseJobRequesters(EnterpriseJobRequester entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_EnterpriseJobRequestQueues(EnterpriseJobRequestQueue entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_EnterpriseJobRequestQueues(EnterpriseJobRequestQueue entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_StudentActivities(StudentActivity entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentActivities(StudentActivity entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_StudentCourses(StudentCourse entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentCourses(StudentCourse entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_StudentDailyEssays(StudentDailyEssay entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentDailyEssays(StudentDailyEssay entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_StudentDictories(StudentDictory entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentDictories(StudentDictory entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_StudentFamilyAccounts(StudentFamilyAccount entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentFamilyAccounts(StudentFamilyAccount entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_StudentProfessionals(StudentProfessional entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentProfessionals(StudentProfessional entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_StudentProjects(StudentProject entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentProjects(StudentProject entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentScores(StudentScore entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_StudentVisiteds(StudentVisited entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentVisiteds(StudentVisited entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentAccessLog")]
	public partial class StudentAccessLog
	{
		
		private string _StudentNum;
		
		private string _IPAddress;
		
		private System.DateTime _CreateTime;
		
		public StudentAccessLog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					this._StudentNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this._IPAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this._CreateTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentActivity")]
	public partial class StudentActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Content;
		
		private string _Address;
		
		private int _VerfyStatus;
		
		private System.DateTime _BeginTime;
		
		private System.DateTime _EndTime;
		
		private System.DateTime _CreateTime;
		
		private bool _IsOnline;
		
		private string _StudentNum;
		
		private string _TeacherNum;
		
		private string _EvaluateFromTeacher;
		
		private string _VerifyStatusReason;
		
		private string _ActivityType;
		
		private System.Nullable<int> _ReferenceID;
		
		private EntitySet<StudentActivityAttachment> _StudentActivityAttachments;
		
		private EntitySet<StudentActivityComment> _StudentActivityComments;
		
		private EntityRef<ActivityType> _ActivityType1;
		
		private EntityRef<PublishActivity> _PublishActivity;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnVerfyStatusChanging(int value);
    partial void OnVerfyStatusChanged();
    partial void OnBeginTimeChanging(System.DateTime value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnStudentNumChanging(string value);
    partial void OnStudentNumChanged();
    partial void OnTeacherNumChanging(string value);
    partial void OnTeacherNumChanged();
    partial void OnEvaluateFromTeacherChanging(string value);
    partial void OnEvaluateFromTeacherChanged();
    partial void OnVerifyStatusReasonChanging(string value);
    partial void OnVerifyStatusReasonChanged();
    partial void OnActivityTypeChanging(string value);
    partial void OnActivityTypeChanged();
    partial void OnReferenceIDChanging(System.Nullable<int> value);
    partial void OnReferenceIDChanged();
    #endregion
		
		public StudentActivity()
		{
			this._StudentActivityAttachments = new EntitySet<StudentActivityAttachment>(new Action<StudentActivityAttachment>(this.attach_StudentActivityAttachments), new Action<StudentActivityAttachment>(this.detach_StudentActivityAttachments));
			this._StudentActivityComments = new EntitySet<StudentActivityComment>(new Action<StudentActivityComment>(this.attach_StudentActivityComments), new Action<StudentActivityComment>(this.detach_StudentActivityComments));
			this._ActivityType1 = default(EntityRef<ActivityType>);
			this._PublishActivity = default(EntityRef<PublishActivity>);
			this._Student = default(EntityRef<Student>);
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerfyStatus", DbType="Int NOT NULL")]
		public int VerfyStatus
		{
			get
			{
				return this._VerfyStatus;
			}
			set
			{
				if ((this._VerfyStatus != value))
				{
					this.OnVerfyStatusChanging(value);
					this.SendPropertyChanging();
					this._VerfyStatus = value;
					this.SendPropertyChanged("VerfyStatus");
					this.OnVerfyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="DateTime NOT NULL")]
		public System.DateTime BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentNumChanging(value);
					this.SendPropertyChanging();
					this._StudentNum = value;
					this.SendPropertyChanged("StudentNum");
					this.OnStudentNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherNum", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TeacherNum
		{
			get
			{
				return this._TeacherNum;
			}
			set
			{
				if ((this._TeacherNum != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherNumChanging(value);
					this.SendPropertyChanging();
					this._TeacherNum = value;
					this.SendPropertyChanged("TeacherNum");
					this.OnTeacherNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluateFromTeacher", DbType="NVarChar(500)")]
		public string EvaluateFromTeacher
		{
			get
			{
				return this._EvaluateFromTeacher;
			}
			set
			{
				if ((this._EvaluateFromTeacher != value))
				{
					this.OnEvaluateFromTeacherChanging(value);
					this.SendPropertyChanging();
					this._EvaluateFromTeacher = value;
					this.SendPropertyChanged("EvaluateFromTeacher");
					this.OnEvaluateFromTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyStatusReason", DbType="NVarChar(500)")]
		public string VerifyStatusReason
		{
			get
			{
				return this._VerifyStatusReason;
			}
			set
			{
				if ((this._VerifyStatusReason != value))
				{
					this.OnVerifyStatusReasonChanging(value);
					this.SendPropertyChanging();
					this._VerifyStatusReason = value;
					this.SendPropertyChanged("VerifyStatusReason");
					this.OnVerifyStatusReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityType", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string ActivityType
		{
			get
			{
				return this._ActivityType;
			}
			set
			{
				if ((this._ActivityType != value))
				{
					if (this._ActivityType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityTypeChanging(value);
					this.SendPropertyChanging();
					this._ActivityType = value;
					this.SendPropertyChanged("ActivityType");
					this.OnActivityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceID", DbType="Int")]
		public System.Nullable<int> ReferenceID
		{
			get
			{
				return this._ReferenceID;
			}
			set
			{
				if ((this._ReferenceID != value))
				{
					if (this._PublishActivity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceID = value;
					this.SendPropertyChanged("ReferenceID");
					this.OnReferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentActivity_StudentActivityAttachment", Storage="_StudentActivityAttachments", ThisKey="ID", OtherKey="ActivityID")]
		public EntitySet<StudentActivityAttachment> StudentActivityAttachments
		{
			get
			{
				return this._StudentActivityAttachments;
			}
			set
			{
				this._StudentActivityAttachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentActivity_StudentActivityComment", Storage="_StudentActivityComments", ThisKey="ID", OtherKey="ActivityID")]
		public EntitySet<StudentActivityComment> StudentActivityComments
		{
			get
			{
				return this._StudentActivityComments;
			}
			set
			{
				this._StudentActivityComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityType_StudentActivity", Storage="_ActivityType1", ThisKey="ActivityType", OtherKey="Code", IsForeignKey=true)]
		public ActivityType ActivityType1
		{
			get
			{
				return this._ActivityType1.Entity;
			}
			set
			{
				ActivityType previousValue = this._ActivityType1.Entity;
				if (((previousValue != value) 
							|| (this._ActivityType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityType1.Entity = null;
						previousValue.StudentActivities.Remove(this);
					}
					this._ActivityType1.Entity = value;
					if ((value != null))
					{
						value.StudentActivities.Add(this);
						this._ActivityType = value.Code;
					}
					else
					{
						this._ActivityType = default(string);
					}
					this.SendPropertyChanged("ActivityType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PublishActivity_StudentActivity", Storage="_PublishActivity", ThisKey="ReferenceID", OtherKey="ID", IsForeignKey=true)]
		public PublishActivity PublishActivity
		{
			get
			{
				return this._PublishActivity.Entity;
			}
			set
			{
				PublishActivity previousValue = this._PublishActivity.Entity;
				if (((previousValue != value) 
							|| (this._PublishActivity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PublishActivity.Entity = null;
						previousValue.StudentActivities.Remove(this);
					}
					this._PublishActivity.Entity = value;
					if ((value != null))
					{
						value.StudentActivities.Add(this);
						this._ReferenceID = value.ID;
					}
					else
					{
						this._ReferenceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PublishActivity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentActivity", Storage="_Student", ThisKey="StudentNum", OtherKey="StudentNum", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentActivities.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentActivities.Add(this);
						this._StudentNum = value.StudentNum;
					}
					else
					{
						this._StudentNum = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_StudentActivity", Storage="_Teacher", ThisKey="TeacherNum", OtherKey="TeacherNum", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.StudentActivities.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.StudentActivities.Add(this);
						this._TeacherNum = value.TeacherNum;
					}
					else
					{
						this._TeacherNum = default(string);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentActivityAttachments(StudentActivityAttachment entity)
		{
			this.SendPropertyChanging();
			entity.StudentActivity = this;
		}
		
		private void detach_StudentActivityAttachments(StudentActivityAttachment entity)
		{
			this.SendPropertyChanging();
			entity.StudentActivity = null;
		}
		
		private void attach_StudentActivityComments(StudentActivityComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentActivity = this;
		}
		
		private void detach_StudentActivityComments(StudentActivityComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentActivity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentActivityAttachment")]
	public partial class StudentActivityAttachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Path;
		
		private int _DocumentType;
		
		private int _ActivityID;
		
		private int _DisplayOrder;
		
		private bool _IsMain;
		
		private System.DateTime _CreateTime;
		
		private string _Description;
		
		private string _ThumbPath;
		
		private EntityRef<StudentActivity> _StudentActivity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnDocumentTypeChanging(int value);
    partial void OnDocumentTypeChanged();
    partial void OnActivityIDChanging(int value);
    partial void OnActivityIDChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnIsMainChanging(bool value);
    partial void OnIsMainChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnThumbPathChanging(string value);
    partial void OnThumbPathChanged();
    #endregion
		
		public StudentActivityAttachment()
		{
			this._StudentActivity = default(EntityRef<StudentActivity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="Int NOT NULL")]
		public int DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="Int NOT NULL")]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					if (this._StudentActivity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityID = value;
					this.SendPropertyChanged("ActivityID");
					this.OnActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit NOT NULL")]
		public bool IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this.OnIsMainChanging(value);
					this.SendPropertyChanging();
					this._IsMain = value;
					this.SendPropertyChanged("IsMain");
					this.OnIsMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbPath", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ThumbPath
		{
			get
			{
				return this._ThumbPath;
			}
			set
			{
				if ((this._ThumbPath != value))
				{
					this.OnThumbPathChanging(value);
					this.SendPropertyChanging();
					this._ThumbPath = value;
					this.SendPropertyChanged("ThumbPath");
					this.OnThumbPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentActivity_StudentActivityAttachment", Storage="_StudentActivity", ThisKey="ActivityID", OtherKey="ID", IsForeignKey=true)]
		public StudentActivity StudentActivity
		{
			get
			{
				return this._StudentActivity.Entity;
			}
			set
			{
				StudentActivity previousValue = this._StudentActivity.Entity;
				if (((previousValue != value) 
							|| (this._StudentActivity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentActivity.Entity = null;
						previousValue.StudentActivityAttachments.Remove(this);
					}
					this._StudentActivity.Entity = value;
					if ((value != null))
					{
						value.StudentActivityAttachments.Add(this);
						this._ActivityID = value.ID;
					}
					else
					{
						this._ActivityID = default(int);
					}
					this.SendPropertyChanged("StudentActivity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentActivityComment")]
	public partial class StudentActivityComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ActivityID;
		
		private string _UserName;
		
		private int _UserType;
		
		private string _Comment;
		
		private System.DateTime _CreateTime;
		
		private System.Nullable<int> _ParentID;
		
		private EntitySet<StudentActivityComment> _StudentActivityComments;
		
		private EntityRef<StudentActivity> _StudentActivity;
		
		private EntityRef<StudentActivityComment> _StudentActivityComment1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActivityIDChanging(int value);
    partial void OnActivityIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserTypeChanging(int value);
    partial void OnUserTypeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    #endregion
		
		public StudentActivityComment()
		{
			this._StudentActivityComments = new EntitySet<StudentActivityComment>(new Action<StudentActivityComment>(this.attach_StudentActivityComments), new Action<StudentActivityComment>(this.detach_StudentActivityComments));
			this._StudentActivity = default(EntityRef<StudentActivity>);
			this._StudentActivityComment1 = default(EntityRef<StudentActivityComment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", DbType="Int NOT NULL")]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					if (this._StudentActivity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityID = value;
					this.SendPropertyChanged("ActivityID");
					this.OnActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="Int NOT NULL")]
		public int UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(2000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._StudentActivityComment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentActivityComment_StudentActivityComment", Storage="_StudentActivityComments", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<StudentActivityComment> StudentActivityComments
		{
			get
			{
				return this._StudentActivityComments;
			}
			set
			{
				this._StudentActivityComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentActivity_StudentActivityComment", Storage="_StudentActivity", ThisKey="ActivityID", OtherKey="ID", IsForeignKey=true)]
		public StudentActivity StudentActivity
		{
			get
			{
				return this._StudentActivity.Entity;
			}
			set
			{
				StudentActivity previousValue = this._StudentActivity.Entity;
				if (((previousValue != value) 
							|| (this._StudentActivity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentActivity.Entity = null;
						previousValue.StudentActivityComments.Remove(this);
					}
					this._StudentActivity.Entity = value;
					if ((value != null))
					{
						value.StudentActivityComments.Add(this);
						this._ActivityID = value.ID;
					}
					else
					{
						this._ActivityID = default(int);
					}
					this.SendPropertyChanged("StudentActivity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentActivityComment_StudentActivityComment", Storage="_StudentActivityComment1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public StudentActivityComment StudentActivityComment1
		{
			get
			{
				return this._StudentActivityComment1.Entity;
			}
			set
			{
				StudentActivityComment previousValue = this._StudentActivityComment1.Entity;
				if (((previousValue != value) 
							|| (this._StudentActivityComment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentActivityComment1.Entity = null;
						previousValue.StudentActivityComments.Remove(this);
					}
					this._StudentActivityComment1.Entity = value;
					if ((value != null))
					{
						value.StudentActivityComments.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StudentActivityComment1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentActivityComments(StudentActivityComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentActivityComment1 = this;
		}
		
		private void detach_StudentActivityComments(StudentActivityComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentActivityComment1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentCourse")]
	public partial class StudentCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _CourseCode;
		
		private string _StudentNum;
		
		private string _TeacherNum;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntitySet<StudentCourseScore> _StudentCourseScores;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCourseCodeChanging(string value);
    partial void OnCourseCodeChanged();
    partial void OnStudentNumChanging(string value);
    partial void OnStudentNumChanged();
    partial void OnTeacherNumChanging(string value);
    partial void OnTeacherNumChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public StudentCourse()
		{
			this._StudentCourseScores = new EntitySet<StudentCourseScore>(new Action<StudentCourseScore>(this.attach_StudentCourseScores), new Action<StudentCourseScore>(this.detach_StudentCourseScores));
			this._Course = default(EntityRef<Course>);
			this._Student = default(EntityRef<Student>);
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCode", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string CourseCode
		{
			get
			{
				return this._CourseCode;
			}
			set
			{
				if ((this._CourseCode != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseCodeChanging(value);
					this.SendPropertyChanging();
					this._CourseCode = value;
					this.SendPropertyChanged("CourseCode");
					this.OnCourseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentNumChanging(value);
					this.SendPropertyChanging();
					this._StudentNum = value;
					this.SendPropertyChanged("StudentNum");
					this.OnStudentNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherNum", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TeacherNum
		{
			get
			{
				return this._TeacherNum;
			}
			set
			{
				if ((this._TeacherNum != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherNumChanging(value);
					this.SendPropertyChanging();
					this._TeacherNum = value;
					this.SendPropertyChanged("TeacherNum");
					this.OnTeacherNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentCourse_StudentCourseScore", Storage="_StudentCourseScores", ThisKey="Code", OtherKey="StudentCourseCode")]
		public EntitySet<StudentCourseScore> StudentCourseScores
		{
			get
			{
				return this._StudentCourseScores;
			}
			set
			{
				this._StudentCourseScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_StudentCourse", Storage="_Course", ThisKey="CourseCode", OtherKey="Code", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.StudentCourses.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.StudentCourses.Add(this);
						this._CourseCode = value.Code;
					}
					else
					{
						this._CourseCode = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentCourse", Storage="_Student", ThisKey="StudentNum", OtherKey="StudentNum", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentCourses.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentCourses.Add(this);
						this._StudentNum = value.StudentNum;
					}
					else
					{
						this._StudentNum = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_StudentCourse", Storage="_Teacher", ThisKey="TeacherNum", OtherKey="TeacherNum", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.StudentCourses.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.StudentCourses.Add(this);
						this._TeacherNum = value.TeacherNum;
					}
					else
					{
						this._TeacherNum = default(string);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentCourseScores(StudentCourseScore entity)
		{
			this.SendPropertyChanging();
			entity.StudentCourse = this;
		}
		
		private void detach_StudentCourseScores(StudentCourseScore entity)
		{
			this.SendPropertyChanging();
			entity.StudentCourse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentCourseScore")]
	public partial class StudentCourseScore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StudentCourseCode;
		
		private string _CourseCode;
		
		private decimal _Score;
		
		private System.DateTime _ExamineTime;
		
		private int _CourseScoreType;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<StudentCourse> _StudentCourse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStudentCourseCodeChanging(string value);
    partial void OnStudentCourseCodeChanged();
    partial void OnCourseCodeChanging(string value);
    partial void OnCourseCodeChanged();
    partial void OnScoreChanging(decimal value);
    partial void OnScoreChanged();
    partial void OnExamineTimeChanging(System.DateTime value);
    partial void OnExamineTimeChanged();
    partial void OnCourseScoreTypeChanging(int value);
    partial void OnCourseScoreTypeChanged();
    #endregion
		
		public StudentCourseScore()
		{
			this._Course = default(EntityRef<Course>);
			this._StudentCourse = default(EntityRef<StudentCourse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCourseCode", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string StudentCourseCode
		{
			get
			{
				return this._StudentCourseCode;
			}
			set
			{
				if ((this._StudentCourseCode != value))
				{
					if (this._StudentCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentCourseCodeChanging(value);
					this.SendPropertyChanging();
					this._StudentCourseCode = value;
					this.SendPropertyChanged("StudentCourseCode");
					this.OnStudentCourseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCode", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string CourseCode
		{
			get
			{
				return this._CourseCode;
			}
			set
			{
				if ((this._CourseCode != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseCodeChanging(value);
					this.SendPropertyChanging();
					this._CourseCode = value;
					this.SendPropertyChanged("CourseCode");
					this.OnCourseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Decimal(4,1) NOT NULL")]
		public decimal Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamineTime", DbType="DateTime NOT NULL")]
		public System.DateTime ExamineTime
		{
			get
			{
				return this._ExamineTime;
			}
			set
			{
				if ((this._ExamineTime != value))
				{
					this.OnExamineTimeChanging(value);
					this.SendPropertyChanging();
					this._ExamineTime = value;
					this.SendPropertyChanged("ExamineTime");
					this.OnExamineTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseScoreType", DbType="Int NOT NULL")]
		public int CourseScoreType
		{
			get
			{
				return this._CourseScoreType;
			}
			set
			{
				if ((this._CourseScoreType != value))
				{
					this.OnCourseScoreTypeChanging(value);
					this.SendPropertyChanging();
					this._CourseScoreType = value;
					this.SendPropertyChanged("CourseScoreType");
					this.OnCourseScoreTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_StudentCourseScore", Storage="_Course", ThisKey="CourseCode", OtherKey="Code", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.StudentCourseScores.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.StudentCourseScores.Add(this);
						this._CourseCode = value.Code;
					}
					else
					{
						this._CourseCode = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentCourse_StudentCourseScore", Storage="_StudentCourse", ThisKey="StudentCourseCode", OtherKey="Code", IsForeignKey=true)]
		public StudentCourse StudentCourse
		{
			get
			{
				return this._StudentCourse.Entity;
			}
			set
			{
				StudentCourse previousValue = this._StudentCourse.Entity;
				if (((previousValue != value) 
							|| (this._StudentCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentCourse.Entity = null;
						previousValue.StudentCourseScores.Remove(this);
					}
					this._StudentCourse.Entity = value;
					if ((value != null))
					{
						value.StudentCourseScores.Add(this);
						this._StudentCourseCode = value.Code;
					}
					else
					{
						this._StudentCourseCode = default(string);
					}
					this.SendPropertyChanged("StudentCourse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentDailyEssay")]
	public partial class StudentDailyEssay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Content;
		
		private System.DateTime _CreateTime;
		
		private bool _IsOnline;
		
		private string _StudentNum;
		
		private EntitySet<StudentDailyEssayComment> _StudentDailyEssayComments;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnStudentNumChanging(string value);
    partial void OnStudentNumChanged();
    #endregion
		
		public StudentDailyEssay()
		{
			this._StudentDailyEssayComments = new EntitySet<StudentDailyEssayComment>(new Action<StudentDailyEssayComment>(this.attach_StudentDailyEssayComments), new Action<StudentDailyEssayComment>(this.detach_StudentDailyEssayComments));
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentNumChanging(value);
					this.SendPropertyChanging();
					this._StudentNum = value;
					this.SendPropertyChanged("StudentNum");
					this.OnStudentNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDailyEssay_StudentDailyEssayComment", Storage="_StudentDailyEssayComments", ThisKey="ID", OtherKey="DailyEssayID")]
		public EntitySet<StudentDailyEssayComment> StudentDailyEssayComments
		{
			get
			{
				return this._StudentDailyEssayComments;
			}
			set
			{
				this._StudentDailyEssayComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentDailyEssay", Storage="_Student", ThisKey="StudentNum", OtherKey="StudentNum", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentDailyEssays.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentDailyEssays.Add(this);
						this._StudentNum = value.StudentNum;
					}
					else
					{
						this._StudentNum = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentDailyEssayComments(StudentDailyEssayComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentDailyEssay = this;
		}
		
		private void detach_StudentDailyEssayComments(StudentDailyEssayComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentDailyEssay = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentDailyEssayComment")]
	public partial class StudentDailyEssayComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DailyEssayID;
		
		private string _UserName;
		
		private int _UserType;
		
		private string _Comment;
		
		private System.DateTime _CreateTime;
		
		private System.Nullable<int> _ParentID;
		
		private EntitySet<StudentDailyEssayComment> _StudentDailyEssayComments;
		
		private EntityRef<StudentDailyEssay> _StudentDailyEssay;
		
		private EntityRef<StudentDailyEssayComment> _StudentDailyEssayComment1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDailyEssayIDChanging(int value);
    partial void OnDailyEssayIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserTypeChanging(int value);
    partial void OnUserTypeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    #endregion
		
		public StudentDailyEssayComment()
		{
			this._StudentDailyEssayComments = new EntitySet<StudentDailyEssayComment>(new Action<StudentDailyEssayComment>(this.attach_StudentDailyEssayComments), new Action<StudentDailyEssayComment>(this.detach_StudentDailyEssayComments));
			this._StudentDailyEssay = default(EntityRef<StudentDailyEssay>);
			this._StudentDailyEssayComment1 = default(EntityRef<StudentDailyEssayComment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyEssayID", DbType="Int NOT NULL")]
		public int DailyEssayID
		{
			get
			{
				return this._DailyEssayID;
			}
			set
			{
				if ((this._DailyEssayID != value))
				{
					if (this._StudentDailyEssay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDailyEssayIDChanging(value);
					this.SendPropertyChanging();
					this._DailyEssayID = value;
					this.SendPropertyChanged("DailyEssayID");
					this.OnDailyEssayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="Int NOT NULL")]
		public int UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._StudentDailyEssayComment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDailyEssayComment_StudentDailyEssayComment", Storage="_StudentDailyEssayComments", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<StudentDailyEssayComment> StudentDailyEssayComments
		{
			get
			{
				return this._StudentDailyEssayComments;
			}
			set
			{
				this._StudentDailyEssayComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDailyEssay_StudentDailyEssayComment", Storage="_StudentDailyEssay", ThisKey="DailyEssayID", OtherKey="ID", IsForeignKey=true)]
		public StudentDailyEssay StudentDailyEssay
		{
			get
			{
				return this._StudentDailyEssay.Entity;
			}
			set
			{
				StudentDailyEssay previousValue = this._StudentDailyEssay.Entity;
				if (((previousValue != value) 
							|| (this._StudentDailyEssay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentDailyEssay.Entity = null;
						previousValue.StudentDailyEssayComments.Remove(this);
					}
					this._StudentDailyEssay.Entity = value;
					if ((value != null))
					{
						value.StudentDailyEssayComments.Add(this);
						this._DailyEssayID = value.ID;
					}
					else
					{
						this._DailyEssayID = default(int);
					}
					this.SendPropertyChanged("StudentDailyEssay");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDailyEssayComment_StudentDailyEssayComment", Storage="_StudentDailyEssayComment1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public StudentDailyEssayComment StudentDailyEssayComment1
		{
			get
			{
				return this._StudentDailyEssayComment1.Entity;
			}
			set
			{
				StudentDailyEssayComment previousValue = this._StudentDailyEssayComment1.Entity;
				if (((previousValue != value) 
							|| (this._StudentDailyEssayComment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentDailyEssayComment1.Entity = null;
						previousValue.StudentDailyEssayComments.Remove(this);
					}
					this._StudentDailyEssayComment1.Entity = value;
					if ((value != null))
					{
						value.StudentDailyEssayComments.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StudentDailyEssayComment1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentDailyEssayComments(StudentDailyEssayComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentDailyEssayComment1 = this;
		}
		
		private void detach_StudentDailyEssayComments(StudentDailyEssayComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentDailyEssayComment1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentDictory")]
	public partial class StudentDictory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private string _StudentNum;
		
		private int _OpenType;
		
		private int _SharedType;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _LastUpdateTime;
		
		private EntitySet<StudentPhoto> _StudentPhotos;
		
		private EntitySet<StudentPhotoComment> _StudentPhotoComments;
		
		private EntitySet<StudentPhotoVisit> _StudentPhotoVisits;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStudentNumChanging(string value);
    partial void OnStudentNumChanged();
    partial void OnOpenTypeChanging(int value);
    partial void OnOpenTypeChanged();
    partial void OnSharedTypeChanging(int value);
    partial void OnSharedTypeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnLastUpdateTimeChanging(System.DateTime value);
    partial void OnLastUpdateTimeChanged();
    #endregion
		
		public StudentDictory()
		{
			this._StudentPhotos = new EntitySet<StudentPhoto>(new Action<StudentPhoto>(this.attach_StudentPhotos), new Action<StudentPhoto>(this.detach_StudentPhotos));
			this._StudentPhotoComments = new EntitySet<StudentPhotoComment>(new Action<StudentPhotoComment>(this.attach_StudentPhotoComments), new Action<StudentPhotoComment>(this.detach_StudentPhotoComments));
			this._StudentPhotoVisits = new EntitySet<StudentPhotoVisit>(new Action<StudentPhotoVisit>(this.attach_StudentPhotoVisits), new Action<StudentPhotoVisit>(this.detach_StudentPhotoVisits));
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentNumChanging(value);
					this.SendPropertyChanging();
					this._StudentNum = value;
					this.SendPropertyChanged("StudentNum");
					this.OnStudentNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenType", DbType="Int NOT NULL")]
		public int OpenType
		{
			get
			{
				return this._OpenType;
			}
			set
			{
				if ((this._OpenType != value))
				{
					this.OnOpenTypeChanging(value);
					this.SendPropertyChanging();
					this._OpenType = value;
					this.SendPropertyChanged("OpenType");
					this.OnOpenTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharedType", DbType="Int NOT NULL")]
		public int SharedType
		{
			get
			{
				return this._SharedType;
			}
			set
			{
				if ((this._SharedType != value))
				{
					this.OnSharedTypeChanging(value);
					this.SendPropertyChanging();
					this._SharedType = value;
					this.SendPropertyChanged("SharedType");
					this.OnSharedTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdateTime
		{
			get
			{
				return this._LastUpdateTime;
			}
			set
			{
				if ((this._LastUpdateTime != value))
				{
					this.OnLastUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateTime = value;
					this.SendPropertyChanged("LastUpdateTime");
					this.OnLastUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDictory_StudentPhoto", Storage="_StudentPhotos", ThisKey="ID", OtherKey="StudentDictoryId")]
		public EntitySet<StudentPhoto> StudentPhotos
		{
			get
			{
				return this._StudentPhotos;
			}
			set
			{
				this._StudentPhotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDictory_StudentPhotoComment", Storage="_StudentPhotoComments", ThisKey="ID", OtherKey="StudentDictoryId")]
		public EntitySet<StudentPhotoComment> StudentPhotoComments
		{
			get
			{
				return this._StudentPhotoComments;
			}
			set
			{
				this._StudentPhotoComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDictory_StudentPhotoVisit", Storage="_StudentPhotoVisits", ThisKey="ID", OtherKey="StudentDictoryId")]
		public EntitySet<StudentPhotoVisit> StudentPhotoVisits
		{
			get
			{
				return this._StudentPhotoVisits;
			}
			set
			{
				this._StudentPhotoVisits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentDictory", Storage="_Student", ThisKey="StudentNum", OtherKey="StudentNum", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentDictories.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentDictories.Add(this);
						this._StudentNum = value.StudentNum;
					}
					else
					{
						this._StudentNum = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentPhotos(StudentPhoto entity)
		{
			this.SendPropertyChanging();
			entity.StudentDictory = this;
		}
		
		private void detach_StudentPhotos(StudentPhoto entity)
		{
			this.SendPropertyChanging();
			entity.StudentDictory = null;
		}
		
		private void attach_StudentPhotoComments(StudentPhotoComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentDictory = this;
		}
		
		private void detach_StudentPhotoComments(StudentPhotoComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentDictory = null;
		}
		
		private void attach_StudentPhotoVisits(StudentPhotoVisit entity)
		{
			this.SendPropertyChanging();
			entity.StudentDictory = this;
		}
		
		private void detach_StudentPhotoVisits(StudentPhotoVisit entity)
		{
			this.SendPropertyChanging();
			entity.StudentDictory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentFamilyAccount")]
	public partial class StudentFamilyAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StudentNum;
		
		private string _UserName;
		
		private string _Password;
		
		private string _NameZh;
		
		private string _NameEn;
		
		private int _Sex;
		
		private bool _IsOnline;
		
		private string _Relationship;
		
		private System.Nullable<System.DateTime> _LastUpdatedTime;
		
		private System.DateTime _CreateTime;
		
		private EntityRef<FamilyAccount> _FamilyAccount;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStudentNumChanging(string value);
    partial void OnStudentNumChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNameZhChanging(string value);
    partial void OnNameZhChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnSexChanging(int value);
    partial void OnSexChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnRelationshipChanging(string value);
    partial void OnRelationshipChanged();
    partial void OnLastUpdatedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedTimeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public StudentFamilyAccount()
		{
			this._FamilyAccount = default(EntityRef<FamilyAccount>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentNumChanging(value);
					this.SendPropertyChanging();
					this._StudentNum = value;
					this.SendPropertyChanged("StudentNum");
					this.OnStudentNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameZh", DbType="NVarChar(20)")]
		public string NameZh
		{
			get
			{
				return this._NameZh;
			}
			set
			{
				if ((this._NameZh != value))
				{
					this.OnNameZhChanging(value);
					this.SendPropertyChanging();
					this._NameZh = value;
					this.SendPropertyChanged("NameZh");
					this.OnNameZhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="VarChar(30)")]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Int NOT NULL")]
		public int Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relationship", DbType="NVarChar(40)")]
		public string Relationship
		{
			get
			{
				return this._Relationship;
			}
			set
			{
				if ((this._Relationship != value))
				{
					this.OnRelationshipChanging(value);
					this.SendPropertyChanging();
					this._Relationship = value;
					this.SendPropertyChanged("Relationship");
					this.OnRelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedTime
		{
			get
			{
				return this._LastUpdatedTime;
			}
			set
			{
				if ((this._LastUpdatedTime != value))
				{
					this.OnLastUpdatedTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedTime = value;
					this.SendPropertyChanged("LastUpdatedTime");
					this.OnLastUpdatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentFamilyAccount_FamilyAccount", Storage="_FamilyAccount", ThisKey="UserName", OtherKey="FamilyAccountNum", IsUnique=true, IsForeignKey=false)]
		public FamilyAccount FamilyAccount
		{
			get
			{
				return this._FamilyAccount.Entity;
			}
			set
			{
				FamilyAccount previousValue = this._FamilyAccount.Entity;
				if (((previousValue != value) 
							|| (this._FamilyAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FamilyAccount.Entity = null;
						previousValue.StudentFamilyAccount = null;
					}
					this._FamilyAccount.Entity = value;
					if ((value != null))
					{
						value.StudentFamilyAccount = this;
					}
					this.SendPropertyChanged("FamilyAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentFamilyAccount", Storage="_Student", ThisKey="StudentNum", OtherKey="StudentNum", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentFamilyAccounts.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentFamilyAccounts.Add(this);
						this._StudentNum = value.StudentNum;
					}
					else
					{
						this._StudentNum = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentJobExpect")]
	public partial class StudentJobExpect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StudentNum;
		
		private string _JobAddress;
		
		private string _JobSalary;
		
		private string _JobContent;
		
		private string _JobRequired;
		
		private int _OpenType;
		
		private System.DateTime _LastUpdateTime;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentNumChanging(string value);
    partial void OnStudentNumChanged();
    partial void OnJobAddressChanging(string value);
    partial void OnJobAddressChanged();
    partial void OnJobSalaryChanging(string value);
    partial void OnJobSalaryChanged();
    partial void OnJobContentChanging(string value);
    partial void OnJobContentChanged();
    partial void OnJobRequiredChanging(string value);
    partial void OnJobRequiredChanged();
    partial void OnOpenTypeChanging(int value);
    partial void OnOpenTypeChanged();
    partial void OnLastUpdateTimeChanging(System.DateTime value);
    partial void OnLastUpdateTimeChanged();
    #endregion
		
		public StudentJobExpect()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentNumChanging(value);
					this.SendPropertyChanging();
					this._StudentNum = value;
					this.SendPropertyChanged("StudentNum");
					this.OnStudentNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobAddress", DbType="NVarChar(500)")]
		public string JobAddress
		{
			get
			{
				return this._JobAddress;
			}
			set
			{
				if ((this._JobAddress != value))
				{
					this.OnJobAddressChanging(value);
					this.SendPropertyChanging();
					this._JobAddress = value;
					this.SendPropertyChanged("JobAddress");
					this.OnJobAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobSalary", DbType="VarChar(100)")]
		public string JobSalary
		{
			get
			{
				return this._JobSalary;
			}
			set
			{
				if ((this._JobSalary != value))
				{
					this.OnJobSalaryChanging(value);
					this.SendPropertyChanging();
					this._JobSalary = value;
					this.SendPropertyChanged("JobSalary");
					this.OnJobSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobContent", DbType="NVarChar(100)")]
		public string JobContent
		{
			get
			{
				return this._JobContent;
			}
			set
			{
				if ((this._JobContent != value))
				{
					this.OnJobContentChanging(value);
					this.SendPropertyChanging();
					this._JobContent = value;
					this.SendPropertyChanged("JobContent");
					this.OnJobContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobRequired", DbType="NVarChar(1000)")]
		public string JobRequired
		{
			get
			{
				return this._JobRequired;
			}
			set
			{
				if ((this._JobRequired != value))
				{
					this.OnJobRequiredChanging(value);
					this.SendPropertyChanging();
					this._JobRequired = value;
					this.SendPropertyChanged("JobRequired");
					this.OnJobRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenType", DbType="Int NOT NULL")]
		public int OpenType
		{
			get
			{
				return this._OpenType;
			}
			set
			{
				if ((this._OpenType != value))
				{
					this.OnOpenTypeChanging(value);
					this.SendPropertyChanging();
					this._OpenType = value;
					this.SendPropertyChanged("OpenType");
					this.OnOpenTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdateTime
		{
			get
			{
				return this._LastUpdateTime;
			}
			set
			{
				if ((this._LastUpdateTime != value))
				{
					this.OnLastUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateTime = value;
					this.SendPropertyChanged("LastUpdateTime");
					this.OnLastUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentJobExpect", Storage="_Student", ThisKey="StudentNum", OtherKey="StudentNum", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentJobExpect = null;
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentJobExpect = this;
						this._StudentNum = value.StudentNum;
					}
					else
					{
						this._StudentNum = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentPhoto")]
	public partial class StudentPhoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _StudentDictoryId;
		
		private string _Name;
		
		private string _PhotoPath;
		
		private string _ThumbPath;
		
		private string _SmallPath;
		
		private bool _IsDictoryPhoto;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _LastUpdateTime;
		
		private EntitySet<StudentPhotoComment> _StudentPhotoComments;
		
		private EntitySet<StudentPhotoVisit> _StudentPhotoVisits;
		
		private EntityRef<StudentDictory> _StudentDictory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStudentDictoryIdChanging(int value);
    partial void OnStudentDictoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhotoPathChanging(string value);
    partial void OnPhotoPathChanged();
    partial void OnThumbPathChanging(string value);
    partial void OnThumbPathChanged();
    partial void OnSmallPathChanging(string value);
    partial void OnSmallPathChanged();
    partial void OnIsDictoryPhotoChanging(bool value);
    partial void OnIsDictoryPhotoChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnLastUpdateTimeChanging(System.DateTime value);
    partial void OnLastUpdateTimeChanged();
    #endregion
		
		public StudentPhoto()
		{
			this._StudentPhotoComments = new EntitySet<StudentPhotoComment>(new Action<StudentPhotoComment>(this.attach_StudentPhotoComments), new Action<StudentPhotoComment>(this.detach_StudentPhotoComments));
			this._StudentPhotoVisits = new EntitySet<StudentPhotoVisit>(new Action<StudentPhotoVisit>(this.attach_StudentPhotoVisits), new Action<StudentPhotoVisit>(this.detach_StudentPhotoVisits));
			this._StudentDictory = default(EntityRef<StudentDictory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentDictoryId", DbType="Int NOT NULL")]
		public int StudentDictoryId
		{
			get
			{
				return this._StudentDictoryId;
			}
			set
			{
				if ((this._StudentDictoryId != value))
				{
					if (this._StudentDictory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentDictoryIdChanging(value);
					this.SendPropertyChanging();
					this._StudentDictoryId = value;
					this.SendPropertyChanged("StudentDictoryId");
					this.OnStudentDictoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoPath", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PhotoPath
		{
			get
			{
				return this._PhotoPath;
			}
			set
			{
				if ((this._PhotoPath != value))
				{
					this.OnPhotoPathChanging(value);
					this.SendPropertyChanging();
					this._PhotoPath = value;
					this.SendPropertyChanged("PhotoPath");
					this.OnPhotoPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbPath", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ThumbPath
		{
			get
			{
				return this._ThumbPath;
			}
			set
			{
				if ((this._ThumbPath != value))
				{
					this.OnThumbPathChanging(value);
					this.SendPropertyChanging();
					this._ThumbPath = value;
					this.SendPropertyChanged("ThumbPath");
					this.OnThumbPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallPath", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SmallPath
		{
			get
			{
				return this._SmallPath;
			}
			set
			{
				if ((this._SmallPath != value))
				{
					this.OnSmallPathChanging(value);
					this.SendPropertyChanging();
					this._SmallPath = value;
					this.SendPropertyChanged("SmallPath");
					this.OnSmallPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDictoryPhoto", DbType="Bit NOT NULL")]
		public bool IsDictoryPhoto
		{
			get
			{
				return this._IsDictoryPhoto;
			}
			set
			{
				if ((this._IsDictoryPhoto != value))
				{
					this.OnIsDictoryPhotoChanging(value);
					this.SendPropertyChanging();
					this._IsDictoryPhoto = value;
					this.SendPropertyChanged("IsDictoryPhoto");
					this.OnIsDictoryPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdateTime
		{
			get
			{
				return this._LastUpdateTime;
			}
			set
			{
				if ((this._LastUpdateTime != value))
				{
					this.OnLastUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateTime = value;
					this.SendPropertyChanged("LastUpdateTime");
					this.OnLastUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentPhoto_StudentPhotoComment", Storage="_StudentPhotoComments", ThisKey="ID", OtherKey="StudentPhotoId")]
		public EntitySet<StudentPhotoComment> StudentPhotoComments
		{
			get
			{
				return this._StudentPhotoComments;
			}
			set
			{
				this._StudentPhotoComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentPhoto_StudentPhotoVisit", Storage="_StudentPhotoVisits", ThisKey="ID", OtherKey="StudentPhotoId")]
		public EntitySet<StudentPhotoVisit> StudentPhotoVisits
		{
			get
			{
				return this._StudentPhotoVisits;
			}
			set
			{
				this._StudentPhotoVisits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDictory_StudentPhoto", Storage="_StudentDictory", ThisKey="StudentDictoryId", OtherKey="ID", IsForeignKey=true)]
		public StudentDictory StudentDictory
		{
			get
			{
				return this._StudentDictory.Entity;
			}
			set
			{
				StudentDictory previousValue = this._StudentDictory.Entity;
				if (((previousValue != value) 
							|| (this._StudentDictory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentDictory.Entity = null;
						previousValue.StudentPhotos.Remove(this);
					}
					this._StudentDictory.Entity = value;
					if ((value != null))
					{
						value.StudentPhotos.Add(this);
						this._StudentDictoryId = value.ID;
					}
					else
					{
						this._StudentDictoryId = default(int);
					}
					this.SendPropertyChanged("StudentDictory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentPhotoComments(StudentPhotoComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentPhoto = this;
		}
		
		private void detach_StudentPhotoComments(StudentPhotoComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentPhoto = null;
		}
		
		private void attach_StudentPhotoVisits(StudentPhotoVisit entity)
		{
			this.SendPropertyChanging();
			entity.StudentPhoto = this;
		}
		
		private void detach_StudentPhotoVisits(StudentPhotoVisit entity)
		{
			this.SendPropertyChanging();
			entity.StudentPhoto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentPhotoComment")]
	public partial class StudentPhotoComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _StudentPhotoId;
		
		private int _StudentDictoryId;
		
		private int _UserType;
		
		private string _UserName;
		
		private string _Comment;
		
		private System.DateTime _CreateTime;
		
		private EntityRef<StudentPhoto> _StudentPhoto;
		
		private EntityRef<StudentDictory> _StudentDictory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStudentPhotoIdChanging(int value);
    partial void OnStudentPhotoIdChanged();
    partial void OnStudentDictoryIdChanging(int value);
    partial void OnStudentDictoryIdChanged();
    partial void OnUserTypeChanging(int value);
    partial void OnUserTypeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public StudentPhotoComment()
		{
			this._StudentPhoto = default(EntityRef<StudentPhoto>);
			this._StudentDictory = default(EntityRef<StudentDictory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPhotoId", DbType="Int NOT NULL")]
		public int StudentPhotoId
		{
			get
			{
				return this._StudentPhotoId;
			}
			set
			{
				if ((this._StudentPhotoId != value))
				{
					if (this._StudentPhoto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentPhotoIdChanging(value);
					this.SendPropertyChanging();
					this._StudentPhotoId = value;
					this.SendPropertyChanged("StudentPhotoId");
					this.OnStudentPhotoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentDictoryId", DbType="Int NOT NULL")]
		public int StudentDictoryId
		{
			get
			{
				return this._StudentDictoryId;
			}
			set
			{
				if ((this._StudentDictoryId != value))
				{
					if (this._StudentDictory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentDictoryIdChanging(value);
					this.SendPropertyChanging();
					this._StudentDictoryId = value;
					this.SendPropertyChanged("StudentDictoryId");
					this.OnStudentDictoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="Int NOT NULL")]
		public int UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentPhoto_StudentPhotoComment", Storage="_StudentPhoto", ThisKey="StudentPhotoId", OtherKey="ID", IsForeignKey=true)]
		public StudentPhoto StudentPhoto
		{
			get
			{
				return this._StudentPhoto.Entity;
			}
			set
			{
				StudentPhoto previousValue = this._StudentPhoto.Entity;
				if (((previousValue != value) 
							|| (this._StudentPhoto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentPhoto.Entity = null;
						previousValue.StudentPhotoComments.Remove(this);
					}
					this._StudentPhoto.Entity = value;
					if ((value != null))
					{
						value.StudentPhotoComments.Add(this);
						this._StudentPhotoId = value.ID;
					}
					else
					{
						this._StudentPhotoId = default(int);
					}
					this.SendPropertyChanged("StudentPhoto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDictory_StudentPhotoComment", Storage="_StudentDictory", ThisKey="StudentDictoryId", OtherKey="ID", IsForeignKey=true)]
		public StudentDictory StudentDictory
		{
			get
			{
				return this._StudentDictory.Entity;
			}
			set
			{
				StudentDictory previousValue = this._StudentDictory.Entity;
				if (((previousValue != value) 
							|| (this._StudentDictory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentDictory.Entity = null;
						previousValue.StudentPhotoComments.Remove(this);
					}
					this._StudentDictory.Entity = value;
					if ((value != null))
					{
						value.StudentPhotoComments.Add(this);
						this._StudentDictoryId = value.ID;
					}
					else
					{
						this._StudentDictoryId = default(int);
					}
					this.SendPropertyChanged("StudentDictory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentPhotoVisit")]
	public partial class StudentPhotoVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _StudentPhotoId;
		
		private int _StudentDictoryId;
		
		private int _UserType;
		
		private string _UserName;
		
		private System.DateTime _VisitTime;
		
		private EntityRef<StudentPhoto> _StudentPhoto;
		
		private EntityRef<StudentDictory> _StudentDictory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStudentPhotoIdChanging(int value);
    partial void OnStudentPhotoIdChanged();
    partial void OnStudentDictoryIdChanging(int value);
    partial void OnStudentDictoryIdChanged();
    partial void OnUserTypeChanging(int value);
    partial void OnUserTypeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnVisitTimeChanging(System.DateTime value);
    partial void OnVisitTimeChanged();
    #endregion
		
		public StudentPhotoVisit()
		{
			this._StudentPhoto = default(EntityRef<StudentPhoto>);
			this._StudentDictory = default(EntityRef<StudentDictory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPhotoId", DbType="Int NOT NULL")]
		public int StudentPhotoId
		{
			get
			{
				return this._StudentPhotoId;
			}
			set
			{
				if ((this._StudentPhotoId != value))
				{
					if (this._StudentPhoto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentPhotoIdChanging(value);
					this.SendPropertyChanging();
					this._StudentPhotoId = value;
					this.SendPropertyChanged("StudentPhotoId");
					this.OnStudentPhotoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentDictoryId", DbType="Int NOT NULL")]
		public int StudentDictoryId
		{
			get
			{
				return this._StudentDictoryId;
			}
			set
			{
				if ((this._StudentDictoryId != value))
				{
					if (this._StudentDictory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentDictoryIdChanging(value);
					this.SendPropertyChanging();
					this._StudentDictoryId = value;
					this.SendPropertyChanged("StudentDictoryId");
					this.OnStudentDictoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="Int NOT NULL")]
		public int UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitTime", DbType="DateTime NOT NULL")]
		public System.DateTime VisitTime
		{
			get
			{
				return this._VisitTime;
			}
			set
			{
				if ((this._VisitTime != value))
				{
					this.OnVisitTimeChanging(value);
					this.SendPropertyChanging();
					this._VisitTime = value;
					this.SendPropertyChanged("VisitTime");
					this.OnVisitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentPhoto_StudentPhotoVisit", Storage="_StudentPhoto", ThisKey="StudentPhotoId", OtherKey="ID", IsForeignKey=true)]
		public StudentPhoto StudentPhoto
		{
			get
			{
				return this._StudentPhoto.Entity;
			}
			set
			{
				StudentPhoto previousValue = this._StudentPhoto.Entity;
				if (((previousValue != value) 
							|| (this._StudentPhoto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentPhoto.Entity = null;
						previousValue.StudentPhotoVisits.Remove(this);
					}
					this._StudentPhoto.Entity = value;
					if ((value != null))
					{
						value.StudentPhotoVisits.Add(this);
						this._StudentPhotoId = value.ID;
					}
					else
					{
						this._StudentPhotoId = default(int);
					}
					this.SendPropertyChanged("StudentPhoto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDictory_StudentPhotoVisit", Storage="_StudentDictory", ThisKey="StudentDictoryId", OtherKey="ID", IsForeignKey=true)]
		public StudentDictory StudentDictory
		{
			get
			{
				return this._StudentDictory.Entity;
			}
			set
			{
				StudentDictory previousValue = this._StudentDictory.Entity;
				if (((previousValue != value) 
							|| (this._StudentDictory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentDictory.Entity = null;
						previousValue.StudentPhotoVisits.Remove(this);
					}
					this._StudentDictory.Entity = value;
					if ((value != null))
					{
						value.StudentPhotoVisits.Add(this);
						this._StudentDictoryId = value.ID;
					}
					else
					{
						this._StudentDictoryId = default(int);
					}
					this.SendPropertyChanged("StudentDictory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentProfessional")]
	public partial class StudentProfessional : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private System.DateTime _ObtainTime;
		
		private System.DateTime _CreateTime;
		
		private string _StudentNum;
		
		private bool _IsOnline;
		
		private string _Name;
		
		private EntitySet<StudentProfessionalAttachment> _StudentProfessionalAttachments;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnObtainTimeChanging(System.DateTime value);
    partial void OnObtainTimeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnStudentNumChanging(string value);
    partial void OnStudentNumChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public StudentProfessional()
		{
			this._StudentProfessionalAttachments = new EntitySet<StudentProfessionalAttachment>(new Action<StudentProfessionalAttachment>(this.attach_StudentProfessionalAttachments), new Action<StudentProfessionalAttachment>(this.detach_StudentProfessionalAttachments));
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObtainTime", DbType="DateTime NOT NULL")]
		public System.DateTime ObtainTime
		{
			get
			{
				return this._ObtainTime;
			}
			set
			{
				if ((this._ObtainTime != value))
				{
					this.OnObtainTimeChanging(value);
					this.SendPropertyChanging();
					this._ObtainTime = value;
					this.SendPropertyChanged("ObtainTime");
					this.OnObtainTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentNumChanging(value);
					this.SendPropertyChanging();
					this._StudentNum = value;
					this.SendPropertyChanged("StudentNum");
					this.OnStudentNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentProfessional_StudentProfessionalAttachment", Storage="_StudentProfessionalAttachments", ThisKey="ID", OtherKey="ProfessionalID")]
		public EntitySet<StudentProfessionalAttachment> StudentProfessionalAttachments
		{
			get
			{
				return this._StudentProfessionalAttachments;
			}
			set
			{
				this._StudentProfessionalAttachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentProfessional", Storage="_Student", ThisKey="StudentNum", OtherKey="StudentNum", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentProfessionals.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentProfessionals.Add(this);
						this._StudentNum = value.StudentNum;
					}
					else
					{
						this._StudentNum = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentProfessionalAttachments(StudentProfessionalAttachment entity)
		{
			this.SendPropertyChanging();
			entity.StudentProfessional = this;
		}
		
		private void detach_StudentProfessionalAttachments(StudentProfessionalAttachment entity)
		{
			this.SendPropertyChanging();
			entity.StudentProfessional = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentProfessionalAttachment")]
	public partial class StudentProfessionalAttachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Path;
		
		private int _DocumentType;
		
		private int _ProfessionalID;
		
		private int _DisplayOrder;
		
		private bool _IsMain;
		
		private System.DateTime _CreateTime;
		
		private string _Description;
		
		private string _ThumbPath;
		
		private EntityRef<StudentProfessional> _StudentProfessional;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnDocumentTypeChanging(int value);
    partial void OnDocumentTypeChanged();
    partial void OnProfessionalIDChanging(int value);
    partial void OnProfessionalIDChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnIsMainChanging(bool value);
    partial void OnIsMainChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnThumbPathChanging(string value);
    partial void OnThumbPathChanged();
    #endregion
		
		public StudentProfessionalAttachment()
		{
			this._StudentProfessional = default(EntityRef<StudentProfessional>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="Int NOT NULL")]
		public int DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessionalID", DbType="Int NOT NULL")]
		public int ProfessionalID
		{
			get
			{
				return this._ProfessionalID;
			}
			set
			{
				if ((this._ProfessionalID != value))
				{
					if (this._StudentProfessional.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfessionalIDChanging(value);
					this.SendPropertyChanging();
					this._ProfessionalID = value;
					this.SendPropertyChanged("ProfessionalID");
					this.OnProfessionalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit NOT NULL")]
		public bool IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this.OnIsMainChanging(value);
					this.SendPropertyChanging();
					this._IsMain = value;
					this.SendPropertyChanged("IsMain");
					this.OnIsMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbPath", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ThumbPath
		{
			get
			{
				return this._ThumbPath;
			}
			set
			{
				if ((this._ThumbPath != value))
				{
					this.OnThumbPathChanging(value);
					this.SendPropertyChanging();
					this._ThumbPath = value;
					this.SendPropertyChanged("ThumbPath");
					this.OnThumbPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentProfessional_StudentProfessionalAttachment", Storage="_StudentProfessional", ThisKey="ProfessionalID", OtherKey="ID", IsForeignKey=true)]
		public StudentProfessional StudentProfessional
		{
			get
			{
				return this._StudentProfessional.Entity;
			}
			set
			{
				StudentProfessional previousValue = this._StudentProfessional.Entity;
				if (((previousValue != value) 
							|| (this._StudentProfessional.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentProfessional.Entity = null;
						previousValue.StudentProfessionalAttachments.Remove(this);
					}
					this._StudentProfessional.Entity = value;
					if ((value != null))
					{
						value.StudentProfessionalAttachments.Add(this);
						this._ProfessionalID = value.ID;
					}
					else
					{
						this._ProfessionalID = default(int);
					}
					this.SendPropertyChanged("StudentProfessional");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentProject")]
	public partial class StudentProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private string _Position;
		
		private string _PositionDescrition;
		
		private string _Evaluate;
		
		private string _TeamDescription;
		
		private int _VerfyStatus;
		
		private System.DateTime _BeginTime;
		
		private System.DateTime _EndTime;
		
		private System.DateTime _CreateTime;
		
		private bool _IsOnline;
		
		private string _StudentNum;
		
		private string _TeacherNum;
		
		private string _EvaluateFromTeacher;
		
		private string _VerifyStatusReason;
		
		private int _UsableLevel;
		
		private int _SkillLevel;
		
		private int _DreativeLevel;
		
		private string _Name;
		
		private EntitySet<StudentProjectAttachment> _StudentProjectAttachments;
		
		private EntitySet<StudentProjectComment> _StudentProjectComments;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnPositionDescritionChanging(string value);
    partial void OnPositionDescritionChanged();
    partial void OnEvaluateChanging(string value);
    partial void OnEvaluateChanged();
    partial void OnTeamDescriptionChanging(string value);
    partial void OnTeamDescriptionChanged();
    partial void OnVerfyStatusChanging(int value);
    partial void OnVerfyStatusChanged();
    partial void OnBeginTimeChanging(System.DateTime value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnStudentNumChanging(string value);
    partial void OnStudentNumChanged();
    partial void OnTeacherNumChanging(string value);
    partial void OnTeacherNumChanged();
    partial void OnEvaluateFromTeacherChanging(string value);
    partial void OnEvaluateFromTeacherChanged();
    partial void OnVerifyStatusReasonChanging(string value);
    partial void OnVerifyStatusReasonChanged();
    partial void OnUsableLevelChanging(int value);
    partial void OnUsableLevelChanged();
    partial void OnSkillLevelChanging(int value);
    partial void OnSkillLevelChanged();
    partial void OnDreativeLevelChanging(int value);
    partial void OnDreativeLevelChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public StudentProject()
		{
			this._StudentProjectAttachments = new EntitySet<StudentProjectAttachment>(new Action<StudentProjectAttachment>(this.attach_StudentProjectAttachments), new Action<StudentProjectAttachment>(this.detach_StudentProjectAttachments));
			this._StudentProjectComments = new EntitySet<StudentProjectComment>(new Action<StudentProjectComment>(this.attach_StudentProjectComments), new Action<StudentProjectComment>(this.detach_StudentProjectComments));
			this._Student = default(EntityRef<Student>);
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionDescrition", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PositionDescrition
		{
			get
			{
				return this._PositionDescrition;
			}
			set
			{
				if ((this._PositionDescrition != value))
				{
					this.OnPositionDescritionChanging(value);
					this.SendPropertyChanging();
					this._PositionDescrition = value;
					this.SendPropertyChanged("PositionDescrition");
					this.OnPositionDescritionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Evaluate", DbType="NVarChar(500)")]
		public string Evaluate
		{
			get
			{
				return this._Evaluate;
			}
			set
			{
				if ((this._Evaluate != value))
				{
					this.OnEvaluateChanging(value);
					this.SendPropertyChanging();
					this._Evaluate = value;
					this.SendPropertyChanged("Evaluate");
					this.OnEvaluateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamDescription", DbType="NVarChar(500)")]
		public string TeamDescription
		{
			get
			{
				return this._TeamDescription;
			}
			set
			{
				if ((this._TeamDescription != value))
				{
					this.OnTeamDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TeamDescription = value;
					this.SendPropertyChanged("TeamDescription");
					this.OnTeamDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerfyStatus", DbType="Int NOT NULL")]
		public int VerfyStatus
		{
			get
			{
				return this._VerfyStatus;
			}
			set
			{
				if ((this._VerfyStatus != value))
				{
					this.OnVerfyStatusChanging(value);
					this.SendPropertyChanging();
					this._VerfyStatus = value;
					this.SendPropertyChanged("VerfyStatus");
					this.OnVerfyStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="DateTime NOT NULL")]
		public System.DateTime BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentNumChanging(value);
					this.SendPropertyChanging();
					this._StudentNum = value;
					this.SendPropertyChanged("StudentNum");
					this.OnStudentNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherNum", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TeacherNum
		{
			get
			{
				return this._TeacherNum;
			}
			set
			{
				if ((this._TeacherNum != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherNumChanging(value);
					this.SendPropertyChanging();
					this._TeacherNum = value;
					this.SendPropertyChanged("TeacherNum");
					this.OnTeacherNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluateFromTeacher", DbType="NVarChar(500)")]
		public string EvaluateFromTeacher
		{
			get
			{
				return this._EvaluateFromTeacher;
			}
			set
			{
				if ((this._EvaluateFromTeacher != value))
				{
					this.OnEvaluateFromTeacherChanging(value);
					this.SendPropertyChanging();
					this._EvaluateFromTeacher = value;
					this.SendPropertyChanged("EvaluateFromTeacher");
					this.OnEvaluateFromTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyStatusReason", DbType="NVarChar(500)")]
		public string VerifyStatusReason
		{
			get
			{
				return this._VerifyStatusReason;
			}
			set
			{
				if ((this._VerifyStatusReason != value))
				{
					this.OnVerifyStatusReasonChanging(value);
					this.SendPropertyChanging();
					this._VerifyStatusReason = value;
					this.SendPropertyChanged("VerifyStatusReason");
					this.OnVerifyStatusReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsableLevel", DbType="Int NOT NULL")]
		public int UsableLevel
		{
			get
			{
				return this._UsableLevel;
			}
			set
			{
				if ((this._UsableLevel != value))
				{
					this.OnUsableLevelChanging(value);
					this.SendPropertyChanging();
					this._UsableLevel = value;
					this.SendPropertyChanged("UsableLevel");
					this.OnUsableLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillLevel", DbType="Int NOT NULL")]
		public int SkillLevel
		{
			get
			{
				return this._SkillLevel;
			}
			set
			{
				if ((this._SkillLevel != value))
				{
					this.OnSkillLevelChanging(value);
					this.SendPropertyChanging();
					this._SkillLevel = value;
					this.SendPropertyChanged("SkillLevel");
					this.OnSkillLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DreativeLevel", DbType="Int NOT NULL")]
		public int DreativeLevel
		{
			get
			{
				return this._DreativeLevel;
			}
			set
			{
				if ((this._DreativeLevel != value))
				{
					this.OnDreativeLevelChanging(value);
					this.SendPropertyChanging();
					this._DreativeLevel = value;
					this.SendPropertyChanged("DreativeLevel");
					this.OnDreativeLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentProject_StudentProjectAttachment", Storage="_StudentProjectAttachments", ThisKey="ID", OtherKey="ProjectID")]
		public EntitySet<StudentProjectAttachment> StudentProjectAttachments
		{
			get
			{
				return this._StudentProjectAttachments;
			}
			set
			{
				this._StudentProjectAttachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentProject_StudentProjectComment", Storage="_StudentProjectComments", ThisKey="ID", OtherKey="ProjectID")]
		public EntitySet<StudentProjectComment> StudentProjectComments
		{
			get
			{
				return this._StudentProjectComments;
			}
			set
			{
				this._StudentProjectComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentProject", Storage="_Student", ThisKey="StudentNum", OtherKey="StudentNum", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentProjects.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentProjects.Add(this);
						this._StudentNum = value.StudentNum;
					}
					else
					{
						this._StudentNum = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_StudentProject", Storage="_Teacher", ThisKey="TeacherNum", OtherKey="TeacherNum", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.StudentProjects.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.StudentProjects.Add(this);
						this._TeacherNum = value.TeacherNum;
					}
					else
					{
						this._TeacherNum = default(string);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentProjectAttachments(StudentProjectAttachment entity)
		{
			this.SendPropertyChanging();
			entity.StudentProject = this;
		}
		
		private void detach_StudentProjectAttachments(StudentProjectAttachment entity)
		{
			this.SendPropertyChanging();
			entity.StudentProject = null;
		}
		
		private void attach_StudentProjectComments(StudentProjectComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentProject = this;
		}
		
		private void detach_StudentProjectComments(StudentProjectComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentProject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentProjectAttachment")]
	public partial class StudentProjectAttachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Path;
		
		private int _DocumentType;
		
		private int _ProjectID;
		
		private int _DisplayOrder;
		
		private bool _IsMain;
		
		private System.DateTime _CreateTime;
		
		private string _Description;
		
		private string _ThumbPath;
		
		private EntityRef<StudentProject> _StudentProject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnDocumentTypeChanging(int value);
    partial void OnDocumentTypeChanged();
    partial void OnProjectIDChanging(int value);
    partial void OnProjectIDChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnIsMainChanging(bool value);
    partial void OnIsMainChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnThumbPathChanging(string value);
    partial void OnThumbPathChanged();
    #endregion
		
		public StudentProjectAttachment()
		{
			this._StudentProject = default(EntityRef<StudentProject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="Int NOT NULL")]
		public int DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Int NOT NULL")]
		public int ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._StudentProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit NOT NULL")]
		public bool IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this.OnIsMainChanging(value);
					this.SendPropertyChanging();
					this._IsMain = value;
					this.SendPropertyChanged("IsMain");
					this.OnIsMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbPath", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ThumbPath
		{
			get
			{
				return this._ThumbPath;
			}
			set
			{
				if ((this._ThumbPath != value))
				{
					this.OnThumbPathChanging(value);
					this.SendPropertyChanging();
					this._ThumbPath = value;
					this.SendPropertyChanged("ThumbPath");
					this.OnThumbPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentProject_StudentProjectAttachment", Storage="_StudentProject", ThisKey="ProjectID", OtherKey="ID", IsForeignKey=true)]
		public StudentProject StudentProject
		{
			get
			{
				return this._StudentProject.Entity;
			}
			set
			{
				StudentProject previousValue = this._StudentProject.Entity;
				if (((previousValue != value) 
							|| (this._StudentProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentProject.Entity = null;
						previousValue.StudentProjectAttachments.Remove(this);
					}
					this._StudentProject.Entity = value;
					if ((value != null))
					{
						value.StudentProjectAttachments.Add(this);
						this._ProjectID = value.ID;
					}
					else
					{
						this._ProjectID = default(int);
					}
					this.SendPropertyChanged("StudentProject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentProjectComment")]
	public partial class StudentProjectComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ProjectID;
		
		private string _UserName;
		
		private int _UserType;
		
		private string _Comment;
		
		private System.DateTime _CreateTime;
		
		private System.Nullable<int> _ParentID;
		
		private EntitySet<StudentProjectComment> _StudentProjectComments;
		
		private EntityRef<StudentProjectComment> _StudentProjectComment1;
		
		private EntityRef<StudentProject> _StudentProject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProjectIDChanging(int value);
    partial void OnProjectIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserTypeChanging(int value);
    partial void OnUserTypeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    #endregion
		
		public StudentProjectComment()
		{
			this._StudentProjectComments = new EntitySet<StudentProjectComment>(new Action<StudentProjectComment>(this.attach_StudentProjectComments), new Action<StudentProjectComment>(this.detach_StudentProjectComments));
			this._StudentProjectComment1 = default(EntityRef<StudentProjectComment>);
			this._StudentProject = default(EntityRef<StudentProject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Int NOT NULL")]
		public int ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._StudentProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="Int NOT NULL")]
		public int UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(2000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._StudentProjectComment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentProjectComment_StudentProjectComment", Storage="_StudentProjectComments", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<StudentProjectComment> StudentProjectComments
		{
			get
			{
				return this._StudentProjectComments;
			}
			set
			{
				this._StudentProjectComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentProjectComment_StudentProjectComment", Storage="_StudentProjectComment1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public StudentProjectComment StudentProjectComment1
		{
			get
			{
				return this._StudentProjectComment1.Entity;
			}
			set
			{
				StudentProjectComment previousValue = this._StudentProjectComment1.Entity;
				if (((previousValue != value) 
							|| (this._StudentProjectComment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentProjectComment1.Entity = null;
						previousValue.StudentProjectComments.Remove(this);
					}
					this._StudentProjectComment1.Entity = value;
					if ((value != null))
					{
						value.StudentProjectComments.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StudentProjectComment1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentProject_StudentProjectComment", Storage="_StudentProject", ThisKey="ProjectID", OtherKey="ID", IsForeignKey=true)]
		public StudentProject StudentProject
		{
			get
			{
				return this._StudentProject.Entity;
			}
			set
			{
				StudentProject previousValue = this._StudentProject.Entity;
				if (((previousValue != value) 
							|| (this._StudentProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentProject.Entity = null;
						previousValue.StudentProjectComments.Remove(this);
					}
					this._StudentProject.Entity = value;
					if ((value != null))
					{
						value.StudentProjectComments.Add(this);
						this._ProjectID = value.ID;
					}
					else
					{
						this._ProjectID = default(int);
					}
					this.SendPropertyChanged("StudentProject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentProjectComments(StudentProjectComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentProjectComment1 = this;
		}
		
		private void detach_StudentProjectComments(StudentProjectComment entity)
		{
			this.SendPropertyChanging();
			entity.StudentProjectComment1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentScore")]
	public partial class StudentScore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private decimal _Score;
		
		private System.Nullable<int> _CourseID;
		
		private string _StudentNum;
		
		private System.DateTime _ExamineTime;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnScoreChanging(decimal value);
    partial void OnScoreChanged();
    partial void OnCourseIDChanging(System.Nullable<int> value);
    partial void OnCourseIDChanged();
    partial void OnStudentNumChanging(string value);
    partial void OnStudentNumChanged();
    partial void OnExamineTimeChanging(System.DateTime value);
    partial void OnExamineTimeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public StudentScore()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Decimal(4,1) NOT NULL")]
		public decimal Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int")]
		public System.Nullable<int> CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentNumChanging(value);
					this.SendPropertyChanging();
					this._StudentNum = value;
					this.SendPropertyChanged("StudentNum");
					this.OnStudentNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamineTime", DbType="DateTime NOT NULL")]
		public System.DateTime ExamineTime
		{
			get
			{
				return this._ExamineTime;
			}
			set
			{
				if ((this._ExamineTime != value))
				{
					this.OnExamineTimeChanging(value);
					this.SendPropertyChanging();
					this._ExamineTime = value;
					this.SendPropertyChanged("ExamineTime");
					this.OnExamineTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentScore", Storage="_Student", ThisKey="StudentNum", OtherKey="StudentNum", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentScores.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentScores.Add(this);
						this._StudentNum = value.StudentNum;
					}
					else
					{
						this._StudentNum = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentVisited")]
	public partial class StudentVisited : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StudentNum;
		
		private System.DateTime _VisitTime;
		
		private string _IPAddress;
		
		private string _UserName;
		
		private int _UserType;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStudentNumChanging(string value);
    partial void OnStudentNumChanged();
    partial void OnVisitTimeChanging(System.DateTime value);
    partial void OnVisitTimeChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserTypeChanging(int value);
    partial void OnUserTypeChanged();
    #endregion
		
		public StudentVisited()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentNumChanging(value);
					this.SendPropertyChanging();
					this._StudentNum = value;
					this.SendPropertyChanged("StudentNum");
					this.OnStudentNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitTime", DbType="DateTime NOT NULL")]
		public System.DateTime VisitTime
		{
			get
			{
				return this._VisitTime;
			}
			set
			{
				if ((this._VisitTime != value))
				{
					this.OnVisitTimeChanging(value);
					this.SendPropertyChanging();
					this._VisitTime = value;
					this.SendPropertyChanged("VisitTime");
					this.OnVisitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(40)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="Int NOT NULL")]
		public int UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentVisited", Storage="_Student", ThisKey="StudentNum", OtherKey="StudentNum", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentVisiteds.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentVisiteds.Add(this);
						this._StudentNum = value.StudentNum;
					}
					else
					{
						this._StudentNum = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemLog")]
	public partial class SystemLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Message;
		
		private System.DateTime _LogTime;
		
		private string _IPAddress;
		
		private int _LogType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnLogTimeChanging(System.DateTime value);
    partial void OnLogTimeChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnLogTypeChanging(int value);
    partial void OnLogTypeChanged();
    #endregion
		
		public SystemLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTime", DbType="DateTime NOT NULL")]
		public System.DateTime LogTime
		{
			get
			{
				return this._LogTime;
			}
			set
			{
				if ((this._LogTime != value))
				{
					this.OnLogTimeChanging(value);
					this.SendPropertyChanging();
					this._LogTime = value;
					this.SendPropertyChanged("LogTime");
					this.OnLogTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(40)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogType", DbType="Int NOT NULL")]
		public int LogType
		{
			get
			{
				return this._LogType;
			}
			set
			{
				if ((this._LogType != value))
				{
					this.OnLogTypeChanging(value);
					this.SendPropertyChanging();
					this._LogType = value;
					this.SendPropertyChanged("LogType");
					this.OnLogTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teacher")]
	public partial class Teacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TeacherNum;
		
		private string _NameZh;
		
		private string _NameEn;
		
		private string _NativePlace;
		
		private string _School;
		
		private string _MarjorName;
		
		private string _Telephone;
		
		private bool _IsMarried;
		
		private string _Email;
		
		private string _ContactPhone;
		
		private string _WorkingYear;
		
		private bool _IsOnline;
		
		private bool _IsDelete;
		
		private string _Password;
		
		private string _EducationCode;
		
		private string _Description;
		
		private string _DepartCode;
		
		private string _Photo;
		
		private string _ThumbPath;
		
		private string _TeacherGroupCode;
		
		private int _Sex;
		
		private EntitySet<StudentActivity> _StudentActivities;
		
		private EntitySet<StudentCourse> _StudentCourses;
		
		private EntitySet<StudentProject> _StudentProjects;
		
		private EntitySet<TeacherRelativeCourse> _TeacherRelativeCourses;
		
		private EntitySet<TeacherRelativeGroup> _TeacherRelativeGroups;
		
		private EntityRef<Depart> _Depart;
		
		private EntityRef<Education> _Education;
		
		private EntityRef<TeacherGroup> _TeacherGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTeacherNumChanging(string value);
    partial void OnTeacherNumChanged();
    partial void OnNameZhChanging(string value);
    partial void OnNameZhChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNativePlaceChanging(string value);
    partial void OnNativePlaceChanged();
    partial void OnSchoolChanging(string value);
    partial void OnSchoolChanged();
    partial void OnMarjorNameChanging(string value);
    partial void OnMarjorNameChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnIsMarriedChanging(bool value);
    partial void OnIsMarriedChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnWorkingYearChanging(string value);
    partial void OnWorkingYearChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEducationCodeChanging(string value);
    partial void OnEducationCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDepartCodeChanging(string value);
    partial void OnDepartCodeChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnThumbPathChanging(string value);
    partial void OnThumbPathChanged();
    partial void OnTeacherGroupCodeChanging(string value);
    partial void OnTeacherGroupCodeChanged();
    partial void OnSexChanging(int value);
    partial void OnSexChanged();
    #endregion
		
		public Teacher()
		{
			this._StudentActivities = new EntitySet<StudentActivity>(new Action<StudentActivity>(this.attach_StudentActivities), new Action<StudentActivity>(this.detach_StudentActivities));
			this._StudentCourses = new EntitySet<StudentCourse>(new Action<StudentCourse>(this.attach_StudentCourses), new Action<StudentCourse>(this.detach_StudentCourses));
			this._StudentProjects = new EntitySet<StudentProject>(new Action<StudentProject>(this.attach_StudentProjects), new Action<StudentProject>(this.detach_StudentProjects));
			this._TeacherRelativeCourses = new EntitySet<TeacherRelativeCourse>(new Action<TeacherRelativeCourse>(this.attach_TeacherRelativeCourses), new Action<TeacherRelativeCourse>(this.detach_TeacherRelativeCourses));
			this._TeacherRelativeGroups = new EntitySet<TeacherRelativeGroup>(new Action<TeacherRelativeGroup>(this.attach_TeacherRelativeGroups), new Action<TeacherRelativeGroup>(this.detach_TeacherRelativeGroups));
			this._Depart = default(EntityRef<Depart>);
			this._Education = default(EntityRef<Education>);
			this._TeacherGroup = default(EntityRef<TeacherGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherNum", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TeacherNum
		{
			get
			{
				return this._TeacherNum;
			}
			set
			{
				if ((this._TeacherNum != value))
				{
					this.OnTeacherNumChanging(value);
					this.SendPropertyChanging();
					this._TeacherNum = value;
					this.SendPropertyChanged("TeacherNum");
					this.OnTeacherNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameZh", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string NameZh
		{
			get
			{
				return this._NameZh;
			}
			set
			{
				if ((this._NameZh != value))
				{
					this.OnNameZhChanging(value);
					this.SendPropertyChanging();
					this._NameZh = value;
					this.SendPropertyChanged("NameZh");
					this.OnNameZhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="VarChar(30)")]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NativePlace", DbType="NVarChar(100)")]
		public string NativePlace
		{
			get
			{
				return this._NativePlace;
			}
			set
			{
				if ((this._NativePlace != value))
				{
					this.OnNativePlaceChanging(value);
					this.SendPropertyChanging();
					this._NativePlace = value;
					this.SendPropertyChanged("NativePlace");
					this.OnNativePlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string School
		{
			get
			{
				return this._School;
			}
			set
			{
				if ((this._School != value))
				{
					this.OnSchoolChanging(value);
					this.SendPropertyChanging();
					this._School = value;
					this.SendPropertyChanged("School");
					this.OnSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarjorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MarjorName
		{
			get
			{
				return this._MarjorName;
			}
			set
			{
				if ((this._MarjorName != value))
				{
					this.OnMarjorNameChanging(value);
					this.SendPropertyChanging();
					this._MarjorName = value;
					this.SendPropertyChanged("MarjorName");
					this.OnMarjorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMarried", DbType="Bit NOT NULL")]
		public bool IsMarried
		{
			get
			{
				return this._IsMarried;
			}
			set
			{
				if ((this._IsMarried != value))
				{
					this.OnIsMarriedChanging(value);
					this.SendPropertyChanging();
					this._IsMarried = value;
					this.SendPropertyChanged("IsMarried");
					this.OnIsMarriedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="VarChar(20)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingYear", DbType="NVarChar(10)")]
		public string WorkingYear
		{
			get
			{
				return this._WorkingYear;
			}
			set
			{
				if ((this._WorkingYear != value))
				{
					this.OnWorkingYearChanging(value);
					this.SendPropertyChanging();
					this._WorkingYear = value;
					this.SendPropertyChanged("WorkingYear");
					this.OnWorkingYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationCode", DbType="Char(3)")]
		public string EducationCode
		{
			get
			{
				return this._EducationCode;
			}
			set
			{
				if ((this._EducationCode != value))
				{
					if (this._Education.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationCodeChanging(value);
					this.SendPropertyChanging();
					this._EducationCode = value;
					this.SendPropertyChanged("EducationCode");
					this.OnEducationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string DepartCode
		{
			get
			{
				return this._DepartCode;
			}
			set
			{
				if ((this._DepartCode != value))
				{
					if (this._Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartCode = value;
					this.SendPropertyChanged("DepartCode");
					this.OnDepartCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(200)")]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbPath", DbType="NVarChar(100)")]
		public string ThumbPath
		{
			get
			{
				return this._ThumbPath;
			}
			set
			{
				if ((this._ThumbPath != value))
				{
					this.OnThumbPathChanging(value);
					this.SendPropertyChanging();
					this._ThumbPath = value;
					this.SendPropertyChanged("ThumbPath");
					this.OnThumbPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherGroupCode", DbType="Char(4)")]
		public string TeacherGroupCode
		{
			get
			{
				return this._TeacherGroupCode;
			}
			set
			{
				if ((this._TeacherGroupCode != value))
				{
					if (this._TeacherGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._TeacherGroupCode = value;
					this.SendPropertyChanged("TeacherGroupCode");
					this.OnTeacherGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Int NOT NULL")]
		public int Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_StudentActivity", Storage="_StudentActivities", ThisKey="TeacherNum", OtherKey="TeacherNum")]
		public EntitySet<StudentActivity> StudentActivities
		{
			get
			{
				return this._StudentActivities;
			}
			set
			{
				this._StudentActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_StudentCourse", Storage="_StudentCourses", ThisKey="TeacherNum", OtherKey="TeacherNum")]
		public EntitySet<StudentCourse> StudentCourses
		{
			get
			{
				return this._StudentCourses;
			}
			set
			{
				this._StudentCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_StudentProject", Storage="_StudentProjects", ThisKey="TeacherNum", OtherKey="TeacherNum")]
		public EntitySet<StudentProject> StudentProjects
		{
			get
			{
				return this._StudentProjects;
			}
			set
			{
				this._StudentProjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_TeacherRelativeCourse", Storage="_TeacherRelativeCourses", ThisKey="TeacherNum", OtherKey="TeacherNum")]
		public EntitySet<TeacherRelativeCourse> TeacherRelativeCourses
		{
			get
			{
				return this._TeacherRelativeCourses;
			}
			set
			{
				this._TeacherRelativeCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_TeacherRelativeGroup", Storage="_TeacherRelativeGroups", ThisKey="TeacherNum", OtherKey="TeacherNum")]
		public EntitySet<TeacherRelativeGroup> TeacherRelativeGroups
		{
			get
			{
				return this._TeacherRelativeGroups;
			}
			set
			{
				this._TeacherRelativeGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depart_Teacher", Storage="_Depart", ThisKey="DepartCode", OtherKey="Code", IsForeignKey=true)]
		public Depart Depart
		{
			get
			{
				return this._Depart.Entity;
			}
			set
			{
				Depart previousValue = this._Depart.Entity;
				if (((previousValue != value) 
							|| (this._Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Depart.Entity = null;
						previousValue.Teachers.Remove(this);
					}
					this._Depart.Entity = value;
					if ((value != null))
					{
						value.Teachers.Add(this);
						this._DepartCode = value.Code;
					}
					else
					{
						this._DepartCode = default(string);
					}
					this.SendPropertyChanged("Depart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Education_Teacher", Storage="_Education", ThisKey="EducationCode", OtherKey="Code", IsForeignKey=true)]
		public Education Education
		{
			get
			{
				return this._Education.Entity;
			}
			set
			{
				Education previousValue = this._Education.Entity;
				if (((previousValue != value) 
							|| (this._Education.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Education.Entity = null;
						previousValue.Teachers.Remove(this);
					}
					this._Education.Entity = value;
					if ((value != null))
					{
						value.Teachers.Add(this);
						this._EducationCode = value.Code;
					}
					else
					{
						this._EducationCode = default(string);
					}
					this.SendPropertyChanged("Education");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeacherGroup_Teacher", Storage="_TeacherGroup", ThisKey="TeacherGroupCode", OtherKey="Code", IsForeignKey=true)]
		public TeacherGroup TeacherGroup
		{
			get
			{
				return this._TeacherGroup.Entity;
			}
			set
			{
				TeacherGroup previousValue = this._TeacherGroup.Entity;
				if (((previousValue != value) 
							|| (this._TeacherGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeacherGroup.Entity = null;
						previousValue.Teachers.Remove(this);
					}
					this._TeacherGroup.Entity = value;
					if ((value != null))
					{
						value.Teachers.Add(this);
						this._TeacherGroupCode = value.Code;
					}
					else
					{
						this._TeacherGroupCode = default(string);
					}
					this.SendPropertyChanged("TeacherGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentActivities(StudentActivity entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_StudentActivities(StudentActivity entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
		
		private void attach_StudentCourses(StudentCourse entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_StudentCourses(StudentCourse entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
		
		private void attach_StudentProjects(StudentProject entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_StudentProjects(StudentProject entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
		
		private void attach_TeacherRelativeCourses(TeacherRelativeCourse entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_TeacherRelativeCourses(TeacherRelativeCourse entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
		
		private void attach_TeacherRelativeGroups(TeacherRelativeGroup entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_TeacherRelativeGroups(TeacherRelativeGroup entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeacherGroup")]
	public partial class TeacherGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private int _TeacherGroupType;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _LastUpdateTime;
		
		private EntitySet<Teacher> _Teachers;
		
		private EntitySet<TeacherRelativeGroup> _TeacherRelativeGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTeacherGroupTypeChanging(int value);
    partial void OnTeacherGroupTypeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnLastUpdateTimeChanging(System.DateTime value);
    partial void OnLastUpdateTimeChanged();
    #endregion
		
		public TeacherGroup()
		{
			this._Teachers = new EntitySet<Teacher>(new Action<Teacher>(this.attach_Teachers), new Action<Teacher>(this.detach_Teachers));
			this._TeacherRelativeGroups = new EntitySet<TeacherRelativeGroup>(new Action<TeacherRelativeGroup>(this.attach_TeacherRelativeGroups), new Action<TeacherRelativeGroup>(this.detach_TeacherRelativeGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherGroupType", DbType="Int NOT NULL")]
		public int TeacherGroupType
		{
			get
			{
				return this._TeacherGroupType;
			}
			set
			{
				if ((this._TeacherGroupType != value))
				{
					this.OnTeacherGroupTypeChanging(value);
					this.SendPropertyChanging();
					this._TeacherGroupType = value;
					this.SendPropertyChanged("TeacherGroupType");
					this.OnTeacherGroupTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdateTime
		{
			get
			{
				return this._LastUpdateTime;
			}
			set
			{
				if ((this._LastUpdateTime != value))
				{
					this.OnLastUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateTime = value;
					this.SendPropertyChanged("LastUpdateTime");
					this.OnLastUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeacherGroup_Teacher", Storage="_Teachers", ThisKey="Code", OtherKey="TeacherGroupCode")]
		public EntitySet<Teacher> Teachers
		{
			get
			{
				return this._Teachers;
			}
			set
			{
				this._Teachers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeacherGroup_TeacherRelativeGroup", Storage="_TeacherRelativeGroups", ThisKey="Code", OtherKey="GroupCode")]
		public EntitySet<TeacherRelativeGroup> TeacherRelativeGroups
		{
			get
			{
				return this._TeacherRelativeGroups;
			}
			set
			{
				this._TeacherRelativeGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Teachers(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.TeacherGroup = this;
		}
		
		private void detach_Teachers(Teacher entity)
		{
			this.SendPropertyChanging();
			entity.TeacherGroup = null;
		}
		
		private void attach_TeacherRelativeGroups(TeacherRelativeGroup entity)
		{
			this.SendPropertyChanging();
			entity.TeacherGroup = this;
		}
		
		private void detach_TeacherRelativeGroups(TeacherRelativeGroup entity)
		{
			this.SendPropertyChanging();
			entity.TeacherGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeacherRelativeCourse")]
	public partial class TeacherRelativeCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CourseCode;
		
		private string _MarjorCode;
		
		private bool _IsAdviserTeacher;
		
		private System.DateTime _BeginTime;
		
		private System.DateTime _EndTime;
		
		private bool _IsBroken;
		
		private string _TeacherNum;
		
		private System.Nullable<System.DateTime> _BrokenTime;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Marjor> _Marjor;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCourseCodeChanging(string value);
    partial void OnCourseCodeChanged();
    partial void OnMarjorCodeChanging(string value);
    partial void OnMarjorCodeChanged();
    partial void OnIsAdviserTeacherChanging(bool value);
    partial void OnIsAdviserTeacherChanged();
    partial void OnBeginTimeChanging(System.DateTime value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnIsBrokenChanging(bool value);
    partial void OnIsBrokenChanged();
    partial void OnTeacherNumChanging(string value);
    partial void OnTeacherNumChanged();
    partial void OnBrokenTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBrokenTimeChanged();
    #endregion
		
		public TeacherRelativeCourse()
		{
			this._Course = default(EntityRef<Course>);
			this._Marjor = default(EntityRef<Marjor>);
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCode", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string CourseCode
		{
			get
			{
				return this._CourseCode;
			}
			set
			{
				if ((this._CourseCode != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseCodeChanging(value);
					this.SendPropertyChanging();
					this._CourseCode = value;
					this.SendPropertyChanged("CourseCode");
					this.OnCourseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarjorCode", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string MarjorCode
		{
			get
			{
				return this._MarjorCode;
			}
			set
			{
				if ((this._MarjorCode != value))
				{
					if (this._Marjor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarjorCodeChanging(value);
					this.SendPropertyChanging();
					this._MarjorCode = value;
					this.SendPropertyChanged("MarjorCode");
					this.OnMarjorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdviserTeacher", DbType="Bit NOT NULL")]
		public bool IsAdviserTeacher
		{
			get
			{
				return this._IsAdviserTeacher;
			}
			set
			{
				if ((this._IsAdviserTeacher != value))
				{
					this.OnIsAdviserTeacherChanging(value);
					this.SendPropertyChanging();
					this._IsAdviserTeacher = value;
					this.SendPropertyChanged("IsAdviserTeacher");
					this.OnIsAdviserTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="DateTime NOT NULL")]
		public System.DateTime BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBroken", DbType="Bit NOT NULL")]
		public bool IsBroken
		{
			get
			{
				return this._IsBroken;
			}
			set
			{
				if ((this._IsBroken != value))
				{
					this.OnIsBrokenChanging(value);
					this.SendPropertyChanging();
					this._IsBroken = value;
					this.SendPropertyChanged("IsBroken");
					this.OnIsBrokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherNum", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TeacherNum
		{
			get
			{
				return this._TeacherNum;
			}
			set
			{
				if ((this._TeacherNum != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherNumChanging(value);
					this.SendPropertyChanging();
					this._TeacherNum = value;
					this.SendPropertyChanged("TeacherNum");
					this.OnTeacherNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokenTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> BrokenTime
		{
			get
			{
				return this._BrokenTime;
			}
			set
			{
				if ((this._BrokenTime != value))
				{
					this.OnBrokenTimeChanging(value);
					this.SendPropertyChanging();
					this._BrokenTime = value;
					this.SendPropertyChanged("BrokenTime");
					this.OnBrokenTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_TeacherRelativeCourse", Storage="_Course", ThisKey="CourseCode", OtherKey="Code", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.TeacherRelativeCourses.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.TeacherRelativeCourses.Add(this);
						this._CourseCode = value.Code;
					}
					else
					{
						this._CourseCode = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marjor_TeacherRelativeCourse", Storage="_Marjor", ThisKey="MarjorCode", OtherKey="Code", IsForeignKey=true)]
		public Marjor Marjor
		{
			get
			{
				return this._Marjor.Entity;
			}
			set
			{
				Marjor previousValue = this._Marjor.Entity;
				if (((previousValue != value) 
							|| (this._Marjor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marjor.Entity = null;
						previousValue.TeacherRelativeCourses.Remove(this);
					}
					this._Marjor.Entity = value;
					if ((value != null))
					{
						value.TeacherRelativeCourses.Add(this);
						this._MarjorCode = value.Code;
					}
					else
					{
						this._MarjorCode = default(string);
					}
					this.SendPropertyChanged("Marjor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_TeacherRelativeCourse", Storage="_Teacher", ThisKey="TeacherNum", OtherKey="TeacherNum", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.TeacherRelativeCourses.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.TeacherRelativeCourses.Add(this);
						this._TeacherNum = value.TeacherNum;
					}
					else
					{
						this._TeacherNum = default(string);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeacherRelativeGroup")]
	public partial class TeacherRelativeGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TeacherNum;
		
		private string _GroupCode;
		
		private System.DateTime _CreateTime;
		
		private EntityRef<TeacherGroup> _TeacherGroup;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTeacherNumChanging(string value);
    partial void OnTeacherNumChanged();
    partial void OnGroupCodeChanging(string value);
    partial void OnGroupCodeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public TeacherRelativeGroup()
		{
			this._TeacherGroup = default(EntityRef<TeacherGroup>);
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherNum", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TeacherNum
		{
			get
			{
				return this._TeacherNum;
			}
			set
			{
				if ((this._TeacherNum != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherNumChanging(value);
					this.SendPropertyChanging();
					this._TeacherNum = value;
					this.SendPropertyChanged("TeacherNum");
					this.OnTeacherNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCode", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					if (this._TeacherGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._GroupCode = value;
					this.SendPropertyChanged("GroupCode");
					this.OnGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeacherGroup_TeacherRelativeGroup", Storage="_TeacherGroup", ThisKey="GroupCode", OtherKey="Code", IsForeignKey=true)]
		public TeacherGroup TeacherGroup
		{
			get
			{
				return this._TeacherGroup.Entity;
			}
			set
			{
				TeacherGroup previousValue = this._TeacherGroup.Entity;
				if (((previousValue != value) 
							|| (this._TeacherGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeacherGroup.Entity = null;
						previousValue.TeacherRelativeGroups.Remove(this);
					}
					this._TeacherGroup.Entity = value;
					if ((value != null))
					{
						value.TeacherRelativeGroups.Add(this);
						this._GroupCode = value.Code;
					}
					else
					{
						this._GroupCode = default(string);
					}
					this.SendPropertyChanged("TeacherGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_TeacherRelativeGroup", Storage="_Teacher", ThisKey="TeacherNum", OtherKey="TeacherNum", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.TeacherRelativeGroups.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.TeacherRelativeGroups.Add(this);
						this._TeacherNum = value.TeacherNum;
					}
					else
					{
						this._TeacherNum = default(string);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetHotEnterpriseFrontListResult
	{
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private string _Address;
		
		private string _LicenseNo;
		
		private string _ContactName;
		
		private string _ContactPhone;
		
		private bool _IsOnline;
		
		private string _ScopeCode;
		
		private string _EnterpriseTypeCode;
		
		private string _RegionCode;
		
		private string _IndustryCode;
		
		private string _Email;
		
		private string _UserName;
		
		private string _Password;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _UpdateTime;
		
		private string _Corporation;
		
		private string _WebSite;
		
		private int _VerifyStatus;
		
		private bool _IsDeleted;
		
		public GetHotEnterpriseFrontListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNo", DbType="NVarChar(100)")]
		public string LicenseNo
		{
			get
			{
				return this._LicenseNo;
			}
			set
			{
				if ((this._LicenseNo != value))
				{
					this._LicenseNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this._ContactName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="VarChar(20)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this._ContactPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this._IsOnline = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeCode", DbType="Char(3)")]
		public string ScopeCode
		{
			get
			{
				return this._ScopeCode;
			}
			set
			{
				if ((this._ScopeCode != value))
				{
					this._ScopeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseTypeCode", DbType="Char(3)")]
		public string EnterpriseTypeCode
		{
			get
			{
				return this._EnterpriseTypeCode;
			}
			set
			{
				if ((this._EnterpriseTypeCode != value))
				{
					this._EnterpriseTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionCode", DbType="VarChar(6)")]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this._RegionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryCode", DbType="Char(3)")]
		public string IndustryCode
		{
			get
			{
				return this._IndustryCode;
			}
			set
			{
				if ((this._IndustryCode != value))
				{
					this._IndustryCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this._CreateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this._UpdateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corporation", DbType="NVarChar(100)")]
		public string Corporation
		{
			get
			{
				return this._Corporation;
			}
			set
			{
				if ((this._Corporation != value))
				{
					this._Corporation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="NVarChar(200)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this._WebSite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyStatus", DbType="Int NOT NULL")]
		public int VerifyStatus
		{
			get
			{
				return this._VerifyStatus;
			}
			set
			{
				if ((this._VerifyStatus != value))
				{
					this._VerifyStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
	}
	
	public partial class GetTop20ArticleListResult
	{
		
		private int _ID;
		
		private string _Title;
		
		private string _Content;
		
		private System.DateTime _CreateTime;
		
		private bool _IsOnline;
		
		private string _DepartCode;
		
		private int _DepartAdminID;
		
		private System.DateTime _LastUpdateTime;
		
		public GetTop20ArticleListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this._Content = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this._CreateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this._IsOnline = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string DepartCode
		{
			get
			{
				return this._DepartCode;
			}
			set
			{
				if ((this._DepartCode != value))
				{
					this._DepartCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartAdminID", DbType="Int NOT NULL")]
		public int DepartAdminID
		{
			get
			{
				return this._DepartAdminID;
			}
			set
			{
				if ((this._DepartAdminID != value))
				{
					this._DepartAdminID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdateTime
		{
			get
			{
				return this._LastUpdateTime;
			}
			set
			{
				if ((this._LastUpdateTime != value))
				{
					this._LastUpdateTime = value;
				}
			}
		}
	}
	
	public partial class GetTop20RandomStudentListResult
	{
		
		private int _ID;
		
		private string _StudentNum;
		
		private string _NameZh;
		
		private string _NameEn;
		
		private int _Sex;
		
		private string _IDentityNum;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _Email;
		
		private string _Telephone;
		
		private string _WebSite;
		
		private int _Politics;
		
		private string _Tall;
		
		private System.Nullable<decimal> _Weight;
		
		private string _Class;
		
		private string _Period;
		
		private bool _IsMarried;
		
		private bool _IsOnline;
		
		private bool _IsDelete;
		
		private string _Address;
		
		private string _Photo;
		
		private string _NativePlace;
		
		private string _Description;
		
		private string _Interested;
		
		private string _Activity;
		
		private string _Movie;
		
		private string _Book;
		
		private string _Program;
		
		private string _Password;
		
		private string _DepartCode;
		
		private string _MarjorCode;
		
		private string _Music;
		
		private string _AboutMe;
		
		private string _ThumbPath;
		
		public GetTop20RandomStudentListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					this._StudentNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameZh", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string NameZh
		{
			get
			{
				return this._NameZh;
			}
			set
			{
				if ((this._NameZh != value))
				{
					this._NameZh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="VarChar(30)")]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this._NameEn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Int NOT NULL")]
		public int Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDentityNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string IDentityNum
		{
			get
			{
				return this._IDentityNum;
			}
			set
			{
				if ((this._IDentityNum != value))
				{
					this._IDentityNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this._Birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this._Telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="NVarChar(200)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this._WebSite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Politics", DbType="Int NOT NULL")]
		public int Politics
		{
			get
			{
				return this._Politics;
			}
			set
			{
				if ((this._Politics != value))
				{
					this._Politics = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tall", DbType="VarChar(10)")]
		public string Tall
		{
			get
			{
				return this._Tall;
			}
			set
			{
				if ((this._Tall != value))
				{
					this._Tall = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this._Weight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this._Class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this._Period = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMarried", DbType="Bit NOT NULL")]
		public bool IsMarried
		{
			get
			{
				return this._IsMarried;
			}
			set
			{
				if ((this._IsMarried != value))
				{
					this._IsMarried = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this._IsOnline = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this._IsDelete = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(200)")]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this._Photo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NativePlace", DbType="NVarChar(100)")]
		public string NativePlace
		{
			get
			{
				return this._NativePlace;
			}
			set
			{
				if ((this._NativePlace != value))
				{
					this._NativePlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interested", DbType="NVarChar(500)")]
		public string Interested
		{
			get
			{
				return this._Interested;
			}
			set
			{
				if ((this._Interested != value))
				{
					this._Interested = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="NVarChar(500)")]
		public string Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this._Activity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Movie", DbType="NVarChar(500)")]
		public string Movie
		{
			get
			{
				return this._Movie;
			}
			set
			{
				if ((this._Movie != value))
				{
					this._Movie = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book", DbType="NVarChar(500)")]
		public string Book
		{
			get
			{
				return this._Book;
			}
			set
			{
				if ((this._Book != value))
				{
					this._Book = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Program", DbType="NVarChar(500)")]
		public string Program
		{
			get
			{
				return this._Program;
			}
			set
			{
				if ((this._Program != value))
				{
					this._Program = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string DepartCode
		{
			get
			{
				return this._DepartCode;
			}
			set
			{
				if ((this._DepartCode != value))
				{
					this._DepartCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarjorCode", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string MarjorCode
		{
			get
			{
				return this._MarjorCode;
			}
			set
			{
				if ((this._MarjorCode != value))
				{
					this._MarjorCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Music", DbType="NVarChar(500)")]
		public string Music
		{
			get
			{
				return this._Music;
			}
			set
			{
				if ((this._Music != value))
				{
					this._Music = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutMe", DbType="NVarChar(500)")]
		public string AboutMe
		{
			get
			{
				return this._AboutMe;
			}
			set
			{
				if ((this._AboutMe != value))
				{
					this._AboutMe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbPath", DbType="NVarChar(100)")]
		public string ThumbPath
		{
			get
			{
				return this._ThumbPath;
			}
			set
			{
				if ((this._ThumbPath != value))
				{
					this._ThumbPath = value;
				}
			}
		}
	}
	
	public partial class GetTopEvaluate20StudentListResult
	{
		
		private int _ID;
		
		private string _StudentNum;
		
		private string _NameZh;
		
		private string _NameEn;
		
		private int _Sex;
		
		private string _IDentityNum;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _Email;
		
		private string _Telephone;
		
		private string _WebSite;
		
		private int _Politics;
		
		private string _Tall;
		
		private System.Nullable<decimal> _Weight;
		
		private string _Class;
		
		private string _Period;
		
		private bool _IsMarried;
		
		private bool _IsOnline;
		
		private bool _IsDelete;
		
		private string _Address;
		
		private string _Photo;
		
		private string _NativePlace;
		
		private string _Description;
		
		private string _Interested;
		
		private string _Activity;
		
		private string _Movie;
		
		private string _Book;
		
		private string _Program;
		
		private string _Password;
		
		private string _DepartCode;
		
		private string _MarjorCode;
		
		private string _Music;
		
		private string _AboutMe;
		
		private string _ThumbPath;
		
		private System.Nullable<decimal> _Total;
		
		public GetTopEvaluate20StudentListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string StudentNum
		{
			get
			{
				return this._StudentNum;
			}
			set
			{
				if ((this._StudentNum != value))
				{
					this._StudentNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameZh", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string NameZh
		{
			get
			{
				return this._NameZh;
			}
			set
			{
				if ((this._NameZh != value))
				{
					this._NameZh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="VarChar(30)")]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this._NameEn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Int NOT NULL")]
		public int Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDentityNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string IDentityNum
		{
			get
			{
				return this._IDentityNum;
			}
			set
			{
				if ((this._IDentityNum != value))
				{
					this._IDentityNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this._Birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this._Telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="NVarChar(200)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this._WebSite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Politics", DbType="Int NOT NULL")]
		public int Politics
		{
			get
			{
				return this._Politics;
			}
			set
			{
				if ((this._Politics != value))
				{
					this._Politics = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tall", DbType="VarChar(10)")]
		public string Tall
		{
			get
			{
				return this._Tall;
			}
			set
			{
				if ((this._Tall != value))
				{
					this._Tall = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this._Weight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this._Class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this._Period = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMarried", DbType="Bit NOT NULL")]
		public bool IsMarried
		{
			get
			{
				return this._IsMarried;
			}
			set
			{
				if ((this._IsMarried != value))
				{
					this._IsMarried = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this._IsOnline = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this._IsDelete = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(200)")]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this._Photo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NativePlace", DbType="NVarChar(100)")]
		public string NativePlace
		{
			get
			{
				return this._NativePlace;
			}
			set
			{
				if ((this._NativePlace != value))
				{
					this._NativePlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interested", DbType="NVarChar(500)")]
		public string Interested
		{
			get
			{
				return this._Interested;
			}
			set
			{
				if ((this._Interested != value))
				{
					this._Interested = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="NVarChar(500)")]
		public string Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this._Activity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Movie", DbType="NVarChar(500)")]
		public string Movie
		{
			get
			{
				return this._Movie;
			}
			set
			{
				if ((this._Movie != value))
				{
					this._Movie = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book", DbType="NVarChar(500)")]
		public string Book
		{
			get
			{
				return this._Book;
			}
			set
			{
				if ((this._Book != value))
				{
					this._Book = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Program", DbType="NVarChar(500)")]
		public string Program
		{
			get
			{
				return this._Program;
			}
			set
			{
				if ((this._Program != value))
				{
					this._Program = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string DepartCode
		{
			get
			{
				return this._DepartCode;
			}
			set
			{
				if ((this._DepartCode != value))
				{
					this._DepartCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarjorCode", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string MarjorCode
		{
			get
			{
				return this._MarjorCode;
			}
			set
			{
				if ((this._MarjorCode != value))
				{
					this._MarjorCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Music", DbType="NVarChar(500)")]
		public string Music
		{
			get
			{
				return this._Music;
			}
			set
			{
				if ((this._Music != value))
				{
					this._Music = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutMe", DbType="NVarChar(500)")]
		public string AboutMe
		{
			get
			{
				return this._AboutMe;
			}
			set
			{
				if ((this._AboutMe != value))
				{
					this._AboutMe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbPath", DbType="NVarChar(100)")]
		public string ThumbPath
		{
			get
			{
				return this._ThumbPath;
			}
			set
			{
				if ((this._ThumbPath != value))
				{
					this._ThumbPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(17,6)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
